webpackJsonp([0],[,,,,,,,,,,function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),o=n(0),c=a(o),d=n(20),p=a(d),u=n(77),h=n(72),f=a(h),g=n(23),y=a(g),m=n(1),v=n(27),b=a(v),x=n(26),w=a(x),j=n(64),S=a(j),k=n(90),N=a(k),P=n(25),I=a(P),O=n(19),E=a(O),C=n(86),T=a(C),_=n(83),A=a(_);n(118);var D=/^#[^\/]/,q=/^((\.{1,2}\/)|([\w-]+[\/.]))/,M=function(t){function e(){return s(this,e),r(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return i(e,t),l(e,[{key:"componentDidMount",value:function(){if(this.markdownContainer){window.scrollTo&&window.scrollTo(0,0);var t=this.props.match.url.split("?")[0].split("/").slice(2).join("/"),e=t.split("/").slice(0,-1).join("/"),n=window.location.hash.split("?"),a=y.default.parse(n[1]||""),s=a.lang||p.default.get("docsite_language")||E.default.defaultLanguage,r=Array.from(this.markdownContainer.querySelectorAll("img")),i=Array.from(this.markdownContainer.querySelectorAll("a"));r.forEach(function(t){var n=t.getAttribute("src");q.test(n)&&(t.src=window.location.protocol+"//"+window.location.host+f.default.join(window.location.pathname,"./docs",s,e,n))}),i.forEach(function(t){var n=t.getAttribute("href");q.test(n)&&(t.href=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search+"#/"+f.default.join("./docs",e,n))}),this.markdownContainer.addEventListener("click",function(t){if("a"===t.target.nodeName.toLowerCase()&&t.target.getAttribute("href")&&D.test(t.target.getAttribute("href"))){t.preventDefault();var e=t.target.getAttribute("href").slice(1);u.scroller.scrollTo(e,{duration:1e3,smooth:"easeInOutQuint"})}})}}},{key:"componentDidUpdate",value:function(){this.componentDidMount()}},{key:"render",value:function(){var t=this,e=window.location.hash.split("?"),n=y.default.parse(e[1]||""),a=n.lang||p.default.get("docsite_language")||E.default.defaultLanguage;if("zh-cn"!==a&&"en-us"!==a&&(a=E.default.defaultLanguage),a!==p.default.get("docsite_language")&&p.default.set("docsite_language",a,{expires:365,path:""}),!n.lang)return c.default.createElement(m.Redirect,{to:this.props.match.url+"?lang="+a});var s=T.default[a],r=this.props.match.url.split("/").slice(2).join("/"),i=A.default[a].find(function(t){return t.filename===r}),l=i&&i.__html?i.__html:"";return c.default.createElement("div",{className:"documentation-page"},c.default.createElement(w.default,{type:"normal",logo:"./img/nacos_colorful.png",language:a,onLanguageChange:this.onLanguageChange}),c.default.createElement(S.default,{img:"./img/docs.png",text:s.barText}),c.default.createElement("section",{className:"content-section"},c.default.createElement("div",{className:"content-body"},c.default.createElement(N.default,{dataSource:s.sidemenu}),c.default.createElement("div",{className:"doc-content markdown-body",ref:function(e){t.markdownContainer=e},dangerouslySetInnerHTML:{__html:l}}))),c.default.createElement(I.default,{logo:"./img/nacos_gray.png"}))}}]),e}(b.default);e.default=M},,,,,,function(t,e,n){"use strict";function a(t,e,n,a){n&&Object.defineProperty(t,e,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(a):void 0})}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t,e,n,a,s){var r={};return Object.keys(a).forEach(function(t){r[t]=a[t]}),r.enumerable=!!r.enumerable,r.configurable=!!r.configurable,("value"in r||r.initializer)&&(r.writable=!0),r=n.slice().reverse().reduce(function(n,a){return a(t,e,n)||n},r),s&&void 0!==r.initializer&&(r.value=r.initializer?r.initializer.call(s):void 0,r.initializer=void 0),void 0===r.initializer&&(Object.defineProperty(t,e,r),r=null),r}function i(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function l(t){if(!t||!t.hasOwnProperty)return!1;for(var e=["value","initializer","get","set"],n=0,a=e.length;n<a;n++)if(t.hasOwnProperty(e[n]))return!0;return!1}function o(t,e){return l(e[e.length-1])?t.apply(void 0,i(e).concat([[]])):function(){return t.apply(void 0,i(Array.prototype.slice.call(arguments)).concat([e]))}}function c(t){return!1===t.hasOwnProperty(I)&&j(t,I,{value:new P}),t[I]}function d(t){var e={};return O(t).forEach(function(n){return e[n]=S(t,n)}),e}function p(t){return function(e){return Object.defineProperty(this,t,{configurable:!0,writable:!0,enumerable:!0,value:e}),e}}function u(t,e){return t.bind?t.bind(e):function(){return t.apply(e,arguments)}}function h(t){!0!==C[t]&&(C[t]=!0,E("DEPRECATION: "+t))}e.d=o,e.c=c,n.d(e,"g",function(){return O}),e.f=d,e.e=p,e.a=u,n.d(e,"b",function(){return E}),e.h=h;var f,g,y,m,v,b,x=n(22),w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},j=Object.defineProperty,S=Object.getOwnPropertyDescriptor,k=Object.getOwnPropertyNames,N=Object.getOwnPropertySymbols,P=(f=function t(){s(this,t),a(this,"debounceTimeoutIds",g,this),a(this,"throttleTimeoutIds",y,this),a(this,"throttlePreviousTimestamps",m,this),a(this,"throttleTrailingArgs",v,this),a(this,"profileLastRan",b,this)},g=r(f.prototype,"debounceTimeoutIds",[x.a],{enumerable:!0,initializer:function(){return{}}}),y=r(f.prototype,"throttleTimeoutIds",[x.a],{enumerable:!0,initializer:function(){return{}}}),m=r(f.prototype,"throttlePreviousTimestamps",[x.a],{enumerable:!0,initializer:function(){return{}}}),v=r(f.prototype,"throttleTrailingArgs",[x.a],{enumerable:!0,initializer:function(){return null}}),b=r(f.prototype,"profileLastRan",[x.a],{enumerable:!0,initializer:function(){return null}}),f),I="function"==typeof Symbol?Symbol("__core_decorators__"):"__core_decorators__",O=N?function(t){return k(t).concat(N(t))}:k,E=function(){return"object"===("undefined"==typeof console?"undefined":w(console))&&console&&"function"==typeof console.warn?u(console.warn,console):function(){}}(),C={}},function(t,e,n){var a,s;/*!
  Copyright (c) 2016 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
!function(){"use strict";function n(){for(var t=[],e=0;e<arguments.length;e++){var a=arguments[e];if(a){var s=typeof a;if("string"===s||"number"===s)t.push(a);else if(Array.isArray(a))t.push(n.apply(null,a));else if("object"===s)for(var i in a)r.call(a,i)&&a[i]&&t.push(i)}}return t.join(" ")}var r={}.hasOwnProperty;void 0!==t&&t.exports?t.exports=n:(a=[],void 0!==(s=function(){return n}.apply(e,a))&&(t.exports=s))}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(39);n.d(e,"override",function(){return a.a});var s=n(32);n.d(e,"deprecate",function(){return s.a}),n.d(e,"deprecated",function(){return s.a});var r=n(42);n.d(e,"suppressWarnings",function(){return r.a});var i=n(35);n.d(e,"memoize",function(){return i.a});var l=n(29);n.d(e,"autobind",function(){return l.a});var o=n(41);n.d(e,"readonly",function(){return o.a});var c=n(33);n.d(e,"enumerable",function(){return c.a});var d=n(38);n.d(e,"nonenumerable",function(){return d.a});var p=n(37);n.d(e,"nonconfigurable",function(){return p.a});var u=n(30);n.d(e,"debounce",function(){return u.a});var h=n(43);n.d(e,"throttle",function(){return h.a});var f=n(31);n.d(e,"decorate",function(){return f.a});var g=n(36);n.d(e,"mixin",function(){return g.a}),n.d(e,"mixins",function(){return g.a});var y=n(22);n.d(e,"lazyInitialize",function(){return y.a});var m=n(44);n.d(e,"time",function(){return m.a});var v=n(34);n.d(e,"extendDescriptor",function(){return v.a});var b=n(40);n.d(e,"profile",function(){return b.a});var x=n(28);n.d(e,"applyDecorators",function(){return x.a})},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={defaultLanguage:"en-us","en-us":{pageMenu:[{text:"HOME",link:"/"},{text:"DOCS",link:"/docs/quick-start.md"},{text:"BLOG",link:"/blog"},{text:"COMMUNITY",link:"/community"}],disclaimer:{title:"Vision",content:"By providing an easy-to-use service infrastructure such as dynamic service discovery, service configuration, service sharing and management and etc., Nacos help users better construct, deliver and manage their own service platform, reuse and composite business service faster and deliver value of business innovation more quickly so as to win market for users in the era of cloud native and in all cloud environments, such as private, mixed, or public clouds."},documentation:{title:"Documentation",list:[{text:"Overview",link:"/docs/what-is-nacos.md"},{text:"Quick start",link:"/docs/quick-start.md"},{text:"Developer guide",link:"/docs/contributing.md"}]},resources:{title:"Resources",list:[{text:"Community",link:"/community"}]},copyright:"@ 2018 The Nacos Authors | An Alibaba Middleware (Aliware) Project"},"zh-cn":{pageMenu:[{text:"首页",link:"/"},{text:"文档",link:"/docs/what-is-nacos.md"},{text:"博客",link:"/blog"},{text:"社区",link:"/community"}],disclaimer:{title:"愿景",content:"Nacos 通过提供简单易用的动态服务发现、服务配置、服务共享与管理等服务基础设施，帮助用户在云原生时代，在私有云、混合云或者公有云等所有云环境中，更好的构建、交付、管理自己的微服务平台，更快的复用和组合业务服务，更快的交付商业创新的价值，从而为用户赢得市场。"},documentation:{title:"文档",list:[{text:"概览",link:"/docs/what-is-nacos.md"},{text:"快速开始",link:"/docs/quick-start.md"},{text:"开发者指南",link:"/docs/contributing.md"}]},resources:{title:"资源",list:[{text:"社区",link:"/community"}]},copyright:"@ 2018 The Nacos Authors | An Alibaba Middleware (Aliware) Project"}}},function(t,e,n){var a,s;!function(r){var i=!1;if(a=r,void 0!==(s="function"==typeof a?a.call(e,n,e,t):a)&&(t.exports=s),i=!0,t.exports=r(),i=!0,!i){var l=window.Cookies,o=window.Cookies=r();o.noConflict=function(){return window.Cookies=l,o}}}(function(){function t(){for(var t=0,e={};t<arguments.length;t++){var n=arguments[t];for(var a in n)e[a]=n[a]}return e}function e(n){function a(e,s,r){var i;if("undefined"!=typeof document){if(arguments.length>1){if(r=t({path:"/"},a.defaults,r),"number"==typeof r.expires){var l=new Date;l.setMilliseconds(l.getMilliseconds()+864e5*r.expires),r.expires=l}r.expires=r.expires?r.expires.toUTCString():"";try{i=JSON.stringify(s),/^[\{\[]/.test(i)&&(s=i)}catch(t){}s=n.write?n.write(s,e):encodeURIComponent(String(s)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),e=encodeURIComponent(String(e)),e=e.replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent),e=e.replace(/[\(\)]/g,escape);var o="";for(var c in r)r[c]&&(o+="; "+c,!0!==r[c]&&(o+="="+r[c]));return document.cookie=e+"="+s+o}e||(i={});for(var d=document.cookie?document.cookie.split("; "):[],p=/(%[0-9A-Z]{2})+/g,u=0;u<d.length;u++){var h=d[u].split("="),f=h.slice(1).join("=");this.json||'"'!==f.charAt(0)||(f=f.slice(1,-1));try{var g=h[0].replace(p,decodeURIComponent);if(f=n.read?n.read(f,g):n(f,g)||f.replace(p,decodeURIComponent),this.json)try{f=JSON.parse(f)}catch(t){}if(e===g){i=f;break}e||(i[g]=f)}catch(t){}}return i}}return a.set=a,a.get=function(t){return a.call(a,t)},a.getJSON=function(){return a.apply({json:!0},[].slice.call(arguments))},a.defaults={},a.remove=function(e,n){a(e,"",t(n,{expires:-1}))},a.withConverter=e,a}return e(function(){})})},function(t,e,n){t.exports=n(47)()},function(t,e,n){"use strict";function a(t,e,a){var s=a.configurable,l=a.enumerable,o=a.initializer,c=a.value;return{configurable:s,enumerable:l,get:function(){if(this!==t){var n=o?o.call(this):c;return i(this,e,{configurable:s,enumerable:l,writable:!0,value:n}),n}},set:n.i(r.e)(e)}}function s(){for(var t=arguments.length,e=Array(t),s=0;s<t;s++)e[s]=arguments[s];return n.i(r.d)(a,e)}e.a=s;var r=n(16),i=Object.defineProperty},function(t,e,n){"use strict";e.decode=e.parse=n(49),e.encode=e.stringify=n(50)},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=function(t){if(t=t?0===t.indexOf("#")?t:"#"+t:"",history.pushState){var e=window.location;history.pushState(null,null,t||e.pathname+e.search)}else location.hash=t},s=function(){return window.location.hash.replace(/^#/,"")},r=function(t){return function(e){return t.contains?t!=e&&t.contains(e):!!(16&t.compareDocumentPosition(e))}},i=function(t,e){return t===document?e.getBoundingClientRect().top+(window.scrollY||window.pageYOffset):"relative"===getComputedStyle(t).position?e.offsetTop:e.getBoundingClientRect().top+t.scrollTop};e.default={pushHash:a,getHash:s,filterElementInContainer:r,scrollOffset:i}},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0});var s=n(0),r=a(s),i=n(1),l=n(20),o=a(l),c=n(19),d=a(c);n(55);var p=function(t){var e=o.default.get("docsite_language")||d.default.defaultLanguage,n=d.default[e];return r.default.createElement("footer",{className:"footer-container"},r.default.createElement("div",{className:"footer-body"},r.default.createElement("img",{src:t.logo}),r.default.createElement("div",{className:"cols-container"},r.default.createElement("div",{className:"col col-12"},r.default.createElement("h3",null,n.disclaimer.title),r.default.createElement("p",null,n.disclaimer.content)),r.default.createElement("div",{className:"col col-6"},r.default.createElement("dl",null,r.default.createElement("dt",null,n.documentation.title),n.documentation.list.map(function(t,e){return r.default.createElement("dd",{key:e},r.default.createElement(i.Link,{to:t.link},t.text))}))),r.default.createElement("div",{className:"col col-6"},r.default.createElement("dl",null,r.default.createElement("dt",null,n.resources.title),n.resources.list.map(function(t,e){return r.default.createElement("dd",{key:e},r.default.createElement(i.Link,{to:t.link},t.text))})))),r.default.createElement("div",{className:"copyright"},r.default.createElement("span",null,n.copyright))))};e.default=p},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function s(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function i(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function l(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function o(t,e,n,a,s){var r={};return Object.keys(a).forEach(function(t){r[t]=a[t]}),r.enumerable=!!r.enumerable,r.configurable=!!r.configurable,("value"in r||r.initializer)&&(r.writable=!0),r=n.slice().reverse().reduce(function(n,a){return a(t,e,n)||n},r),s&&void 0!==r.initializer&&(r.value=r.initializer?r.initializer.call(s):void 0,r.initializer=void 0),void 0===r.initializer&&(Object.defineProperty(t,e,r),r=null),r}Object.defineProperty(e,"__esModule",{value:!0});var c,d=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),p=n(0),u=a(p),h=n(1),f=n(17),g=a(f),y=n(18),m=n(19),v=a(m);n(56);var b=[{text:"中",value:"en-us"},{text:"En",value:"zh-cn"}],x=function(){},w={type:"primary",language:"en-us",onLanguageChange:x},j=(c=function(t){function e(t){r(this,e);var n=i(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.state={menuBodyVisible:!1,language:t.language},n}return l(e,t),d(e,[{key:"toggleMenu",value:function(){this.setState({menuBodyVisible:!this.state.menuBodyVisible})}},{key:"switchLang",value:function(){var t=void 0;t="zh-cn"===this.state.language?"en-us":"zh-cn",this.setState({language:t}),this.props.onLanguageChange(t)}},{key:"componentWillReceiveProps",value:function(t){this.setState({language:t.language})}},{key:"render",value:function(){var t=this.props,e=t.type,n=t.logo,a=t.onLanguageChange,r=this.state,i=r.menuBodyVisible,l=r.language;return u.default.createElement("header",{className:(0,g.default)(s({"header-container":!0},"header-container-"+e,!0))},u.default.createElement("div",{className:"header-body"},u.default.createElement(h.Link,{to:"/"},u.default.createElement("img",{className:"logo",alt:v.default.name,title:v.default.name,src:n})),a!==x?u.default.createElement("span",{className:(0,g.default)(s({"language-switch":!0},"language-switch-"+e,!0)),onClick:this.switchLang},b.find(function(t){return t.value===l}).text):null,u.default.createElement("div",{className:(0,g.default)({"header-menu":!0,"header-menu-open":i})},u.default.createElement("img",{className:"header-menu-toggle",onClick:this.toggleMenu,src:"primary"===e?"./img/menu_white.png":"./img/menu_gray.png"}),u.default.createElement("ul",null,v.default[l].pageMenu.map(function(t){if(t.link){var n;return u.default.createElement("li",{className:(0,g.default)((n={"menu-item":!0},s(n,"menu-item-"+e,!0),s(n,"menu-item-"+e+"-active",window.location.hash.split("?")[0].slice(1).split("/")[1]===t.link.split("/")[1]),n))},u.default.createElement(h.Link,{to:t.link},t.text))}if(t.href)return u.default.createElement("li",{className:(0,g.default)(s({"menu-item":!0},"menu-item-"+e,!0))},u.default.createElement("a",{href:t.href,target:"__blank"},t.text))})))))}}]),e}(u.default.Component),o(c.prototype,"toggleMenu",[y.autobind],Object.getOwnPropertyDescriptor(c.prototype,"toggleMenu"),c.prototype),o(c.prototype,"switchLang",[y.autobind],Object.getOwnPropertyDescriptor(c.prototype,"switchLang"),c.prototype),c);j.defaultProps=w,e.default=j},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var l,o=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),c=n(0),d=a(c),p=n(18),u=n(20),h=a(u),f=n(23),g=a(f),y=n(53),m=a(y),v=(l=function(t){function e(){s(this,e);var t=r(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return m.default.initialize("UA-121449408-1"),t}return i(e,t),o(e,[{key:"componentWillReceiveProps",value:function(){var t=window.location.pathname+window.location.hash;t.includes("/#/docs/")?t.includes("?lang=")&&m.default.pageview(t):m.default.pageview(t)}},{key:"onLanguageChange",value:function(t){this.props.location;h.default.set("docsite_language",t,{expires:365,path:""});var e=window.location.hash.split("?");if(e&&e.length){var n=g.default.parse(e[1]||"");n.lang=t,window.location.hash=(e[0]||"")+"?"+g.default.stringify(n)}this.forceUpdate()}}]),e}(d.default.Component),function(t,e,n,a,s){var r={};return Object.keys(a).forEach(function(t){r[t]=a[t]}),r.enumerable=!!r.enumerable,r.configurable=!!r.configurable,("value"in r||r.initializer)&&(r.writable=!0),r=n.slice().reverse().reduce(function(n,a){return a(t,e,n)||n},r),s&&void 0!==r.initializer&&(r.value=r.initializer?r.initializer.call(s):void 0,r.initializer=void 0),void 0===r.initializer&&(Object.defineProperty(t,e,r),r=null),r}(l.prototype,"onLanguageChange",[p.autobind],Object.getOwnPropertyDescriptor(l.prototype,"onLanguageChange"),l.prototype),l);e.default=v},function(t,e,n){"use strict";function a(t,e){var n=t.prototype;for(var a in e)for(var i=e[a],l=0,o=i.length;l<o;l++){var c=i[l];s(n,a,c(n,a,r(n,a)))}return t}e.a=a;var s=Object.defineProperty,r=Object.getOwnPropertyDescriptor},function(t,e,n){"use strict";function a(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function s(t,e){if("undefined"==typeof WeakMap)throw new Error("Using @autobind on "+e.name+"() requires WeakMap support due to its use of super."+e.name+"()\n      See https://github.com/jayphelps/core-decorators.js/issues/20");u||(u=new WeakMap),!1===u.has(t)&&u.set(t,new WeakMap);var a=u.get(t);return!1===a.has(e)&&a.set(e,n.i(c.a)(e,t)),a.get(e)}function r(t){for(var e=n.i(c.f)(t.prototype),a=n.i(c.g)(e),s=0,r=a.length;s<r;s++){var l=a[s],o=e[l];"function"==typeof o.value&&"constructor"!==l&&d(t.prototype,l,i(t.prototype,l,o))}}function i(t,e,a){var r=a.value,i=a.configurable,l=a.enumerable;if("function"!=typeof r)throw new SyntaxError("@autobind can only be used on functions, not: "+r);var o=t.constructor;return{configurable:i,enumerable:l,get:function(){if(this===t)return r;if(this.constructor!==o&&p(this).constructor===o)return r;if(this.constructor!==o&&e in this.constructor.prototype)return s(this,r);var a=n.i(c.a)(r,this);return d(this,e,{configurable:!0,writable:!0,enumerable:!1,value:a}),a},set:n.i(c.e)(e)}}function l(t){return 1===t.length?r.apply(void 0,a(t)):i.apply(void 0,a(t))}function o(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return 0===e.length?function(){return l(arguments)}:l(e)}e.a=o;var c=n(16),d=Object.defineProperty,p=Object.getPrototypeOf,u=void 0},function(t,e,n){"use strict";function a(t,e,a,s){var c=l(s,2),d=c[0],p=void 0===d?o:d,u=c[1],h=void 0!==u&&u,f=a.value;if("function"!=typeof f)throw new SyntaxError("Only functions can be debounced");return i({},a,{value:function(){var t=this,a=n.i(r.c)(this),s=a.debounceTimeoutIds,i=s[e],l=h&&!i,o=arguments;clearTimeout(i),s[e]=setTimeout(function(){delete s[e],h||f.apply(t,o)},p),l&&f.apply(this,o)}})}function s(){n.i(r.h)("@debounce is deprecated and will be removed shortly. Use @debounce from lodash-decorators.\n\n  https://www.npmjs.com/package/lodash-decorators");for(var t=arguments.length,e=Array(t),s=0;s<t;s++)e[s]=arguments[s];return n.i(r.d)(a,e)}e.a=s;var r=n(16),i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},l=function(){function t(t,e){var n=[],a=!0,s=!1,r=void 0;try{for(var i,l=t[Symbol.iterator]();!(a=(i=l.next()).done)&&(n.push(i.value),!e||n.length!==e);a=!0);}catch(t){s=!0,r=t}finally{try{!a&&l.return&&l.return()}finally{if(s)throw r}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o=300},function(t,e,n){"use strict";function a(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function s(t){return Array.isArray(t)?t:Array.from(t)}function r(t,e,r,i){var c=s(i),d=c[0],p=c.slice(1),u=r.configurable,h=r.enumerable,f=r.writable,g=r.get,y=r.set,m=r.value,v=!!g;return{configurable:u,enumerable:h,get:function(){var t=v?g.call(this):m,n=d.call.apply(d,[this,t].concat(a(p)));if(v)return n;var s={configurable:u,enumerable:h};return s.value=n,s.writable=f,o(this,e,s),n},set:v?y:n.i(l.e)()}}function i(){for(var t=arguments.length,e=Array(t),a=0;a<t;a++)e[a]=arguments[a];return n.i(l.d)(r,e)}e.a=i;var l=n(16),o=Object.defineProperty},function(t,e,n){"use strict";function a(t,e,a,s){var c=l(s,2),d=c[0],p=void 0===d?o:d,u=c[1],h=void 0===u?{}:u;if("function"!=typeof a.value)throw new SyntaxError("Only functions can be marked as deprecated");var f=t.constructor.name+"#"+e;return h.url&&(p+="\n\n    See "+h.url+" for more details.\n\n"),i({},a,{value:function(){return n.i(r.b)("DEPRECATION "+f+": "+p),a.value.apply(this,arguments)}})}function s(){for(var t=arguments.length,e=Array(t),s=0;s<t;s++)e[s]=arguments[s];return n.i(r.d)(a,e)}e.a=s;var r=n(16),i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},l=function(){function t(t,e){var n=[],a=!0,s=!1,r=void 0;try{for(var i,l=t[Symbol.iterator]();!(a=(i=l.next()).done)&&(n.push(i.value),!e||n.length!==e);a=!0);}catch(t){s=!0,r=t}finally{try{!a&&l.return&&l.return()}finally{if(s)throw r}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o="This function will be removed in future versions."},function(t,e,n){"use strict";function a(t,e,n){return n.enumerable=!0,n}function s(){for(var t=arguments.length,e=Array(t),s=0;s<t;s++)e[s]=arguments[s];return n.i(r.d)(a,e)}e.a=s;var r=n(16)},function(t,e,n){"use strict";function a(t,e,n){var a=l(t),s=o(a,e);return i({},s,{value:n.value,initializer:n.initializer,get:n.get||s.get,set:n.set||s.set})}function s(){for(var t=arguments.length,e=Array(t),s=0;s<t;s++)e[s]=arguments[s];return n.i(r.d)(a,e)}e.a=s;var r=n(16),i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},l=Object.getPrototypeOf,o=Object.getOwnPropertyDescriptor},function(t,e,n){"use strict";function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function s(t,e){return e===Object(e)?e:t[e]||(t[e]={})}function r(t,e,n,a,s){var r=e.apply(t,n);return a[s]=r,r}function i(t){var e=void 0,n=void 0;return t.value?(e=t.value,n="value"):t.get?(e=t.get,n="get"):t.set&&(e=t.set,n="set"),{fn:e,wrapKey:n}}function l(t,e,n){var l=i(n),o=l.fn,c=l.wrapKey,p=new WeakMap,u=Object.create(null),h=Object.create(null),f=0;return d({},n,a({},c,function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];for(var a="0",i=0,l=e.length;i<l;i++){var c=e[i],d=s(h,c),g=p.get(d);void 0===g&&(g=++f,p.set(d,g)),a+=g}return u[a]||r(this,o,arguments,u,a)}))}function o(){n.i(c.h)("@memoize is deprecated and will be removed shortly. Use @memoize from lodash-decorators.\n\n  https://www.npmjs.com/package/lodash-decorators");for(var t=arguments.length,e=Array(t),a=0;a<t;a++)e[a]=arguments[a];return n.i(c.d)(l,e)}e.a=o;var c=n(16),d=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t}},function(t,e,n){"use strict";function a(t){return"[object Symbol]"===Object.prototype.toString.call(t)&&"object"===(void 0===t?"undefined":o(t))}function s(t,e){if(a(t)){do{if(e===Object.prototype)return void 0!==e[t];if(e.hasOwnProperty(t))return!0}while(e=d(e));return!1}return t in e}function r(t,e){if(!e.length)throw new SyntaxError("@mixin() class "+t.name+" requires at least one mixin as an argument");for(var a=0,r=e.length;a<r;a++)for(var i=n.i(l.f)(e[a]),o=n.i(l.g)(i),d=0,p=o.length;d<p;d++){var u=o[d];s(u,t.prototype)||c(t.prototype,u,i[u])}}function i(){for(var t=arguments.length,e=Array(t),a=0;a<t;a++)e[a]=arguments[a];return n.i(l.h)("@mixin is deprecated and will be removed shortly. Use @mixin from lodash-decorators.\n\n  https://www.npmjs.com/package/lodash-decorators"),"function"==typeof e[0]?r(e[0],[]):function(t){return r(t,e)}}e.a=i;var l=n(16),o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c=Object.defineProperty,d=Object.getPrototypeOf},function(t,e,n){"use strict";function a(t,e,n){return n.configurable=!1,n}function s(){for(var t=arguments.length,e=Array(t),s=0;s<t;s++)e[s]=arguments[s];return n.i(r.d)(a,e)}e.a=s;var r=n(16)},function(t,e,n){"use strict";function a(t,e,n){return n.enumerable=!1,n}function s(){for(var t=arguments.length,e=Array(t),s=0;s<t;s++)e[s]=arguments[s];return n.i(r.d)(a,e)}e.a=s;var r=n(16)},function(t,e,n){"use strict";function a(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t){return t.hasOwnProperty("value")?"data":t.hasOwnProperty("get")||t.hasOwnProperty("set")?"accessor":"data"}function r(t,e,n){n.assert(t.length===e.length)}function i(t,e,n){var a=h(t.value),s=h(e.value);if("undefined"===a&&"undefined"===s&&n.error("descriptor values are both undefined. (class properties are are not currently supported)'"),a!==s){("function"===s&&void 0===a||void 0!==a)&&n.error('value types do not match. {parent} is "'+a+'", {child} is "'+s+'"')}switch(s){case"function":r(t.value,e.value,n);break;default:n.error('Unexpected error. Please file a bug with: {parent} is "'+a+'", {child} is "'+s+'"')}}function l(t,e,n){var a="function"==typeof t.get,s="function"==typeof e.get,i="function"==typeof t.set,l="function"==typeof e.set;(a||s)&&(!a&&i&&n.error("{parent} is setter but {child} is getter"),!s&&l&&n.error("{parent} is getter but {child} is setter"),r(t.get,e.get,n)),(i||l)&&(!i&&a&&n.error("{parent} is getter but {child} is setter"),!l&&s&&n.error("{parent} is setter but {child} is getter"),r(t.set,e.set,n))}function o(t,e,n){var a=s(t),r=s(e);switch(a!==r&&n.error('descriptor types do not match. {parent} is "'+a+'", {child} is "'+r+'"'),r){case"data":i(t,e,n);break;case"accessor":l(t,e,n)}}function c(t,e){for(var n=0,a=m.length;n<a;n++){var s=m[n],r=s(e);if(r in t)return r}return null}function d(t,e,n){n.key=e;var a=Object.getPrototypeOf(t),s=Object.getOwnPropertyDescriptor(a,e),r=new y(a,t,s,n);if(void 0===s){var i=c(a,e),l=i?'\n\n  Did you mean "'+i+'"?':"";r.error("No descriptor matching {child} was found on the prototype chain."+l)}return o(s,n,r),n}function p(){for(var t=arguments.length,e=Array(t),a=0;a<t;a++)e[a]=arguments[a];return n.i(u.d)(d,e)}e.a=p;var u=n(16),h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),g=/^function ([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?(\([^\)]*\))[\s\S]+$/,y=function(){function t(e,n,s,r){a(this,t),this.parentKlass=e,this.childKlass=n,this.parentDescriptor=s,this.childDescriptor=r}return f(t,[{key:"_getTopic",value:function(t){return void 0===t?null:"value"in t?t.value:"get"in t?t.get:"set"in t?t.set:void 0}},{key:"_extractTopicSignature",value:function(t){switch(void 0===t?"undefined":h(t)){case"function":return this._extractFunctionSignature(t);default:return this.key}}},{key:"_extractFunctionSignature",value:function(t){var e=this;return t.toString().replace(g,function(t){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.key)+arguments[2]})}},{key:"key",get:function(){return this.childDescriptor.key}},{key:"parentNotation",get:function(){return this.parentKlass.constructor.name+"#"+this.parentPropertySignature}},{key:"childNotation",get:function(){return this.childKlass.constructor.name+"#"+this.childPropertySignature}},{key:"parentTopic",get:function(){return this._getTopic(this.parentDescriptor)}},{key:"childTopic",get:function(){return this._getTopic(this.childDescriptor)}},{key:"parentPropertySignature",get:function(){return this._extractTopicSignature(this.parentTopic)}},{key:"childPropertySignature",get:function(){return this._extractTopicSignature(this.childTopic)}}]),f(t,[{key:"assert",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";!0!==t&&this.error("{child} does not properly override {parent}"+e)}},{key:"error",value:function(t){var e=this;throw t=t.replace("{parent}",function(t){return e.parentNotation}).replace("{child}",function(t){return e.childNotation}),new SyntaxError(t)}}]),t}(),m=[function(t){return t.toLowerCase()},function(t){return t.toUpperCase()},function(t){return t+"s"},function(t){return t.slice(0,-1)},function(t){return t.slice(1,t.length)}]},function(t,e,n){"use strict";function a(t,e,a,c){var d=l(c,3),p=d[0],u=void 0===p?null:p,h=d[1],f=void 0!==h&&h,g=d[2],y=void 0===g?o:g;if(!s.__enabled)return s.__warned||(y.warn("console.profile is not supported. All @profile decorators are disabled."),s.__warned=!0),a;var m=a.value;if(null===u&&(u=t.constructor.name+"."+e),"function"!=typeof m)throw new SyntaxError("@profile can only be used on functions, not: "+m);return i({},a,{value:function(){var t=Date.now(),e=n.i(r.c)(this);(!0===f&&!e.profileLastRan||!1===f||"number"==typeof f&&t-e.profileLastRan>f||"function"==typeof f&&f.apply(this,arguments))&&(y.profile(u),e.profileLastRan=t);try{return m.apply(this,arguments)}finally{y.profileEnd(u)}}})}function s(){for(var t=arguments.length,e=Array(t),s=0;s<t;s++)e[s]=arguments[s];return n.i(r.d)(a,e)}e.a=s;var r=n(16),i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},l=function(){function t(t,e){var n=[],a=!0,s=!1,r=void 0;try{for(var i,l=t[Symbol.iterator]();!(a=(i=l.next()).done)&&(n.push(i.value),!e||n.length!==e);a=!0);}catch(t){s=!0,r=t}finally{try{!a&&l.return&&l.return()}finally{if(s)throw r}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o=(console,{profile:console.profile?n.i(r.a)(console.profile,console):function(){},profileEnd:console.profileEnd?n.i(r.a)(console.profileEnd,console):function(){},warn:r.b});s.__enabled=!!console.profile,s.__warned=!1},function(t,e,n){"use strict";function a(t,e,n){return n.writable=!1,n}function s(){for(var t=arguments.length,e=Array(t),s=0;s<t;s++)e[s]=arguments[s];return n.i(r.d)(a,e)}e.a=s;var r=n(16)},function(t,e,n){"use strict";function a(){}function s(t,e,n){if("object"===("undefined"==typeof console?"undefined":c(console))){var s=console.warn;console.warn=a;var r=e.apply(t,n);return console.warn=s,r}return e.apply(t,n)}function r(t,e,n){return o({},n,{value:function(){return s(this,n.value,arguments)}})}function i(){for(var t=arguments.length,e=Array(t),a=0;a<t;a++)e[a]=arguments[a];return n.i(l.d)(r,e)}e.a=i;var l=n(16),o=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t}},function(t,e,n){"use strict";function a(t,e,a,s){var c=l(s,2),d=c[0],p=void 0===d?o:d,u=c[1],h=void 0===u?{}:u,f=a.value;if("function"!=typeof f)throw new SyntaxError("Only functions can be throttled");return!1!==h.leading&&(h.leading=!0),!1!==h.trailing&&(h.trailing=!0),i({},a,{value:function(){var t=this,a=n.i(r.c)(this),s=a.throttleTimeoutIds,i=a.throttlePreviousTimestamps,l=s[e],o=i[e]||0,c=Date.now();h.trailing&&(a.throttleTrailingArgs=arguments),o||!1!==h.leading||(o=c);var d=p-(c-o);d<=0?(clearTimeout(l),delete s[e],i[e]=c,f.apply(this,arguments)):!l&&h.trailing&&(s[e]=setTimeout(function(){i[e]=!1===h.leading?0:Date.now(),delete s[e],f.apply(t,a.throttleTrailingArgs),a.throttleTrailingArgs=null},d))}})}function s(){n.i(r.h)("@throttle is deprecated and will be removed shortly. Use @throttle from lodash-decorators.\n\n  https://www.npmjs.com/package/lodash-decorators");for(var t=arguments.length,e=Array(t),s=0;s<t;s++)e[s]=arguments[s];return n.i(r.d)(a,e)}e.a=s;var r=n(16),i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},l=function(){function t(t,e){var n=[],a=!0,s=!1,r=void 0;try{for(var i,l=t[Symbol.iterator]();!(a=(i=l.next()).done)&&(n.push(i.value),!e||n.length!==e);a=!0);}catch(t){s=!0,r=t}finally{try{!a&&l.return&&l.return()}finally{if(s)throw r}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o=300},function(t,e,n){"use strict";function a(t,e,n,a){var s=l(a,2),r=s[0],o=void 0===r?null:r,p=s[1],u=void 0===p?c:p,h=n.value;if(null===o&&(o=t.constructor.name+"."+e),"function"!=typeof h)throw new SyntaxError("@time can only be used on functions, not: "+h);return i({},n,{value:function(){var t=o+"-"+d;d++,u.time(t);try{return h.apply(this,arguments)}finally{u.timeEnd(t)}}})}function s(){for(var t=arguments.length,e=Array(t),s=0;s<t;s++)e[s]=arguments[s];return n.i(r.d)(a,e)}e.a=s;var r=n(16),i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},l=function(){function t(t,e){var n=[],a=!0,s=!1,r=void 0;try{for(var i,l=t[Symbol.iterator]();!(a=(i=l.next()).done)&&(n.push(i.value),!e||n.length!==e);a=!0);}catch(t){s=!0,r=t}finally{try{!a&&l.return&&l.return()}finally{if(s)throw r}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o={},c={time:console.time?console.time.bind(console):function(t){o[t]=new Date},timeEnd:console.timeEnd?console.timeEnd.bind(console):function(t){var e=new Date,n=e-o[t];delete o[t],console.log(t+": "+n+"ms")}},d=0},function(t,e,n){"use strict";function a(t){return function(){return t}}var s=function(){};s.thatReturns=a,s.thatReturnsFalse=a(!1),s.thatReturnsTrue=a(!0),s.thatReturnsNull=a(null),s.thatReturnsThis=function(){return this},s.thatReturnsArgument=function(t){return t},t.exports=s},function(t,e,n){"use strict";function a(t,e,n,a,r,i,l,o){if(s(e),!t){var c;if(void 0===e)c=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var d=[n,a,r,i,l,o],p=0;c=new Error(e.replace(/%s/g,function(){return d[p++]})),c.name="Invariant Violation"}throw c.framesToPop=1,c}}var s=function(t){};t.exports=a},function(t,e,n){"use strict";var a=n(45),s=n(46),r=n(48);t.exports=function(){function t(t,e,n,a,i,l){l!==r&&s(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}function e(){return t}t.isRequired=t;var n={array:t,bool:t,func:t,number:t,object:t,string:t,symbol:t,any:t,arrayOf:e,element:t,instanceOf:e,node:t,objectOf:e,oneOf:e,oneOfType:e,shape:e,exact:e};return n.checkPropTypes=a,n.PropTypes=n,n}},function(t,e,n){"use strict";t.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(t,e,n){"use strict";function a(t,e){return Object.prototype.hasOwnProperty.call(t,e)}t.exports=function(t,e,n,r){e=e||"&",n=n||"=";var i={};if("string"!=typeof t||0===t.length)return i;var l=/\+/g;t=t.split(e);var o=1e3;r&&"number"==typeof r.maxKeys&&(o=r.maxKeys);var c=t.length;o>0&&c>o&&(c=o);for(var d=0;d<c;++d){var p,u,h,f,g=t[d].replace(l,"%20"),y=g.indexOf(n);y>=0?(p=g.substr(0,y),u=g.substr(y+1)):(p=g,u=""),h=decodeURIComponent(p),f=decodeURIComponent(u),a(i,h)?s(i[h])?i[h].push(f):i[h]=[i[h],f]:i[h]=f}return i};var s=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)}},function(t,e,n){"use strict";function a(t,e){if(t.map)return t.map(e);for(var n=[],a=0;a<t.length;a++)n.push(e(t[a],a));return n}var s=function(t){switch(typeof t){case"string":return t;case"boolean":return t?"true":"false";case"number":return isFinite(t)?t:"";default:return""}};t.exports=function(t,e,n,l){return e=e||"&",n=n||"=",null===t&&(t=void 0),"object"==typeof t?a(i(t),function(i){var l=encodeURIComponent(s(i))+n;return r(t[i])?a(t[i],function(t){return l+encodeURIComponent(s(t))}).join(e):l+encodeURIComponent(s(t[i]))}).join(e):l?encodeURIComponent(s(l))+n+encodeURIComponent(s(t)):""};var r=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)},i=Object.keys||function(t){var e=[];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e.push(n);return e}},function(t,e){t.exports=".footer-container {\n  background: #F8F8F8; }\n  .footer-container .footer-body {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 40px 40px 0; }\n    @media screen and (max-width: 640px) {\n      .footer-container .footer-body {\n        padding-left: 20px;\n        padding-right: 20px; } }\n    .footer-container .footer-body img {\n      display: block;\n      width: 125px;\n      height: 26px;\n      margin-bottom: 40px; }\n    .footer-container .footer-body .cols-container .col {\n      display: inline-block;\n      box-sizing: border-box;\n      vertical-align: top; }\n    .footer-container .footer-body .cols-container .col-12 {\n      width: 50%;\n      padding-right: 125px; }\n    .footer-container .footer-body .cols-container .col-6 {\n      width: 25%; }\n    .footer-container .footer-body .cols-container h3 {\n      font-family: Avenir-Heavy;\n      font-size: 18px;\n      color: #333;\n      line-height: 18px; }\n    .footer-container .footer-body .cols-container p {\n      font-family: Avenir-Medium;\n      font-size: 12px;\n      color: #999;\n      line-height: 18px; }\n    .footer-container .footer-body .cols-container dl {\n      font-family: Avenir-Heavy;\n      line-height: 18px; }\n    .footer-container .footer-body .cols-container dt {\n      font-weight: bold;\n      font-size: 18px;\n      color: #333;\n      margin-bottom: 20px; }\n    .footer-container .footer-body .cols-container dd {\n      padding: 0;\n      margin: 0; }\n      .footer-container .footer-body .cols-container dd a {\n        text-decoration: none;\n        display: block;\n        font-size: 14px;\n        color: #999;\n        margin: 10px 0; }\n      .footer-container .footer-body .cols-container dd a:hover {\n        color: #2E3034; }\n    .footer-container .footer-body .copyright {\n      margin-top: 44px;\n      border-top: 1px solid #ccc;\n      min-height: 60px;\n      line-height: 20px;\n      text-align: center;\n      font-family: Avenir-Medium;\n      font-size: 12px;\n      color: #999;\n      display: flex;\n      align-items: center; }\n      .footer-container .footer-body .copyright span {\n        display: inline-block;\n        margin: 0 auto; }\n\n@media screen and (max-width: 640px) {\n  .footer-container .footer-body .cols-container .col {\n    width: 100%;\n    text-align: center;\n    padding: 0; } }\n"},function(t,e){t.exports=".header-container {\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  z-index: 1000;\n  background-color: #fff; }\n  .header-container-primary {\n    background-color: transparent; }\n  .header-container-normal {\n    background-color: #fff;\n    box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.08); }\n  .header-container .header-body {\n    max-width: 1280px;\n    margin: 0 auto;\n    height: 66px;\n    line-height: 66px; }\n    .header-container .header-body .logo {\n      margin-left: 40px;\n      width: 96px;\n      vertical-align: sub; }\n    .header-container .header-body .header-menu {\n      float: right; }\n      .header-container .header-body .header-menu .header-menu-toggle {\n        display: none;\n        width: 19px;\n        margin-right: 40px;\n        margin-top: 18px;\n        cursor: pointer; }\n    .header-container .header-body ul {\n      padding: 0;\n      margin: 0; }\n    .header-container .header-body li {\n      display: inline-block;\n      margin-right: 40px; }\n    .header-container .header-body .menu-item {\n      font-family: Avenir-Heavy;\n      font-size: 14px; }\n    .header-container .header-body .menu-item-primary a {\n      color: #fff;\n      opacity: 0.6;\n      font-family: Avenir-Medium; }\n    .header-container .header-body .menu-item-primary:hover a {\n      opacity: 1; }\n    .header-container .header-body .menu-item-primary-active a {\n      opacity: 1; }\n    .header-container .header-body .menu-item-normal a {\n      color: #333;\n      opacity: 0.6;\n      font-family: Avenir-Medium; }\n    .header-container .header-body .menu-item-normal:hover a {\n      opacity: 1; }\n    .header-container .header-body .menu-item-normal-active a {\n      opacity: 1; }\n    .header-container .header-body .language-switch {\n      float: right;\n      display: inline-block;\n      box-sizing: border-box;\n      width: 24px;\n      height: 24px;\n      line-height: 20px;\n      margin-top: 21px;\n      margin-right: 40px;\n      text-align: center;\n      border-radius: 2px;\n      cursor: pointer;\n      font-family: PingFangSC-Medium;\n      font-size: 14px;\n      opacity: 0.6; }\n      .header-container .header-body .language-switch:hover {\n        opacity: 1; }\n    .header-container .header-body .language-switch-primary {\n      border: 1px solid #FFF;\n      color: #FFF; }\n    .header-container .header-body .language-switch-normal {\n      border: 1px solid #333;\n      color: #333; }\n\n@media screen and (max-width: 640px) {\n  .header-container .header-body .logo {\n    margin-left: 20px; }\n  .header-container .header-body .language-switch {\n    margin-right: 20px; }\n  .header-container .header-body .header-menu ul {\n    display: none; }\n  .header-container .header-body .header-menu .header-menu-toggle {\n    display: inline-block;\n    margin-right: 20px; }\n  .header-container .header-body .header-menu-open ul {\n    background-color: #f8f8f8;\n    display: inline-block;\n    position: absolute;\n    right: 0;\n    top: 66px;\n    z-index: 100; }\n  .header-container .header-body .header-menu-open li {\n    width: 200px;\n    display: list-item;\n    padding-left: 30px;\n    list-style: none;\n    line-height: 40px;\n    margin-right: 0; }\n    .header-container .header-body .header-menu-open li a {\n      color: #333;\n      display: inline-block;\n      width: 100%; }\n    .header-container .header-body .header-menu-open li:hover {\n      background: #2E3034; }\n      .header-container .header-body .header-menu-open li:hover a {\n        color: #fff;\n        opactiy: 1; }\n  .header-container .header-body .header-menu-open .menu-item-primary-active, .header-container .header-body .header-menu-open .menu-item-normal-active {\n    background: #2E3034; }\n    .header-container .header-body .header-menu-open .menu-item-primary-active a, .header-container .header-body .header-menu-open .menu-item-normal-active a {\n      color: #fff;\n      opactiy: 1; } }\n"},function(t,e,n){!function(e,a){t.exports=a(n(0),n(21))}("undefined"!=typeof self&&self,function(t,e){return function(t){function e(a){if(n[a])return n[a].exports;var s=n[a]={i:a,l:!1,exports:{}};return t[a].call(s.exports,s,s.exports,e),s.l=!0,s.exports}var n={};return e.m=t,e.c=n,e.d=function(t,n,a){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:a})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=2)}([function(t,e,n){"use strict";function a(t){console.warn("[react-ga]",t)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=a},function(t,e,n){"use strict";function a(t){return t.replace(/^\s+|\s+$/g,"")}Object.defineProperty(e,"__esModule",{value:!0}),e.default=a},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function s(t,e){var n={};for(var a in t)e.indexOf(a)>=0||Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a]);return n}function r(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function i(t){return(0,j.default)(t,L)}function l(t){for(var e=arguments.length,n=Array(e>1?e-1:0),a=1;a<e;a++)n[a-1]=arguments[a];var s=n[0];if("function"==typeof H){if("string"!=typeof s)return void(0,C.default)("ga command must be a string");!z&&Array.isArray(t)||H.apply(void 0,n),Array.isArray(t)&&t.forEach(function(t){H.apply(void 0,r([t+"."+s].concat(n.slice(1))))})}}function o(t,e){if(!t)return void(0,C.default)("gaTrackingID is required in initialize()");e&&(e.debug&&!0===e.debug&&(R=!0),!1===e.titleCase&&(L=!1)),e&&e.gaOptions?H("create",t,e.gaOptions):H("create",t,"auto")}function c(t,e){if(e&&!0===e.testMode)F=!0;else{if("undefined"==typeof window)return!1;(0,O.default)(e)}return z=!e||"boolean"!=typeof e.alwaysSendToDefaultTracker||e.alwaysSendToDefaultTracker,Array.isArray(t)?t.forEach(function(t){if("object"!==(void 0===t?"undefined":x(t)))return void(0,C.default)("All configs must be an object");o(t.trackingId,t)}):o(t,e),!0}function d(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return e.length>0&&(H.apply(void 0,e),R&&((0,_.default)("called ga('arguments');"),(0,_.default)("with arguments: "+JSON.stringify(e)))),window.ga}function p(t,e){return t?"object"!==(void 0===t?"undefined":x(t))?void(0,C.default)("Expected `fieldsObject` arg to be an Object"):(0===Object.keys(t).length&&(0,C.default)("empty `fieldsObject` given to .set()"),l(e,"set",t),void(R&&((0,_.default)("called ga('set', fieldsObject);"),(0,_.default)("with fieldsObject: "+JSON.stringify(t))))):void(0,C.default)("`fieldsObject` is required in .set()")}function u(t,e){l(e,"send",t),R&&((0,_.default)("called ga('send', fieldObject);"),(0,_.default)("with fieldObject: "+JSON.stringify(t)),(0,_.default)("with trackers: "+JSON.stringify(e)))}function h(t,e,n){if(!t)return void(0,C.default)("path is required in .pageview()");var a=(0,P.default)(t);if(""===a)return void(0,C.default)("path cannot be an empty string in .pageview()");var s={};if(n&&(s.title=n),"function"==typeof d&&(l(e,"send",b({hitType:"pageview",page:a},s)),R)){(0,_.default)("called ga('send', 'pageview', path);");var r="";n&&(r=" and title: "+n),(0,_.default)("with path: "+a+r)}}function f(t,e){if(!t)return void(0,C.default)("modalName is required in .modalview(modalName)");var n=(0,k.default)((0,P.default)(t));if(""===n)return void(0,C.default)("modalName cannot be an empty string or a single / in .modalview()");if("function"==typeof d){var a="/modal/"+n;l(e,"send","pageview",a),R&&((0,_.default)("called ga('send', 'pageview', path);"),(0,_.default)("with path: "+a))}}function g(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.category,n=t.variable,a=t.value,s=t.label,r=arguments[1];if("function"==typeof d){if(!e||!n||!a||"number"!=typeof a)return void(0,C.default)("args.category, args.variable AND args.value are required in timing() AND args.value has to be a number");var l={hitType:"timing",timingCategory:i(e),timingVar:i(n),timingValue:a};s&&(l.timingLabel=i(s)),u(l,r)}}function y(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments[1],n=t.category,a=t.action,r=t.label,l=t.value,o=t.nonInteraction,c=t.transport,p=s(t,["category","action","label","value","nonInteraction","transport"]);if("function"==typeof d){if(!n||!a)return void(0,C.default)("args.category AND args.action are required in event()");var h={hitType:"event",eventCategory:i(n),eventAction:i(a)};r&&(h.eventLabel=i(r)),void 0!==l&&("number"!=typeof l?(0,C.default)("Expected `args.value` arg to be a Number."):h.eventValue=l),void 0!==o&&("boolean"!=typeof o?(0,C.default)("`args.nonInteraction` must be a boolean."):h.nonInteraction=o),void 0!==c&&("string"!=typeof c?(0,C.default)("`args.transport` must be a string."):(-1===["beacon","xhr","image"].indexOf(c)&&(0,C.default)("`args.transport` must be either one of these values: `beacon`, `xhr` or `image`"),h.transport=c)),Object.keys(p).filter(function(t){return"dimension"===t.substr(0,"dimension".length)}).forEach(function(t){h[t]=p[t]}),Object.keys(p).filter(function(t){return"metric"===t.substr(0,"metric".length)}).forEach(function(t){h[t]=p[t]}),u(h,e)}}function m(t,e){var n=t.description,a=t.fatal;if("function"==typeof d){var s={hitType:"exception"};n&&(s.exDescription=i(n)),void 0!==a&&("boolean"!=typeof a?(0,C.default)("`args.fatal` must be a boolean."):s.exFatal=a),u(s,e)}}function v(t,e,n){if("function"!=typeof e)return void(0,C.default)("hitCallback function is required");if("function"==typeof d){if(!t||!t.label)return void(0,C.default)("args.label is required in outboundLink()");var a={hitType:"event",eventCategory:"Outbound",eventAction:"Click",eventLabel:i(t.label)},s=!1,r=function(){s=!0,e()},l=setTimeout(r,250),o=function(){clearTimeout(l),s||e()};a.hitCallback=o,u(a,n)}else setTimeout(e,0)}Object.defineProperty(e,"__esModule",{value:!0}),e.testModeAPI=e.OutboundLink=e.plugin=void 0;var b=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};e.initialize=c,e.ga=d,e.set=p,e.send=u,e.pageview=h,e.modalview=f,e.timing=g,e.event=y,e.exception=m,e.outboundLink=v;var w=n(3),j=a(w),S=n(6),k=a(S),N=n(1),P=a(N),I=n(7),O=a(I),E=n(0),C=a(E),T=n(8),_=a(T),A=n(9),D=a(A),q=n(10),M=a(q),R=!1,L=!0,F=!1,z=!0,H=function(){var t;return F?D.default.ga.apply(D.default,arguments):window.ga?(t=window).ga.apply(t,arguments):(0,C.default)("ReactGA.initialize must be called first or GoogleAnalytics should be loaded manually")},U=e.plugin={require:function(t,e){if("function"==typeof d){if(!t)return void(0,C.default)("`name` is required in .require()");var n=(0,P.default)(t);if(""===n)return void(0,C.default)("`name` cannot be an empty string in .require()");if(e){if("object"!==(void 0===e?"undefined":x(e)))return void(0,C.default)("Expected `options` arg to be an Object");0===Object.keys(e).length&&(0,C.default)("Empty `options` given to .require()"),d("require",n,e),R&&(0,_.default)("called ga('require', '"+n+"', "+JSON.stringify(e))}else d("require",n),R&&(0,_.default)("called ga('require', '"+n+"');")}},execute:function(t,e){var n=void 0,a=void 0;if(1==(arguments.length<=2?0:arguments.length-2)?n=arguments.length<=2?void 0:arguments[2]:(a=arguments.length<=2?void 0:arguments[2],n=arguments.length<=3?void 0:arguments[3]),"function"==typeof d)if("string"!=typeof t)(0,C.default)("Expected `pluginName` arg to be a String.");else if("string"!=typeof e)(0,C.default)("Expected `action` arg to be a String.");else{var s=t+":"+e;n=n||null,a&&n?(d(s,a,n),R&&((0,_.default)("called ga('"+s+"');"),(0,_.default)('actionType: "'+a+'" with payload: '+JSON.stringify(n)))):n?(d(s,n),R&&((0,_.default)("called ga('"+s+"');"),(0,_.default)("with payload: "+JSON.stringify(n)))):(d(s),R&&(0,_.default)("called ga('"+s+"');"))}}};M.default.origTrackLink=M.default.trackLink,M.default.trackLink=v;var B=e.OutboundLink=M.default;e.testModeAPI=D.default;e.default={initialize:c,ga:d,set:p,send:u,pageview:h,modalview:f,timing:g,event:y,exception:m,plugin:U,outboundLink:v,OutboundLink:B,testModeAPI:D.default}},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function s(t,e){return(0,i.default)(t)?((0,d.default)("This arg looks like an email address, redacting."),p):e?(0,o.default)(t):t}Object.defineProperty(e,"__esModule",{value:!0}),e.default=s;var r=n(4),i=a(r),l=n(5),o=a(l),c=n(0),d=a(c),p="REDACTED (Potential Email Address)"},function(t,e,n){"use strict";function a(t){return/[^@]+@[^@]+/.test(t)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=a},function(t,e,n){"use strict";function a(t){return(0,r.default)(t).replace(/[A-Za-z0-9\u00C0-\u00FF]+[^\s-]*/g,function(t,e,n){return e>0&&e+t.length!==n.length&&t.search(i)>-1&&":"!==n.charAt(e-2)&&("-"!==n.charAt(e+t.length)||"-"===n.charAt(e-1))&&n.charAt(e-1).search(/[^\s-]/)<0?t.toLowerCase():t.substr(1).search(/[A-Z]|\../)>-1?t:t.charAt(0).toUpperCase()+t.substr(1)})}Object.defineProperty(e,"__esModule",{value:!0}),e.default=a;var s=n(1),r=function(t){return t&&t.__esModule?t:{default:t}}(s),i=/^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\.?|via)$/i},function(t,e,n){"use strict";function a(t){return"/"===t.substring(0,1)?t.substring(1):t}Object.defineProperty(e,"__esModule",{value:!0}),e.default=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){!function(t,e,n,a,s,r,i){t.GoogleAnalyticsObject=s,t[s]=t[s]||function(){(t[s].q=t[s].q||[]).push(arguments)},t[s].l=1*new Date,r=e.createElement(n),i=e.getElementsByTagName(n)[0],r.async=1,r.src=a,i.parentNode.insertBefore(r,i)}(window,document,"script",t&&t.gaAddress?t.gaAddress:"https://www.google-analytics.com/analytics.js","ga")}},function(t,e,n){"use strict";function a(t){console.info("[react-ga]",t)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=e.gaCalls=[];e.default={calls:a,ga:function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];a.push([].concat(e))}}},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},o=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),c=n(11),d=a(c),p=n(12),u=a(p),h=n(0),f=a(h),g="_blank",y=1,m=function(t){function e(){var t,n,a,i;s(this,e);for(var l=arguments.length,o=Array(l),c=0;c<l;c++)o[c]=arguments[c];return n=a=r(this,(t=e.__proto__||Object.getPrototypeOf(e)).call.apply(t,[this].concat(o))),a.handleClick=function(t){var n=a.props,s=n.target,r=n.eventLabel,i=n.to,l=n.onClick,o={label:r},c=s!==g,d=!(t.ctrlKey||t.shiftKey||t.metaKey||t.button===y);c&&d?(t.preventDefault(),e.trackLink(o,function(){window.location.href=i})):e.trackLink(o,function(){}),l&&l(t)},i=n,r(a,i)}return i(e,t),o(e,[{key:"render",value:function(){var t=l({},this.props,{href:this.props.to,onClick:this.handleClick});return delete t.eventLabel,d.default.createElement("a",t)}}]),e}(c.Component);m.propTypes={eventLabel:u.default.string.isRequired,target:u.default.string,to:u.default.string,onClick:u.default.func},m.defaultProps={target:null,to:null,onClick:null},m.trackLink=function(){(0,f.default)("ga tracking not enabled")},e.default=m},function(e,n){e.exports=t},function(t,n){t.exports=e}])})},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0});var s=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},r=n(24),i=a(r),l=n(67),o=a(l),c=n(60),d=a(c),p={},u=void 0;e.default={unmount:function(){p={}},register:function(t,e){p[t]=e},unregister:function(t){delete p[t]},get:function(t){return p[t]||document.getElementById(t)||document.getElementsByName(t)[0]||document.getElementsByClassName(t)[0]},setActiveLink:function(t){return u=t},getActiveLink:function(){return u},scrollTo:function(t,e){var n=this.get(t);if(!n)return void console.warn("target Element not found");e=s({},e,{absolute:!1});var a=e.containerId,r=e.container,l=void 0;l=a?document.getElementById(a):r&&r.nodeType?r:document,d.default.registered.begin&&d.default.registered.begin(t,n),e.absolute=!0;var c=i.default.scrollOffset(l,n)+(e.offset||0);if(!e.smooth)return l===document?window.scrollTo(0,c):l.scrollTop=c,void(d.default.registered.end&&d.default.registered.end(t,n));o.default.animateTopScroll(c,e,t,n)}}},function(t,e,n){n(5)(n(51))},function(t,e,n){n(5)(n(52))},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function s(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}Object.defineProperty(e,"__esModule",{value:!0});var r=n(0),i=a(r),l=n(17),o=a(l);n(63);var c=function(t){return i.default.createElement("div",{className:(0,o.default)(s({bone:!0},"bone-"+t.type,!0))})};e.default=c},function(t,e){t.exports=".bone {\n  width: 24px;\n  height: 2px;\n  position: relative; }\n  .bone::before {\n    position: absolute;\n    content: '';\n    width: 6px;\n    height: 6px;\n    border-radius: 50%;\n    left: 0;\n    top: -2px; }\n  .bone::after {\n    position: absolute;\n    content: '';\n    width: 6px;\n    height: 6px;\n    border-radius: 50%;\n    right: 0;\n    top: -2px; }\n  .bone-dark {\n    background-color: #1161F6; }\n    .bone-dark::before {\n      background-color: #1161F6; }\n    .bone-dark::after {\n      background-color: #1161F6; }\n  .bone-light {\n    background-color: #fff;\n    opacity: 0.8; }\n    .bone-light::before {\n      background-color: #fff;\n      opacity: 0.8; }\n    .bone-light::after {\n      background-color: #fff;\n      opacity: 0.8; }\n"},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.addPassiveEventListener=function(t,e,n){var a=function(){var t=!1;try{var e=Object.defineProperty({},"passive",{get:function(){t=!0}});window.addEventListener("test",null,e)}catch(t){}return t}();t.addEventListener(e,n,!!a&&{passive:!0})},e.removePassiveEventListener=function(t,e,n){t.removeEventListener(e,n)}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a={registered:{},scrollEvent:{register:function(t,e){a.registered[t]=e},remove:function(t){a.registered[t]=null}}};e.default=a},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},o=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),c=n(0),d=a(c),p=n(2),u=(a(p),n(24)),h=(a(u),n(62)),f=a(h),g=n(54),y=a(g),m=n(21),v=a(m),b=n(69),x=a(b),w={to:v.default.string.isRequired,containerId:v.default.string,container:v.default.object,activeClass:v.default.string,spy:v.default.bool,smooth:v.default.oneOfType([v.default.bool,v.default.string]),offset:v.default.number,delay:v.default.number,isDynamic:v.default.bool,onClick:v.default.func,duration:v.default.oneOfType([v.default.number,v.default.func]),absolute:v.default.bool,onSetActive:v.default.func,onSetInactive:v.default.func,ignoreCancelEvents:v.default.bool,hashSpy:v.default.bool};e.default=function(t,e){var n=e||y.default,a=function(e){function a(t){s(this,a);var e=r(this,(a.__proto__||Object.getPrototypeOf(a)).call(this,t));return c.call(e),e.state={active:!1},e}return i(a,e),o(a,[{key:"getScrollSpyContainer",value:function(){var t=this.props.containerId,e=this.props.container;return t&&!e?document.getElementById(t):e&&e.nodeType?e:document}},{key:"componentDidMount",value:function(){if(this.props.spy||this.props.hashSpy){var t=this.getScrollSpyContainer();f.default.isMounted(t)||f.default.mount(t),this.props.hashSpy&&(x.default.isMounted()||x.default.mount(n),x.default.mapContainer(this.props.to,t)),f.default.addSpyHandler(this.spyHandler,t),this.setState({container:t})}}},{key:"componentWillUnmount",value:function(){f.default.unmount(this.stateHandler,this.spyHandler)}},{key:"render",value:function(){var e="";e=this.state&&this.state.active?((this.props.className||"")+" "+(this.props.activeClass||"active")).trim():this.props.className;var n=l({},this.props);for(var a in w)n.hasOwnProperty(a)&&delete n[a];return n.className=e,n.onClick=this.handleClick,d.default.createElement(t,n)}}]),a}(d.default.PureComponent),c=function(){var t=this;this.scrollTo=function(e,a){n.scrollTo(e,l({},t.state,a))},this.handleClick=function(e){t.props.onClick&&t.props.onClick(e),e.stopPropagation&&e.stopPropagation(),e.preventDefault&&e.preventDefault(),t.scrollTo(t.props.to,t.props)},this.spyHandler=function(e){var a=t.getScrollSpyContainer();if(!x.default.isMounted()||x.default.isInitialized()){var s=t.props.to,r=null,i=0,l=0,o=0;if(a.getBoundingClientRect){o=a.getBoundingClientRect().top}if(!r||t.props.isDynamic){if(!(r=n.get(s)))return;var c=r.getBoundingClientRect();i=c.top-o+e,l=i+c.height}var d=e-t.props.offset,p=d>=Math.floor(i)&&d<Math.floor(l),u=d<Math.floor(i)||d>=Math.floor(l),h=n.getActiveLink();u&&(s===h&&n.setActiveLink(void 0),t.props.hashSpy&&x.default.getHash()===s&&x.default.changeHash(),t.props.spy&&t.state.active&&(t.setState({active:!1}),t.props.onSetInactive&&t.props.onSetInactive(s,r))),!p||h===s&&!1!==t.state.active||(n.setActiveLink(s),t.props.hashSpy&&x.default.changeHash(s),t.props.spy&&(t.setState({active:!0}),t.props.onSetActive&&t.props.onSetActive(s,r)))}}};return a.propTypes=w,a.defaultProps={offset:0},a}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(71),s=function(t){return t&&t.__esModule?t:{default:t}}(a),r=n(59),i=function(t){return(0,s.default)(t,66)},l={spyCallbacks:[],spySetState:[],scrollSpyContainers:[],mount:function(t){if(t){var e=i(function(e){l.scrollHandler(t)});l.scrollSpyContainers.push(t),(0,r.addPassiveEventListener)(t,"scroll",e)}},isMounted:function(t){return-1!==l.scrollSpyContainers.indexOf(t)},currentPositionY:function(t){if(t===document){var e=void 0!==window.pageXOffset,n="CSS1Compat"===(document.compatMode||"");return e?window.pageYOffset:n?document.documentElement.scrollTop:document.body.scrollTop}return t.scrollTop},scrollHandler:function(t){(l.scrollSpyContainers[l.scrollSpyContainers.indexOf(t)].spyCallbacks||[]).forEach(function(e){return e(l.currentPositionY(t))})},addStateHandler:function(t){l.spySetState.push(t)},addSpyHandler:function(t,e){var n=l.scrollSpyContainers[l.scrollSpyContainers.indexOf(e)];n.spyCallbacks||(n.spyCallbacks=[]),n.spyCallbacks.push(t),t(l.currentPositionY(e))},updateStates:function(){l.spySetState.forEach(function(t){return t()})},unmount:function(t,e){l.scrollSpyContainers.forEach(function(t){return t.spyCallbacks&&t.spyCallbacks.length&&t.spyCallbacks.splice(t.spyCallbacks.indexOf(e),1)}),l.spySetState&&l.spySetState.length&&l.spySetState.splice(l.spySetState.indexOf(t),1),document.removeEventListener("scroll",l.scrollHandler)},update:function(){return l.scrollSpyContainers.forEach(function(t){return l.scrollHandler(t)})}};e.default=l},function(t,e,n){n(5)(n(58))},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function s(t){var e=t.text,n=t.img,a=(0,o.default)({bar:!0});return i.default.createElement("div",{className:a},i.default.createElement("div",{className:"bar-body"},i.default.createElement("img",{src:n,className:"front-img"}),i.default.createElement("div",{className:"bar-title"},i.default.createElement("span",null,e),i.default.createElement(d.default,{type:"light"})),i.default.createElement("img",{src:n,className:"back-img"})))}Object.defineProperty(e,"__esModule",{value:!0}),e.default=s;var r=n(0),i=a(r),l=n(17),o=a(l),c=n(57),d=a(c);n(70)},,function(t,e){t.exports=".bar {\n  margin-top: 66px;\n  background-image: linear-gradient(-90deg, #267DF7 0%, #267DF7 51%, #267DF7 100%); }\n  .bar .bar-body {\n    max-width: 1280px;\n    margin: 0 auto;\n    height: 200px;\n    line-height: 200px;\n    font-family: Avenir-Heavy;\n    font-size: 36px;\n    color: #FFF;\n    position: relative; }\n    .bar .bar-body .bar-title {\n      display: inline-block;\n      line-height: 1; }\n      .bar .bar-body .bar-title .bone {\n        margin-top: 6px; }\n    .bar .bar-body .front-img {\n      width: 80px;\n      height: 80px;\n      vertical-align: middle;\n      margin: 0 28px 0 40px; }\n    .bar .bar-body .back-img {\n      width: 160px;\n      height: 160px;\n      position: absolute;\n      right: 168px;\n      bottom: 0;\n      opacity: 0.15; }\n    @media screen and (max-width: 640px) {\n      .bar .bar-body .front-img {\n        margin-left: 20px; } }\n"},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0});var s=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},r=n(24),i=(a(r),n(80)),l=a(i),o=n(79),c=a(o),d=n(60),p=a(d),u=function(t){return l.default[t.smooth]||l.default.defaultEasing},h=function(t){return"function"==typeof t?t:function(){return t}},f=function(){if("undefined"!=typeof window)return window.requestAnimationFrame||window.webkitRequestAnimationFrame},g=function(){return f()||function(t,e,n){window.setTimeout(t,n||1e3/60,(new Date).getTime())}}(),y=function(){return{currentPositionY:0,startPositionY:0,targetPositionY:0,progress:0,duration:0,cancel:!1,target:null,containerElement:null,to:null,start:null,deltaTop:null,percent:null,delayTimeout:null}},m=function(t){var e=t.data.containerElement;if(e&&e!==document&&e!==document.body)return e.scrollTop;var n=void 0!==window.pageXOffset,a="CSS1Compat"===(document.compatMode||"");return n?window.pageYOffset:a?document.documentElement.scrollTop:document.body.scrollTop},v=function(t){var e=t.data.containerElement;if(e&&e!==document&&e!==document.body)return Math.max(e.scrollHeight,e.offsetHeight,e.clientHeight);var n=document.body,a=document.documentElement;return Math.max(n.scrollHeight,n.offsetHeight,a.clientHeight,a.scrollHeight,a.offsetHeight)},b=function t(e,n,a){var s=n.data;if(!n.ignoreCancelEvents&&s.cancel)return void(p.default.registered.end&&p.default.registered.end(s.to,s.target,s.currentPositionY));if(s.deltaTop=Math.round(s.targetPositionY-s.startPositionY),null===s.start&&(s.start=a),s.progress=a-s.start,s.percent=s.progress>=s.duration?1:e(s.progress/s.duration),s.currentPositionY=s.startPositionY+Math.ceil(s.deltaTop*s.percent),s.containerElement&&s.containerElement!==document&&s.containerElement!==document.body?s.containerElement.scrollTop=s.currentPositionY:window.scrollTo(0,s.currentPositionY),s.percent<1){var r=t.bind(null,e,n);return void g.call(window,r)}p.default.registered.end&&p.default.registered.end(s.to,s.target,s.currentPositionY)},x=function(t){t.data.containerElement=t?t.containerId?document.getElementById(t.containerId):t.container&&t.container.nodeType?t.container:document:null},w=function(t,e,n,a){if(e.data=e.data||y(),window.clearTimeout(e.data.delayTimeout),c.default.subscribe(function(){e.data.cancel=!0}),x(e),e.data.start=null,e.data.cancel=!1,e.data.startPositionY=m(e),e.data.targetPositionY=e.absolute?t:t+e.data.startPositionY,e.data.startPositionY===e.data.targetPositionY)return void(p.default.registered.end&&p.default.registered.end(e.data.to,e.data.target,e.data.currentPositionY));e.data.deltaTop=Math.round(e.data.targetPositionY-e.data.startPositionY),e.data.duration=h(e.duration)(e.data.deltaTop),e.data.duration=isNaN(parseFloat(e.data.duration))?1e3:parseFloat(e.data.duration),e.data.to=n,e.data.target=a;var s=u(e),r=b.bind(null,s,e);if(e&&e.delay>0)return void(e.data.delayTimeout=window.setTimeout(function(){g.call(window,r)},e.delay));g.call(window,r)},j=function(t){return t=s({},t),t.data=t.data||y(),t.absolute=!0,t},S=function(t){w(0,j(t))},k=function(t,e){w(t,j(e))},N=function(t){t=j(t),x(t),w(v(t),t)},P=function(t,e){e=j(e),x(e),w(m(e)+t,e)};e.default={animateTopScroll:w,getAnimationType:u,scrollToTop:S,scrollToBottom:N,scrollTo:k,scrollMore:P}},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},o=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),c=n(0),d=a(c),p=n(2),u=(a(p),n(54)),h=a(u),f=n(21),g=a(f);e.default=function(t){var e=function(e){function n(t){s(this,n);var e=r(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,t));return e.childBindings={domNode:null},e}return i(n,e),o(n,[{key:"componentDidMount",value:function(){if("undefined"==typeof window)return!1;this.registerElems(this.props.name)}},{key:"componentWillReceiveProps",value:function(t){this.props.name!==t.name&&this.registerElems(t.name)}},{key:"componentWillUnmount",value:function(){if("undefined"==typeof window)return!1;h.default.unregister(this.props.name)}},{key:"registerElems",value:function(t){h.default.register(t,this.childBindings.domNode)}},{key:"render",value:function(){return d.default.createElement(t,l({},this.props,{parentBindings:this.childBindings}))}}]),n}(d.default.Component);return e.propTypes={name:g.default.string,id:g.default.string},e}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=(n(59),n(24)),s=function(t){return t&&t.__esModule?t:{default:t}}(a),r={mountFlag:!1,initialized:!1,scroller:null,containers:{},mount:function(t){this.scroller=t,this.handleHashChange=this.handleHashChange.bind(this),window.addEventListener("hashchange",this.handleHashChange),this.initStateFromHash(),this.mountFlag=!0},mapContainer:function(t,e){this.containers[t]=e},isMounted:function(){return this.mountFlag},isInitialized:function(){return this.initialized},initStateFromHash:function(){var t=this,e=this.getHash();e?window.setTimeout(function(){t.scrollTo(e,!0),t.initialized=!0},10):this.initialized=!0},scrollTo:function(t,e){var n=this.scroller;if(n.get(t)&&(e||t!==n.getActiveLink())){var a=this.containers[t]||document;n.scrollTo(t,{container:a})}},getHash:function(){return s.default.getHash()},changeHash:function(t){this.isInitialized()&&s.default.pushHash(t)},handleHashChange:function(){this.scrollTo(this.getHash())},unmount:function(){this.scroller=null,this.containers=null,window.removeEventListener("hashchange",this.handleHashChange)}};e.default=r},function(t,e,n){n(5)(n(66))},function(t,e,n){(function(e){function n(t,e,n){function a(e){var n=g,a=y;return g=y=void 0,k=e,v=t.apply(a,n)}function r(t){return k=t,b=setTimeout(d,e),N?a(t):v}function i(t){var n=t-x,a=t-k,s=e-n;return P?j(s,m-a):s}function c(t){var n=t-x,a=t-k;return void 0===x||n>=e||n<0||P&&a>=m}function d(){var t=S();if(c(t))return p(t);b=setTimeout(d,i(t))}function p(t){return b=void 0,I&&g?a(t):(g=y=void 0,v)}function u(){void 0!==b&&clearTimeout(b),k=0,g=x=y=b=void 0}function h(){return void 0===b?v:p(S())}function f(){var t=S(),n=c(t);if(g=arguments,y=this,x=t,n){if(void 0===b)return r(x);if(P)return b=setTimeout(d,e),a(x)}return void 0===b&&(b=setTimeout(d,e)),v}var g,y,m,v,b,x,k=0,N=!1,P=!1,I=!0;if("function"!=typeof t)throw new TypeError(o);return e=l(e)||0,s(n)&&(N=!!n.leading,P="maxWait"in n,m=P?w(l(n.maxWait)||0,e):m,I="trailing"in n?!!n.trailing:I),f.cancel=u,f.flush=h,f}function a(t,e,a){var r=!0,i=!0;if("function"!=typeof t)throw new TypeError(o);return s(a)&&(r="leading"in a?!!a.leading:r,i="trailing"in a?!!a.trailing:i),n(t,e,{leading:r,maxWait:e,trailing:i})}function s(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function r(t){return!!t&&"object"==typeof t}function i(t){return"symbol"==typeof t||r(t)&&x.call(t)==d}function l(t){if("number"==typeof t)return t;if(i(t))return c;if(s(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=s(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(p,"");var n=h.test(t);return n||f.test(t)?g(t.slice(2),n?2:8):u.test(t)?c:+t}var o="Expected a function",c=NaN,d="[object Symbol]",p=/^\s+|\s+$/g,u=/^[-+]0x[0-9a-f]+$/i,h=/^0b[01]+$/i,f=/^0o[0-7]+$/i,g=parseInt,y="object"==typeof e&&e&&e.Object===Object&&e,m="object"==typeof self&&self&&self.Object===Object&&self,v=y||m||Function("return this")(),b=Object.prototype,x=b.toString,w=Math.max,j=Math.min,S=function(){return v.Date.now()};t.exports=a}).call(e,n(81))},function(t,e,n){(function(t){function n(t,e){for(var n=0,a=t.length-1;a>=0;a--){var s=t[a];"."===s?t.splice(a,1):".."===s?(t.splice(a,1),n++):n&&(t.splice(a,1),n--)}if(e)for(;n--;n)t.unshift("..");return t}function a(t,e){if(t.filter)return t.filter(e);for(var n=[],a=0;a<t.length;a++)e(t[a],a,t)&&n.push(t[a]);return n}var s=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,r=function(t){return s.exec(t).slice(1)};e.resolve=function(){for(var e="",s=!1,r=arguments.length-1;r>=-1&&!s;r--){var i=r>=0?arguments[r]:t.cwd();if("string"!=typeof i)throw new TypeError("Arguments to path.resolve must be strings");i&&(e=i+"/"+e,s="/"===i.charAt(0))}return e=n(a(e.split("/"),function(t){return!!t}),!s).join("/"),(s?"/":"")+e||"."},e.normalize=function(t){var s=e.isAbsolute(t),r="/"===i(t,-1);return t=n(a(t.split("/"),function(t){return!!t}),!s).join("/"),t||s||(t="."),t&&r&&(t+="/"),(s?"/":"")+t},e.isAbsolute=function(t){return"/"===t.charAt(0)},e.join=function(){var t=Array.prototype.slice.call(arguments,0);return e.normalize(a(t,function(t,e){if("string"!=typeof t)throw new TypeError("Arguments to path.join must be strings");return t}).join("/"))},e.relative=function(t,n){function a(t){for(var e=0;e<t.length&&""===t[e];e++);for(var n=t.length-1;n>=0&&""===t[n];n--);return e>n?[]:t.slice(e,n-e+1)}t=e.resolve(t).substr(1),n=e.resolve(n).substr(1);for(var s=a(t.split("/")),r=a(n.split("/")),i=Math.min(s.length,r.length),l=i,o=0;o<i;o++)if(s[o]!==r[o]){l=o;break}for(var c=[],o=l;o<s.length;o++)c.push("..");return c=c.concat(r.slice(l)),c.join("/")},e.sep="/",e.delimiter=":",e.dirname=function(t){var e=r(t),n=e[0],a=e[1];return n||a?(a&&(a=a.substr(0,a.length-1)),n+a):"."},e.basename=function(t,e){var n=r(t)[2];return e&&n.substr(-1*e.length)===e&&(n=n.substr(0,n.length-e.length)),n},e.extname=function(t){return r(t)[3]};var i="b"==="ab".substr(-1)?function(t,e,n){return t.substr(e,n)}:function(t,e,n){return e<0&&(e=t.length+e),t.substr(e,n)}}).call(e,n(73))},function(t,e){function n(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function s(t){if(d===setTimeout)return setTimeout(t,0);if((d===n||!d)&&setTimeout)return d=setTimeout,setTimeout(t,0);try{return d(t,0)}catch(e){try{return d.call(null,t,0)}catch(e){return d.call(this,t,0)}}}function r(t){if(p===clearTimeout)return clearTimeout(t);if((p===a||!p)&&clearTimeout)return p=clearTimeout,clearTimeout(t);try{return p(t)}catch(e){try{return p.call(null,t)}catch(e){return p.call(this,t)}}}function i(){g&&h&&(g=!1,h.length?f=h.concat(f):y=-1,f.length&&l())}function l(){if(!g){var t=s(i);g=!0;for(var e=f.length;e;){for(h=f,f=[];++y<e;)h&&h[y].run();y=-1,e=f.length}h=null,g=!1,r(t)}}function o(t,e){this.fun=t,this.array=e}function c(){}var d,p,u=t.exports={};!function(){try{d="function"==typeof setTimeout?setTimeout:n}catch(t){d=n}try{p="function"==typeof clearTimeout?clearTimeout:a}catch(t){p=a}}();var h,f=[],g=!1,y=-1;u.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];f.push(new o(t,e)),1!==f.length||g||s(l)},o.prototype.run=function(){this.fun.apply(null,this.array)},u.title="browser",u.browser=!0,u.env={},u.argv=[],u.version="",u.versions={},u.on=c,u.addListener=c,u.once=c,u.off=c,u.removeListener=c,u.removeAllListeners=c,u.emit=c,u.prependListener=c,u.prependOnceListener=c,u.listeners=function(t){return[]},u.binding=function(t){throw new Error("process.binding is not supported")},u.cwd=function(){return"/"},u.chdir=function(t){throw new Error("process.chdir is not supported")},u.umask=function(){return 0}},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),o=n(0),c=a(o),d=n(61),p=a(d),u=function(t){function e(){return s(this,e),r(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return i(e,t),l(e,[{key:"render",value:function(){return c.default.createElement("input",this.props,this.props.children)}}]),e}(c.default.Component);e.default=(0,p.default)(u)},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},o=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),c=n(0),d=a(c),p=n(68),u=a(p),h=n(21),f=a(h),g=function(t){function e(){return s(this,e),r(this,(e.__proto__||Object.getPrototypeOf(e)).apply(this,arguments))}return i(e,t),o(e,[{key:"render",value:function(){var t=this,e=l({},this.props);return e.parentBindings&&delete e.parentBindings,d.default.createElement("div",l({},e,{ref:function(e){t.props.parentBindings.domNode=e}}),this.props.children)}}]),e}(d.default.Component);g.propTypes={name:f.default.string,id:f.default.string},e.default=(0,u.default)(g)},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var l=n(0),o=a(l),c=n(61),d=a(c),p=function(t){function e(){var t,n,a,i;s(this,e);for(var l=arguments.length,c=Array(l),d=0;d<l;d++)c[d]=arguments[d];return n=a=r(this,(t=e.__proto__||Object.getPrototypeOf(e)).call.apply(t,[this].concat(c))),a.render=function(){return o.default.createElement("a",a.props,a.props.children)},i=n,r(a,i)}return i(e,t),e}(o.default.Component);e.default=(0,d.default)(p)},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0}),e.Helpers=e.ScrollElement=e.ScrollLink=e.animateScroll=e.scrollSpy=e.Events=e.scroller=e.Element=e.Button=e.Link=void 0;var s=n(76),r=a(s),i=n(74),l=a(i),o=n(75),c=a(o),d=n(54),p=a(d),u=n(60),h=a(u),f=n(62),g=a(f),y=n(67),m=a(y),v=n(61),b=a(v),x=n(68),w=a(x),j=n(78),S=a(j);e.Link=r.default,e.Button=l.default,e.Element=c.default,e.scroller=p.default,e.Events=h.default,e.scrollSpy=g.default,e.animateScroll=m.default,e.ScrollLink=b.default,e.ScrollElement=w.default,e.Helpers=S.default,e.default={Link:r.default,Button:l.default,Element:c.default,scroller:p.default,Events:h.default,scrollSpy:g.default,animateScroll:m.default,ScrollLink:b.default,ScrollElement:w.default,Helpers:S.default}},function(t,e,n){"use strict";function a(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function r(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}var i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},l=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),o=n(0),c=(n(2),n(24),n(62)),d=n(54),p=n(21),u=n(69),h={to:p.string.isRequired,containerId:p.string,container:p.object,activeClass:p.string,spy:p.bool,smooth:p.oneOfType([p.bool,p.string]),offset:p.number,delay:p.number,isDynamic:p.bool,onClick:p.func,duration:p.oneOfType([p.number,p.func]),absolute:p.bool,onSetActive:p.func,onSetInactive:p.func,ignoreCancelEvents:p.bool,hashSpy:p.bool},f={Scroll:function(t,e){console.warn("Helpers.Scroll is deprecated since v1.7.0");var n=e||d,p=function(e){function d(t){a(this,d);var e=s(this,(d.__proto__||Object.getPrototypeOf(d)).call(this,t));return f.call(e),e.state={active:!1},e}return r(d,e),l(d,[{key:"getScrollSpyContainer",value:function(){var t=this.props.containerId,e=this.props.container;return t?document.getElementById(t):e&&e.nodeType?e:document}},{key:"componentDidMount",value:function(){if(this.props.spy||this.props.hashSpy){var t=this.getScrollSpyContainer();c.isMounted(t)||c.mount(t),this.props.hashSpy&&(u.isMounted()||u.mount(n),u.mapContainer(this.props.to,t)),this.props.spy&&c.addStateHandler(this.stateHandler),c.addSpyHandler(this.spyHandler,t),this.setState({container:t})}}},{key:"componentWillUnmount",value:function(){c.unmount(this.stateHandler,this.spyHandler)}},{key:"render",value:function(){var e="";e=this.state&&this.state.active?((this.props.className||"")+" "+(this.props.activeClass||"active")).trim():this.props.className;var n=i({},this.props);for(var a in h)n.hasOwnProperty(a)&&delete n[a];return n.className=e,n.onClick=this.handleClick,o.createElement(t,n)}}]),d}(o.Component),f=function(){var t=this;this.scrollTo=function(e,a){n.scrollTo(e,i({},t.state,a))},this.handleClick=function(e){t.props.onClick&&t.props.onClick(e),e.stopPropagation&&e.stopPropagation(),e.preventDefault&&e.preventDefault(),t.scrollTo(t.props.to,t.props)},this.stateHandler=function(){n.getActiveLink()!==t.props.to&&(null!==t.state&&t.state.active&&t.props.onSetInactive&&t.props.onSetInactive(),t.setState({active:!1}))},this.spyHandler=function(e){var a=t.getScrollSpyContainer();if(!u.isMounted()||u.isInitialized()){var s=t.props.to,r=null,i=0,l=0,o=0;if(a.getBoundingClientRect){o=a.getBoundingClientRect().top}if(!r||t.props.isDynamic){if(!(r=n.get(s)))return;var d=r.getBoundingClientRect();i=d.top-o+e,l=i+d.height}var p=e-t.props.offset,h=p>=Math.floor(i)&&p<Math.floor(l),f=p<Math.floor(i)||p>=Math.floor(l),g=n.getActiveLink();return f?(s===g&&n.setActiveLink(void 0),t.props.hashSpy&&u.getHash()===s&&u.changeHash(),t.props.spy&&t.state.active&&(t.setState({active:!1}),t.props.onSetInactive&&t.props.onSetInactive()),c.updateStates()):h&&g!==s?(n.setActiveLink(s),t.props.hashSpy&&u.changeHash(s),t.props.spy&&(t.setState({active:!0}),t.props.onSetActive&&t.props.onSetActive(s)),c.updateStates()):void 0}}};return p.propTypes=h,p.defaultProps={offset:0},p},Element:function(t){console.warn("Helpers.Element is deprecated since v1.7.0");var e=function(e){function n(t){a(this,n);var e=s(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,t));return e.childBindings={domNode:null},e}return r(n,e),l(n,[{key:"componentDidMount",value:function(){if("undefined"==typeof window)return!1;this.registerElems(this.props.name)}},{key:"componentWillReceiveProps",value:function(t){this.props.name!==t.name&&this.registerElems(t.name)}},{key:"componentWillUnmount",value:function(){if("undefined"==typeof window)return!1;d.unregister(this.props.name)}},{key:"registerElems",value:function(t){d.register(t,this.childBindings.domNode)}},{key:"render",value:function(){return o.createElement(t,i({},this.props,{parentBindings:this.childBindings}))}}]),n}(o.Component);return e.propTypes={name:p.string,id:p.string},e}};t.exports=f},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=n(59),s=["mousedown","mousewheel","touchmove","keydown"];e.default={subscribe:function(t){return"undefined"!=typeof document&&s.forEach(function(e){return(0,a.addPassiveEventListener)(document,e,t)})}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={defaultEasing:function(t){return t<.5?Math.pow(2*t,2)/2:1-Math.pow(2*(1-t),2)/2},linear:function(t){return t},easeInQuad:function(t){return t*t},easeOutQuad:function(t){return t*(2-t)},easeInOutQuad:function(t){return t<.5?2*t*t:(4-2*t)*t-1},easeInCubic:function(t){return t*t*t},easeOutCubic:function(t){return--t*t*t+1},easeInOutCubic:function(t){return t<.5?4*t*t*t:(t-1)*(2*t-2)*(2*t-2)+1},easeInQuart:function(t){return t*t*t*t},easeOutQuart:function(t){return 1- --t*t*t*t},easeInOutQuart:function(t){return t<.5?8*t*t*t*t:1-8*--t*t*t*t},easeInQuint:function(t){return t*t*t*t*t},easeOutQuint:function(t){return 1+--t*t*t*t*t},easeInOutQuint:function(t){return t<.5?16*t*t*t*t*t:1+16*--t*t*t*t*t}}},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},,function(t,e,n){"use strict";t.exports={"zh-cn":[{filename:"CLI-guide.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.7.0</p>\n"},{filename:"architecture.md",__html:'<h2>I. 基本架构及概念</h2>\n<p><img src="/img/nacos-Arch.jpg" alt="nacos_arch.jpg"></p>\n<ul>\n<li>\n<p><strong>服务 (Service)</strong></p>\n<p>服务是指一个或一组软件功能（例如特定信息的检索或一组操作的执行），其目的是不同的客户端可以为不同的目的重用（例如通过跨进程的网络调用）。Nacos 支持主流的服务生态，如 Kubernetes Service、gRPC|Dubbo RPC Service 或者 Spring Cloud RESTful Service.</p>\n</li>\n<li>\n<p><strong>服务注册中心 (Service Registry)</strong></p>\n<p>服务注册中心，它是服务，其实例及元数据的数据库。服务实例在启动时注册到服务注册表，并在关闭时注销。服务和路由器的客户端查询服务注册表以查找服务的可用实例。服务注册中心可能会调用服务实例的健康检查 API 来验证它是否能够处理请求。</p>\n</li>\n<li>\n<p><strong>服务元数据 (Service Metadata)</strong></p>\n<p>服务元数据是指包括服务端点(endpoints)、服务标签、服务版本号、服务实例权重、路由规则、安全策略等描述服务的数据</p>\n</li>\n<li>\n<p><strong>服务提供方 (Service Provider)</strong></p>\n<p>是指提供可复用和可调用服务的应用方</p>\n</li>\n<li>\n<p><strong>服务消费方 (Service Consumer)</strong></p>\n<p>是指会发起对某个服务调用的应用方</p>\n</li>\n<li>\n<p><strong>配置 (Configuration)</strong></p>\n<p>在系统开发过程中通常会将一些需要变更的参数、变量等从代码中分离出来独立管理，以独立的配置文件的形式存在。目的是让静态的系统工件或者交付物（如 WAR，JAR 包等）更好地和实际的物理运行环境进行适配。配置管理一般包含在系统部署的过程中，由系统管理员或者运维人员完成这个步骤。配置变更是调整系统运行时的行为的有效手段之一。</p>\n</li>\n<li>\n<p><strong>配置管理 (Configuration Management)</strong></p>\n<p>在数据中心中，系统中所有配置的编辑、存储、分发、变更管理、历史版本管理、变更审计等所有与配置相关的活动统称为配置管理。</p>\n</li>\n<li>\n<p><strong>名字服务 (Naming Service)</strong></p>\n<p>提供分布式系统中所有对象(Object)、实体(Entity)的“名字”到关联的元数据之间的映射管理服务，例如 ServiceName -&gt; Endpoints Info, Distributed Lock Name -&gt; Lock Owner/Status Info, DNS Domain Name -&gt; IP List, 服务发现和 DNS 就是名字服务的2大场景。</p>\n</li>\n<li>\n<p><strong>配置服务 (Configuration Service)</strong></p>\n<p>在服务或者应用运行过程中，提供动态配置或者元数据以及配置管理的服务提供者。</p>\n</li>\n<li>\n<p><strong><a href="https://nacos.io/#/docs/concepts.md">更多概念...</a></strong></p>\n</li>\n</ul>\n<h2>II. 构建物、部署及启动模式</h2>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1531730742844-e8325932-258b-49b2-9473-8d1199efe20d.png" alt="undefined"></p>\n<ul>\n<li>\n<p><strong>2种交付工件</strong></p>\n<p>Nacos 支持标准 Docker 镜像(TODO: 0.2版本开始支持）及 zip(tar.gz)压缩包的构建物。</p>\n</li>\n<li>\n<p><strong>启动模式</strong></p>\n<p>Nacos 支持将注册中心(Service Registry）与配置中心(Config Center) 在一个进程合并部署或者将2者分离部署的两种模式。</p>\n</li>\n<li>\n<p><strong>免费的公有云服务模式</strong></p>\n<p>除了您自己部署和启动 Nacos 服务之外，在云计算时代，Nacos 也支持公有云模式，在阿里云公有云的商业产品（如<a href="xx">ACM TODO</a>， <a href="xx">EDAS TODO</a>) 中会提供 Nacos 的免费的公有云服务。我们也欢迎和支持其他的公有云提供商提供 Nacos 的公有云服务。</p>\n</li>\n</ul>\n'},{filename:"community.md",__html:'<h2>Contact</h2>\n<h3>Nacos Gitter-<a href="https://gitter.im/alibaba/nacos">https://gitter.im/alibaba/nacos</a></h3>\n<h3>Nacos weibo-<a href="https://weibo.com/u/6574374908">https://weibo.com/u/6574374908</a></h3>\n<h3>Nacos segmentfault-<a href="https://segmentfault.com/t/nacos">https://segmentfault.com/t/nacos</a></h3>\n<h3>Mailing list</h3>\n<p>Mailing list is recommended for discussing almost anything related to Nacos. Please refer to this?<a href="https://github.com/apache/incubator-dubbo/wiki/Mailing-list-subscription-guide">guide</a>?for detailed documentation on how to subscribe to our mailing lists.</p>\n<ul>\n<li><a href="https://lark.alipay.com/nacos/nacosdocs/vl19q1">dev-nacos@googlegroups.com</a>: The develop mailing list. You can ask questions here if you encounter any problem when using or developing Nacos.</li>\n<li><a href="https://lark.alipay.com/nacos/nacosdocs/vl19q1">commits-nacos@googlegroups.com</a>: All commits will be sent to this mailing list. You can subscribe to it if you are interested in Nacos\' development.</li>\n<li><a href="https://lark.alipay.com/nacos/nacosdocs/vl19q1">users-nacos@googlegroups.com</a>: All Github?<a href="https://github.com/alibaba/nacos/issues">issue</a>?updates and?<a href="https://github.com/alibaba/nacos/pulls">pull request</a>?updates will be sent to this mailing list.</li>\n<li><a href="https://lark.alipay.com/nacos/nacosdocs/vl19q1">nacos_dev@linux.alibaba.com</a>.</li>\n</ul>\n'},{filename:"concepts.md",__html:'<h2>地域 （Region）</h2>\n<p><span data-type="color" style="color:rgb(51, 51, 51)"><span data-type="background" style="background-color:rgb(255, 255, 255)">物理的数据中心，资源创建成功后不能更换。</span></span></p>\n<h2>可用区（Available Zone）</h2>\n<p>同一<span data-type="color" style="color:rgb(51, 51, 51)"><span data-type="background" style="background-color:rgb(255, 255, 255)">地域内，电力和网络互相独立的物理区域。同一可用区内，实例的网络延迟较低。</span></span></p>\n<h2>接入点（Endpoint）</h2>\n<p>地域的某个服务的入口域名。</p>\n<h2>命名空间（Namespace）</h2>\n<p>用于进行租户粒度的配置隔离。不同的命名空间下，可以存在相同的 Group 或 Data ID 的配置。Namespace 的常用场景之一是不同环境的配置的区分隔离，例如开发测试环境和生产环境的资源（如配置、服务）隔离等。</p>\n<h2>配置 (Configuration)</h2>\n<p>在系统开发过程中，开发者通常会将一些需要变更的参数、变量等从代码中分离出来独立管理，以独立的配置文件的形式存在。目的是让静态的系统工件或者交付物（如 WAR，JAR 包等）更好地和实际的物理运行环境进行适配。配置管理一般包含在系统部署的过程中，由系统管理员或者运维人员完成。配置变更是调整系统运行时的行为的有效手段。</p>\n<h2>配置管理 (Configuration Management)</h2>\n<p>系统配置的编辑、存储、分发、变更管理、历史版本管理、变更审计等所有与配置相关的活动。</p>\n<h2>配置项 (Configuration Item)</h2>\n<p>一个具体的可配置的参数与其值域，通常以 param-key=param-value 的形式存在。例如我们常配置系统的日志输出级别（logLevel=INFO|WARN|ERROR） 就是一个配置项。</p>\n<h2>配置集 (Configuration Set)</h2>\n<p>一组相关或者不相关的配置项的集合称为配置集。在系统中，一个配置文件通常就是一个配置集，包含了系统各个方面的配置。例如，一个配置集可能包含了数据源、线程池、日志级别等配置项。</p>\n<h2>配置集 ID（Data ID）</h2>\n<p>Nacos 中的某个配置集的 ID。配置集 ID 是组织划分配置的维度之一。Data ID 通常用于组织划分系统的配置集。一个系统或者应用可以包含多个配置集，每个配置集都可以被一个有意义的名称标识。Data ID 通常采用类 Java 包（如 com.taobao.tc.refund.log.level）的命名规则保证全局唯一性。此命名规则非强制。</p>\n<h2>配置分组（Group）</h2>\n<p>Nacos 中的一组配置集，是组织配置的维度之一。通过一个有意义的字符串（如 Buy 或 Trade ）对配置集进行分组，从而区分 Data ID 相同的配置集。当您在 Nacos 上创建一个配置时，如果未填写配置分组的名称，则配置分组的名称默认采用 DEFAULT_GROUP 。配置分组的常见场景：不同的应用或组件使用了相同的配置类型，如 database_url 配置和 MQ_topic 配置。</p>\n<h2>配置快照 (Configuration Snapshot)</h2>\n<p>Nacos 的客户端 SDK 会在本地生成配置的快照。当客户端无法连接到 Nacos Server 时，可以使用配置快照显示系统的整体容灾能力。配置快照类似于 Git 中的本地 commit，也类似于缓存，会在适当的时机更新，但是并没有缓存过期（expiration）的概念。</p>\n<h2>服务（Service）</h2>\n<p>通过预定义接口网络访问的提供给客户端的软件功能。</p>\n<h2>服务名（Service Name）</h2>\n<p>服务提供的标识，通过该标识可以唯一确定其指代的服务。</p>\n<h2>服务注册中心（Service Registry）</h2>\n<p>存储服务实例和服务负载均衡策略的数据库。</p>\n<h2>服务发现（Service Discovery）</h2>\n<p>在计算机网络上，（通常使用服务名）对服务下的实例的地址和元数据进行探测，并以预先定义的接口提供给客户端进行查询。</p>\n<h2>元信息（Metadata）</h2>\n<p><span data-type="color" style="color:rgb(38, 38, 38)"><span data-type="background" style="background-color:rgb(255, 255, 255)">自定义配置信息，如容灾策略、负载均衡策略、鉴权配置、各种标记对，从作用范围来看，分为服务级别的元信息、虚拟集群的元信息及实例的元信息。</span></span></p>\n<h2>应用（Application）</h2>\n<p>用于标识服务提供方的服务的属性。</p>\n<h2>分组（Service Group）</h2>\n<p>不同的服务可以归类到同一分组。</p>\n<h2>虚拟集群（Virtual Cluster）</h2>\n<p>同一个服务下的服务实例可以被进一步分类，分类单位可以是虚拟集群。</p>\n<h2>实例（Instance）</h2>\n<p>提供一个或多个服务的具有可访问网络地址（IP:Port）的进程。</p>\n<h2>权重（Weight）</h2>\n<p>实例级别的配置。权重为浮点数。权重越大，分配给该实例的流量越大。</p>\n<h2>健康检查（Health Check）</h2>\n<p>以指定方式检查服务下挂载 IP 的健康度，从而确认该 IP 是否能提供服务。根据检查结果，IP 会被判断为健康或不健康。对服务发起解析请求时，不健康的 IP 不会返回给客户端。</p>\n<h2>健康保护阈值（Protect Threshold）</h2>\n<p>为了防止因部分 IP 不健康导致流量全部流向健康IP，继而造成流量压力把健康 IP 压垮并形成雪崩效应，应将健康保护阈值定义为一个 0 到 1 之间的浮点数。当域名健康 IP 占总 IP 的比例小于该值时，无论IP是否健康，都会将这个IP返回给客户端。这样做虽然损失了一部分流量，但是保证了剩余健康IP能正常工作。</p>\n'},{filename:"console-guide.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.7.0</p>\n"},{filename:"contributing.md",__html:'<h2>如何贡献</h2>\n<p>我们非常欢迎您的贡献和加入，无论是微不足道的清理或大的新功能。我们希望为每个编程语言提供高质量、有良好文档的代码。</p>\n<p>这也不是代码是唯一有贡献项目的方式。我们非常重视文档、与其他项目的集成，并欣然接受这些方面的改进。</p>\n<p>联系\ngitter <a href="https://gitter.im/alibaba/nacos">https://gitter.im/alibaba/nacos</a></p>\n<h4>邮件列表</h4>\n<p>邮件列表是讨论与Dubbo相关的几乎所有内容的推荐方式。有关如何订阅的详细文档，请参阅此<a href="https://github.com/apache/incubator-dubbo/wiki/Mailing-list-subscription-guide">指南</a>。</p>\n<ul>\n<li>\n<p><a href="mailto%EF%BC%9Adev-nacos+subscribe@googlegroups.com">dev-nacos@googlegroups.com</a>：开发邮件列表，如果您在使用或开发Nacos时遇到任何问题，可以在此处提问。</p>\n</li>\n<li>\n<p><a href="mailto%EF%BC%9Acommits+nacos-subscribe@googlegroups.com">commits-nacos@googlegroups.com</a>：所有提交都将发送到此邮件列表。如果您对Nacos的开发感兴趣，可以订阅它。</p>\n</li>\n<li>\n<p><a href="mailto%EF%BC%9Ausers-nacos+subscribe@googlegroups.com">users-nacos@googlegroups.com</a>：所有Github <a href="https://github.com/alibaba/nacos/issues">issues</a>更新和[pull request]（<a href="https://github.com/alibaba/nacos/pulls">https://github.com/alibaba/nacos/pulls</a>)更新将发送到此邮件列表。</p>\n</li>\n<li>\n<p>有任何问题可以联系<a href="mailto%EF%BC%9Anacos_dev@linux.alibaba.com">nacos_dev@linux.alibaba.com</a>。</p>\n</li>\n</ul>\n<h4>贡献流程</h4>\n<p>这是贡献者的工作流程的大致轮廓：</p>\n<p>fork当前存储github库。\n创建一个分支，作为贡献的基础。 这通常是master分支。\n做出一些变更提交。\n确保提交消息的格式正确（见下文）。\n推送变更到你的fork仓库中。\n按照拉取请求模板中的清单进行操作\n在发送拉取请求之前，请将您的fork仓库与远程存储库同步。 这将使您的拉取请求变得简单明了。 见下面的指南：</p>\n<pre><code>git remote add upstream git@github.com:alibaba/nacos.git\ngit fetch upstream\ngit rebase upstream/master\ngit checkout -b your_awesome_patch\n... add some work\ngit push origin your_awesome_patch\n</code></pre>\n<p>提交pull request 到 alibaba/nacos，等待回复。如果回复的慢，请无情的催促。</p>\n<h2>贡献代码</h2>\n<p>请提交代码时候，检查以下内容：</p>\n<h4>如果变化不大，请编写一些覆盖新功能的单元测试。</h4>\n<h4>如果你正在引入一个全新的特性或API，那么首先启动wiki并在基本设计上达成共识，再开始投入。</h4>\n<h4>我们的工作是及时跟进补丁。如果我们没有及时跟进，请无情的催促我们。</h4>\n<h2>成为贡献者</h2>\n<p>We are always interested in adding new contributors. What we look for are series of contributions, good taste and ongoing interest in the project. If you are interested in becoming a committer, please let one of the existing committers know and they can help you walk through the process.</p>\n<p>Nowadays,we have several important contribution points:</p>\n<p>我们会积极纳入新的贡献者。我们更关注的是一系列的持续贡献，良好的品味和对项目维护的持续兴趣。如果你想成为一个提交者（Committer），请让一个现有的提交者(Committer)知道，他们会帮助你通过贡献加入我们。</p>\n<p>现在，我们有几个重要的贡献点：</p>\n<h4>Wiki &amp; JavaDoc</h4>\n<h4>Nacos Console</h4>\n<h4>Nacos SDK(<a href="http://C++.Net">C++.Net</a>\\Php\\Python\\Go\\Node.js)</h4>\n<h5>前提</h5>\n<p>如果你想贡献以上的项，请你必须遵守我们的一些先决条件：</p>\n<h6>可读性，一个API必须具有JavaDoc，一些非常重要的方法也必须有JavaDoc。</h6>\n<h6>可测性，关于测试过程的单元测试覆盖率（80%）</h6>\n<h6>可维护性，可满足我们的<a href="style/codeStyle.xml">PMD spec</a>，以及至少3个月的更新频率</h6>\n<h6>可部署性，我们可以鼓励您部署到<a href="http://search.maven.org/">maven repository</a></h6>\n'},{filename:"deployment.md",__html:'<h1>Nacos支持三种部署模式</h1>\n<ul>\n<li>单机模式 - 用于测试和单机试用。</li>\n<li>集群模式 - 用于生产环境，确保高可用。</li>\n<li>多集群模式 - 用于多数据中心场景。</li>\n</ul>\n<h2>单机模式下运行Nacos</h2>\n<h3>Linux/Unix/Mac</h3>\n<ul>\n<li>Standalone means it is non-cluster Mode. *\nsh <a href="http://startup.sh">startup.sh</a> -m standalone</li>\n</ul>\n<h3>Windows</h3>\n<p>cmd startup.cmd\n或者双击 startup.cmd 文件</p>\n<h2>集群模式下运行Nacos</h2>\n<h3>Linux/Unix/Mac</h3>\n<p>sh <a href="http://startup.sh">startup.sh</a></p>\n<h2>Deploy Nacos in Multi-Cluster Mode</h2>\n<p>Nacos支持NameServer路由请求模式，通过它您可以设计一个有用的映射规则来控制请求转发到相应的集群，在映射规则中您可以按命名空间或租户等分片请求...</p>\n<h3>TODO</h3>\n'},{filename:"managementAPI.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.7.0</p>\n"},{filename:"open-API.md",__html:'<h1>配置管理</h1>\n<h2>获取配置</h2>\n<h3>描述</h3>\n<p>获取Nacos上的配置。</p>\n<h3>请求类型</h3>\n<p>GET</p>\n<h3>请求URL</h3>\n<p>/nacos/v1/cs/configs</p>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必须</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">否</td>\n<td style="text-align:left">租户信息，对应 Nacos 的命名空间字段。</td>\n</tr>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">是</td>\n<td style="text-align:left">配置 ID。</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">是</td>\n<td style="text-align:left">配置分组。</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置值</td>\n</tr>\n</tbody>\n</table>\n<h3>错误编码</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">错误代码</th>\n<th style="text-align:left">描述</th>\n<th style="text-align:left">语义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">400</td>\n<td style="text-align:left">Bad Request</td>\n<td style="text-align:left">客户端请求中的语法错误</td>\n</tr>\n<tr>\n<td style="text-align:left">403</td>\n<td style="text-align:left">Forbidden</td>\n<td style="text-align:left">没有权限</td>\n</tr>\n<tr>\n<td style="text-align:left">404</td>\n<td style="text-align:left">Not Found</td>\n<td style="text-align:left">无法找到资源</td>\n</tr>\n<tr>\n<td style="text-align:left">500</td>\n<td style="text-align:left">Internal Server Error</td>\n<td style="text-align:left">服务器内部错误</td>\n</tr>\n<tr>\n<td style="text-align:left">200</td>\n<td style="text-align:left">OK</td>\n<td style="text-align:left">正常</td>\n</tr>\n</tbody>\n</table>\n<h3>示例</h3>\n<ul>\n<li>\n<p>请求示例</p>\n<pre><code class="language-plain">http:serverIp:8080/nacos/v1/cs/configs?dataId=dataIdparam&amp;group=groupParam&amp;tenant=tenantParam\n\n</code></pre>\n</li>\n<li>\n<p>返回示例</p>\n<pre><code>contentTest\n</code></pre>\n</li>\n</ul>\n<h2>监听配置</h2>\n<h3>描述</h3>\n<p>监听 Nacos 上的配置，以便实时感知配置变更。如果配置变更，则用<a href="~~64131~~">获取配置</a>接口获取配置的最新值，动态刷新本地缓存。</p>\n<p>注册监听采用的是异步 Servlet 技术。注册监听本质就是带着配置和配置值的 MD5 值和后台对比。如果 MD5 值不一致，就立即返回不一致的配置。如果值一致，就等待住 30 秒。返回值为空。</p>\n<h3>请求类型</h3>\n<p>POST</p>\n<h3>请求URL</h3>\n<p>/nacos/v1/cs/configs/listener</p>\n<h3>请求参数</h3>\n<div class="bi-table">\n  <table>\n    <colgroup>\n      <col width="auto" />\n      <col width="118px" />\n      <col width="115px" />\n      <col width="325px" />\n    </colgroup>\n    <tbody>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">名称</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">类型</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">是否必须</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">描述</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Listening-Configs</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">是</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">监听数据报文。格式为 dataId^2Group2contentMD5^2tenant^1或者dataId^2Group2contentMD5^1。</div>\n          <ul data-type="unordered-list">\n            <li data-type="list-item" data-list-type="unordered-list">\n              <div data-type="p">dataId：配置 ID</div>\n            </li>\n            <li data-type="list-item" data-list-type="unordered-list">\n              <div data-type="p">group：配置分组</div>\n            </li>\n            <li data-type="list-item" data-list-type="unordered-list">\n              <div data-type="p">contentMD5：配置内容 MD5 值</div>\n            </li>\n            <li data-type="list-item" data-list-type="unordered-list">\n              <div data-type="p">tenant：租户信息，对应 Nacos 的命名空间字段(非必填)</div>\n            </li>\n          </ul>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<h3>Header 参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必须</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">Long-Pulling-Timeout</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">是</td>\n<td style="text-align:left">长轮训等待 30s，此处填写 30000。</td>\n</tr>\n</tbody>\n</table>\n<h3>参数说明</h3>\n<ul>\n<li>配置多个字段间分隔符：^2  = Character.toString((char) 2</li>\n<li>配置间分隔符：^1 = Character.toString((char) 1)</li>\n<li>contentMD5:  MD5(content)，第一次本地缓存为空，所以这块为空串</li>\n</ul>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置值</td>\n</tr>\n</tbody>\n</table>\n<h3>错误编码</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">错误代码</th>\n<th style="text-align:left">描述</th>\n<th style="text-align:left">语义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">400</td>\n<td style="text-align:left">Bad Request</td>\n<td style="text-align:left">客户端请求中的语法错误</td>\n</tr>\n<tr>\n<td style="text-align:left">403</td>\n<td style="text-align:left">Forbidden</td>\n<td style="text-align:left">没有权限</td>\n</tr>\n<tr>\n<td style="text-align:left">404</td>\n<td style="text-align:left">Not Found</td>\n<td style="text-align:left">无法找到资源</td>\n</tr>\n<tr>\n<td style="text-align:left">500</td>\n<td style="text-align:left">Internal Server Error</td>\n<td style="text-align:left">服务器内部错误</td>\n</tr>\n<tr>\n<td style="text-align:left">200</td>\n<td style="text-align:left">OK</td>\n<td style="text-align:left">正常</td>\n</tr>\n</tbody>\n</table>\n<h3>示例</h3>\n<ul>\n<li>请求示例</li>\n</ul>\n<pre><code>http://serverIp:8080/nacos/v1/cs/configs/listener\n\nPOST 请求体数据内容：\n\nListening-Configs=dataId^2group^2contentMD5^2tenant^1\n</code></pre>\n<ul>\n<li>返回示例</li>\n</ul>\n<pre><code>如果配置变化\n\ndataId^2group^2tenant^1\n\n如果配置无变化：会返回空串\n</code></pre>\n<h2>发布配置</h2>\n<h3>描述</h3>\n<p>发布 Nacos 上的配置。</p>\n<h3>请求类型</h3>\n<p>POST</p>\n<h3>请求 URL</h3>\n<p>/nacos/v1/cs/configs</p>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必须</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">否</td>\n<td style="text-align:left">租户信息，对应 Nacos 的命名空间字段</td>\n</tr>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">是</td>\n<td style="text-align:left">配置 ID</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">是</td>\n<td style="text-align:left">配置分组</td>\n</tr>\n<tr>\n<td style="text-align:left">content</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">是</td>\n<td style="text-align:left">配置内容</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">是否发布成功</td>\n</tr>\n</tbody>\n</table>\n<h3>错误编码</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">错误代码</th>\n<th style="text-align:left">描述</th>\n<th style="text-align:left">语义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">400</td>\n<td style="text-align:left">Bad Request</td>\n<td style="text-align:left">客户端请求中的语法错误</td>\n</tr>\n<tr>\n<td style="text-align:left">403</td>\n<td style="text-align:left">Forbidden</td>\n<td style="text-align:left">没有权限</td>\n</tr>\n<tr>\n<td style="text-align:left">404</td>\n<td style="text-align:left">Not Found</td>\n<td style="text-align:left">无法找到资源</td>\n</tr>\n<tr>\n<td style="text-align:left">500</td>\n<td style="text-align:left">Internal Server Error</td>\n<td style="text-align:left">服务器内部错误</td>\n</tr>\n<tr>\n<td style="text-align:left">200</td>\n<td style="text-align:left">OK</td>\n<td style="text-align:left">正常</td>\n</tr>\n</tbody>\n</table>\n<h3>示例</h3>\n<ul>\n<li>请求示例</li>\n</ul>\n<pre><code>http:serverIp:8080/nacos/v1/cs/configs\n\nhttp body：\ndataId=dataIdparam&amp;group=groupParam&amp;tenant=tenantParam&amp;content=contentParam\n\n</code></pre>\n<ul>\n<li>返回示例</li>\n</ul>\n<pre><code>true\n</code></pre>\n<h2>删除配置</h2>\n<h3>描述</h3>\n<p>删除 Nacos 上的配置。</p>\n<h3>请求类型</h3>\n<p>DELETE</p>\n<h3>请求 URL</h3>\n<p>/nacos/v1/cs/configs</p>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必须</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">否</td>\n<td style="text-align:left">租户信息，对应 Naocs 的命名空间字段</td>\n</tr>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">是</td>\n<td style="text-align:left">配置 ID</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">是</td>\n<td style="text-align:left">配置分组</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">是否删除成功</td>\n</tr>\n</tbody>\n</table>\n<h3>错误编码</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">错误代码</th>\n<th style="text-align:left">描述</th>\n<th style="text-align:left">语义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">400</td>\n<td style="text-align:left">Bad Request</td>\n<td style="text-align:left">客户端请求中的语法错误</td>\n</tr>\n<tr>\n<td style="text-align:left">403</td>\n<td style="text-align:left">Forbidden</td>\n<td style="text-align:left">没有权限</td>\n</tr>\n<tr>\n<td style="text-align:left">404</td>\n<td style="text-align:left">Not Found</td>\n<td style="text-align:left">无法找到资源</td>\n</tr>\n<tr>\n<td style="text-align:left">500</td>\n<td style="text-align:left">Internal Server Error</td>\n<td style="text-align:left">服务器内部错误</td>\n</tr>\n<tr>\n<td style="text-align:left">200</td>\n<td style="text-align:left">OK</td>\n<td style="text-align:left">正常</td>\n</tr>\n</tbody>\n</table>\n<h3>示例</h3>\n<ul>\n<li>请求示例</li>\n</ul>\n<pre><code>http:serverIp:8080/nacos/v1/cs/configs?dataId=dataIdparam&amp;group=groupParam\n\n</code></pre>\n<ul>\n<li>返回示例</li>\n</ul>\n<pre><code>true\n</code></pre>\n<h1>服务发现API</h1>\n<h2>注册实例</h2>\n<h3>描述</h3>\n<p>注册一个实例到服务。</p>\n<h3>请求类型</h3>\n<p>PUT</p>\n<h3>请求路径</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instance\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>服务实例IP</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">是</td>\n<td>服务实例port</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">否</td>\n<td>租户ID</td>\n</tr>\n<tr>\n<td style="text-align:left">weight</td>\n<td style="text-align:left">double</td>\n<td style="text-align:left">否</td>\n<td>权重</td>\n</tr>\n<tr>\n<td style="text-align:left">healthy</td>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">否</td>\n<td>是否健康</td>\n</tr>\n<tr>\n<td style="text-align:left">metadata</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">否</td>\n<td>扩展信息</td>\n</tr>\n<tr>\n<td style="text-align:left">cluster</td>\n<td style="text-align:left">JSON格式字符串</td>\n<td style="text-align:left">否</td>\n<td>集群信息</td>\n</tr>\n<tr>\n<td style="text-align:left">service</td>\n<td style="text-align:left">JSON格式字符串</td>\n<td style="text-align:left">否，不存在则serviceName必须存在。</td>\n<td>服务信息</td>\n</tr>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">如果service参数存在，则不必选，否则必选。</td>\n<td>服务名</td>\n</tr>\n</tbody>\n</table>\n<p>service参数格式：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">name</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">app</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">否</td>\n<td>应用名</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">否</td>\n<td>服务分组</td>\n</tr>\n<tr>\n<td style="text-align:left">protectThreshold</td>\n<td style="text-align:left">double</td>\n<td style="text-align:left">否</td>\n<td>保护阈值</td>\n</tr>\n<tr>\n<td style="text-align:left">healthCheckMode</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">否</td>\n<td>健康检查模式：server，client或者none</td>\n</tr>\n<tr>\n<td style="text-align:left">metadata</td>\n<td style="text-align:left">JSON</td>\n<td style="text-align:left">否</td>\n<td>扩展信息</td>\n</tr>\n</tbody>\n</table>\n<p>cluster参数格式：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">name</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>集群名</td>\n</tr>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>集群归属的服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">healthChecker</td>\n<td style="text-align:left">JSON</td>\n<td style="text-align:left">否</td>\n<td>健康检查方式</td>\n</tr>\n<tr>\n<td style="text-align:left">defaultPort</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">否</td>\n<td>默认实例端口</td>\n</tr>\n<tr>\n<td style="text-align:left">defaultCheckPort</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">否</td>\n<td>默认健康检查端口</td>\n</tr>\n<tr>\n<td style="text-align:left">userIPPort4Check</td>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">否</td>\n<td>是否用实例端口做健康检查</td>\n</tr>\n<tr>\n<td style="text-align:left">metadata</td>\n<td style="text-align:left">JSON</td>\n<td style="text-align:left">否</td>\n<td>扩展信息</td>\n</tr>\n</tbody>\n</table>\n<p>healthChecker目前支持三种：TCP、HTTP和MYSQL。\n根据type的类型，需要传递的参数各有区别。\nTCP类型：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">type=TCP</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>检查类型</td>\n</tr>\n</tbody>\n</table>\n<p>HTTP类型：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">type=HTTP</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>检查类型</td>\n</tr>\n<tr>\n<td style="text-align:left">curlPath</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>检查路径</td>\n</tr>\n<tr>\n<td style="text-align:left">curlHost</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">否</td>\n<td>检查host，存放HTTP Header</td>\n</tr>\n<tr>\n<td style="text-align:left">expectedResponseCode</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">否，默认200</td>\n<td>预期返回码</td>\n</tr>\n</tbody>\n</table>\n<p>MYSQL类型：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">type=MYSQL</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>检查类型</td>\n</tr>\n<tr>\n<td style="text-align:left">user</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>MySQL用户</td>\n</tr>\n<tr>\n<td style="text-align:left">pwd</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>MySQL密码</td>\n</tr>\n<tr>\n<td style="text-align:left">cmd</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>执行命令</td>\n</tr>\n</tbody>\n</table>\n<h3>示例请求</h3>\n<pre><code class="language-plain">curl -X PUT \'http://127.0.0.1:8080/nacos/v1/ns/instance?cluster=%7b%22metadata%22%3a%7b%7d%2c%22defaultCheckPort%22%3a80%2c%22defaultPort%22%3a80%2c%22healthChecker%22%3a%7b%22type%22%3a%22TCP%22%7d%2c%22name%22%3a%22%22%2c%22useIPPort4Check%22%3atrue%7d&amp;port=8080&amp;healthy=true&amp;ip=11.11.11.11&amp;weight=1.0&amp;serviceName=nacos.test.3&amp;encoding=GBK&amp;tenant=n1\'\'\n</code></pre>\n<h3>示例返回</h3>\n<p>ok</p>\n<h2>删除实例</h2>\n<h3>描述</h3>\n<p>删除服务下的一个实例。</p>\n<h3>请求类型</h3>\n<p>DELETE</p>\n<h3>请求路径</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instance\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>服务实例IP</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">是</td>\n<td>服务实例port</td>\n</tr>\n<tr>\n<td style="text-align:left">cluster</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>集群名称</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">否</td>\n<td>租户ID</td>\n</tr>\n</tbody>\n</table>\n<h3>示例请求</h3>\n<pre><code class="language-plain">curl -X DELETE 127.0.0.1:8080/nacos/v1/ns/instance?serviceName=nacos.test.1&amp;ip=1.1.1.1&amp;port=8888&amp;cluster=TEST1\n</code></pre>\n<h3>示例返回</h3>\n<p>ok</p>\n<h2>修改实例</h2>\n<h3>描述</h3>\n<p>修改服务下的一个实例。</p>\n<h3>请求类型</h3>\n<p>POST</p>\n<h3>请求路径</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instance\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>服务实例IP</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">是</td>\n<td>服务实例port</td>\n</tr>\n<tr>\n<td style="text-align:left">cluster</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>集群名称</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">否</td>\n<td>租户ID</td>\n</tr>\n<tr>\n<td style="text-align:left">weight</td>\n<td style="text-align:left">double</td>\n<td style="text-align:left">否</td>\n<td>权重</td>\n</tr>\n<tr>\n<td style="text-align:left">metadata</td>\n<td style="text-align:left">JSON</td>\n<td style="text-align:left">否</td>\n<td>扩展信息</td>\n</tr>\n</tbody>\n</table>\n<h3>示例请求</h3>\n<pre><code class="language-plain">curl -X POST 127.0.0.1:8080/nacos/v1/ns/instance?serviceName=nacos.test.1&amp;ip=1.1.1.1&amp;port=8888&amp;cluster=TEST1&amp;weight=8&amp;metadata={}\n</code></pre>\n<h3>示例返回</h3>\n<p>ok</p>\n<h2>查询实例列表</h2>\n<h3>描述</h3>\n<p>查询服务下的实例列表</p>\n<h3>请求类型</h3>\n<p>GET</p>\n<h3>请求路径</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instances\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">否</td>\n<td>租户ID</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">字符串，多个集群用逗号分隔</td>\n<td style="text-align:left">否</td>\n<td>集群名称</td>\n</tr>\n<tr>\n<td style="text-align:left">healthyOnly</td>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">否，默认为false</td>\n<td>是否只返回健康实例</td>\n</tr>\n</tbody>\n</table>\n<h3>示例请求</h3>\n<pre><code class="language-plain">curl -X GET 127.0.0.1:8080/nacos/v1/ns/instances?serviceName=nacos.test.1\n</code></pre>\n<h3>示例返回</h3>\n<pre><code class="language-json">{\n\t<span class="hljs-attr">"dom"</span>: <span class="hljs-string">"nacos.test.1"</span>,\n\t<span class="hljs-attr">"cacheMillis"</span>: <span class="hljs-number">1000</span>,\n\t<span class="hljs-attr">"useSpecifiedURL"</span>: <span class="hljs-literal">false</span>,\n\t<span class="hljs-attr">"hosts"</span>: [{\n\t\t<span class="hljs-attr">"valid"</span>: <span class="hljs-literal">true</span>,\n\t\t<span class="hljs-attr">"marked"</span>: <span class="hljs-literal">false</span>,\n\t\t<span class="hljs-attr">"instanceId"</span>: <span class="hljs-string">"10.10.10.10-8888-DEFAULT-nacos.test.1"</span>,\n\t\t<span class="hljs-attr">"port"</span>: <span class="hljs-number">8888</span>,\n\t\t<span class="hljs-attr">"ip"</span>: <span class="hljs-string">"10.10.10.10"</span>,\n\t\t<span class="hljs-attr">"weight"</span>: <span class="hljs-number">1.0</span>,\n\t\t<span class="hljs-attr">"metadata"</span>: {}\n\t}],\n\t<span class="hljs-attr">"checksum"</span>: <span class="hljs-string">"3bbcf6dd1175203a8afdade0e77a27cd1528787794594"</span>,\n\t<span class="hljs-attr">"lastRefTime"</span>: <span class="hljs-number">1528787794594</span>,\n\t<span class="hljs-attr">"env"</span>: <span class="hljs-string">""</span>,\n\t<span class="hljs-attr">"clusters"</span>: <span class="hljs-string">""</span>\n}\n</code></pre>\n<h2>查询实例详情</h2>\n<h3>描述</h3>\n<p>查询一个服务下个某个实例详情。</p>\n<h3>请求类型</h3>\n<p>GET</p>\n<h3>请求路径</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instance\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">是否必选</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>实例IP</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">是</td>\n<td>实例端口</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">否</td>\n<td>租户ID</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">字符串，多个集群用逗号分隔</td>\n<td style="text-align:left">否</td>\n<td>集群名称</td>\n</tr>\n<tr>\n<td style="text-align:left">healthyOnly</td>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">否，默认为false</td>\n<td>是否只返回健康实例</td>\n</tr>\n</tbody>\n</table>\n<h3>示例请求</h3>\n<pre><code class="language-plain">curl -X GET \'127.0.0.1:8080/nacos/v1/ns/instance?serviceName=nacos.test.2&amp;ip=10.10.10.10&amp;port=8888&amp;cluster=DEFAULT\'\n</code></pre>\n<h3>示例返回</h3>\n<pre><code class="language-json">{\n\t<span class="hljs-attr">"metadata"</span>: {},\n\t<span class="hljs-attr">"instanceId"</span>: <span class="hljs-string">"10.10.10.10-8888-DEFAULT-nacos.test.2"</span>,\n\t<span class="hljs-attr">"port"</span>: <span class="hljs-number">8888</span>,\n\t<span class="hljs-attr">"service"</span>: <span class="hljs-string">"nacos.test.2"</span>,\n\t<span class="hljs-attr">"healthy"</span>: <span class="hljs-literal">false</span>,\n\t<span class="hljs-attr">"ip"</span>: <span class="hljs-string">"10.10.10.10"</span>,\n\t<span class="hljs-attr">"clusterName"</span>: <span class="hljs-string">"DEFAULT"</span>,\n\t<span class="hljs-attr">"weight"</span>: <span class="hljs-number">1.0</span>\n}\n</code></pre>\n'},{filename:"other-language.md",__html:'<p>Nacos社区当前仅提供了Java版本的客户端，我们将主要依靠社区的贡献来发展多语言客户端。在未来，我们将向Nacos社区用户推荐那些最被广泛使用的以及支持最好的客户端作为Nacos相应语言的官方版本。</p>\n<ul>\n<li><a href="TO_LINK">go - IN PLAN</a></li>\n<li><a href="TO_LINK">cpp - IN PLAN</a></li>\n<li><a href="TO_LINK">python - IN PLAN</a></li>\n<li><a href="TO_LINK">nodejs - IN PLAN</a></li>\n<li>more ...</li>\n</ul>\n'},{filename:"pull-request.md",__html:'<p>Please do not create a Pull Request without creating an issue first.</p>\n<h2>What is the purpose of the change</h2>\n<p>XXXXX</p>\n<h2>Brief changelog</h2>\n<p>XX</p>\n<h2>Verifying this change</h2>\n<p>XXXX</p>\n<p>Follow this checklist to help us incorporate your contribution quickly and easily:</p>\n<ul>\n<li>[ ] Make sure there is a Github issue filed for the change (usually before you start working on it). Trivial changes like typos do not require a Github issue. Your pull request should address just this issue, without pulling in other changes - one PR resolves one issue.</li>\n<li>[ ] Format the pull request title like <code>[ISSUE #123] Fix UnknownException when host config not exist</code>. Each commit in the pull request should have a meaningful subject line and body.</li>\n<li>[ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.</li>\n<li>[ ] Write necessary unit-test to verify your logic correction, more mock a little better when cross module dependency exist. If the new feature or significant change is committed, please remember to add integration-test in <a href="https://github.com/apache/rocketmq/tree/master/test">test module</a>.</li>\n<li>[ ] Run <code>mvn -B clean apache-rat:check findbugs:findbugs</code> to make sure basic checks pass. Run <code>mvn clean install -DskipITs</code> to make sure unit-test pass. Run <code>mvn clean test-compile failsafe:integration-test</code>  to make sure integration-test pass.</li>\n<li>[ ] If this contribution is large, please file an <a href="http://www.apache.org/licenses/#clas">Apache Individual Contributor License Agreement</a>.</li>\n</ul>\n'},{filename:"quick-start.md",__html:'<p>这个快速开始手册是帮忙您快速在你的电脑上，下载安装并使用Nacos。</p>\n<h2>1.预备环境准备</h2>\n<p>请确保是在环境中安装使用:</p>\n<ol>\n<li>64 bit OS，支持 Linux/Unix/Mac/Windows，推荐选用 Linux/Unix/Mac。</li>\n<li>64 bit JDK 1.8+；<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">下载</a>.<a href="https://docs.oracle.com/cd/E19182-01/820-7851/inst_cli_jdk_javahome_t/">配置</a>。</li>\n<li>Maven 3.2.x+；<a href="https://maven.apache.org/download.cgi">下载</a>.<a href="https://maven.apache.org/settings.html">配置</a>。</li>\n</ol>\n<h2>2.下载源码或者安装包</h2>\n<p>你可以通过两种方式来获取 Nacos。</p>\n<h3>从 Github 上下载源码方式</h3>\n<pre><code>unzip nacos-source.zip\ncd nacos/\nmvn -Prelease-nacos clean install -U  \ncd nacos/distribution/target/nacos-server-0.1.0/nacos/bin\n</code></pre>\n<h3>下载编译后压缩包方式</h3>\n<p>下载地址\n<a href="https://pan.baidu.com/s/1HJIJrbuOz2TpvSQFEIv6aw">zip包</a></p>\n<p><a href="https://pan.baidu.com/s/1612GZZcp84ponzhc_dz5QA">tar.gz包</a></p>\n<pre><code>  unzip nacos-server-0.1.0.zip 或者 tar -xvf nacos-server-0.1.0.tar.gz\n  cd nacos/bin\n</code></pre>\n<h2>3.启动服务器</h2>\n<h3>Linux/Unix/Mac</h3>\n<p>启动命令(standalone代表着单机模式运行，非集群模式):</p>\n<p><code>sh startup.sh -m standalone</code></p>\n<h3>Windows</h3>\n<p>启动命令：</p>\n<p><code>cmd startup.cmd</code></p>\n<p>或者双击startup.cmd运行文件。</p>\n<h2>4.服务注册&amp;发现和配置管理</h2>\n<h3>服务注册</h3>\n<p><code>curl -X PUT \'http://127.0.0.1:8080/nacos/v1/ns/instance?serviceName=nacos.naming.serviceName&amp;ip=20.18.7.10&amp;port=8080\'</code></p>\n<h3>服务发现</h3>\n<p><code>curl -X GET \'http://127.0.0.1:8080/nacos/v1/ns/instances?serviceName=nacos.naming.serviceName\'</code></p>\n<h3>发布配置</h3>\n<p><code>curl -X POST &quot;http://127.0.0.1:8080/nacos/v1/cs/configs?dataId=nacos.cfg.dataId&amp;group=test&amp;content=helloWorld&quot;</code></p>\n<h3>获取配置</h3>\n<p><code>curl -X GET &quot;http://127.0.0.1:8080/nacos/v1/cs/configs?dataId=nacos.cfg.dataId&amp;group=test&quot;</code></p>\n<h2>5.关闭服务器</h2>\n<h3>Linux/Unix/Mac</h3>\n<p><code>sh shutdown.sh</code></p>\n<h3>Windows</h3>\n<p><code>cmd shutdown.cmd</code></p>\n<p>或者双击shutdown.cmd运行文件。</p>\n'},{filename:"roadmap.md",__html:'<p>我们计划从 Nacos 0.8.0 开始将其做到生产可用状态。在这个版本之前，我们建议您仅将其用于开发和测试环境。我们目前的计划是努力在未来6~8个月内将Nacos演进到生产可用的版本。当然计划可能因为各种因素影响而做调整，包括根据社区的声音进行优先级调整等，但整体应该不会超过1年的时间。</p>\n<p>以下是未来1年我们的主要路线图与计划。</p>\n<h2>Nacos 1.0</h2>\n<p>主要目标有两个：</p>\n<ul>\n<li>构建简单易用的，服务相关的工具集，包括服务发现、配置管理、服务元数据存储、推送、一致性及元数据管理等；</li>\n<li>与包括<a href="xx">Spring Cloud</a>、<a href="xx">Kubernetes</a>、<a href="xx">Dubbo</a>等开源生态做无缝的融合与支持，同时给这些生态带来很多面向生产时需要的优秀特性。</li>\n</ul>\n<p>以下是大致的计划：</p>\n<ul>\n<li>0.1 Basic Nacos server and simple OpenAPI and Java SDK;</li>\n<li>0.2 - 0.3 Seamless support for Kubernetes, Service Mesh and Spring Cloud service discovery and configuration management;</li>\n<li>0.4 - 0.5 Build an easy-to-use Web UI/User Console;</li>\n<li>0.6 - 0.7 High availability, ease of use, monitoring and alert etc.;</li>\n<li>0.8 Production ready;</li>\n<li>0.9 Large scale performance tuning and benchmark;</li>\n<li>1.0 GA for large scale production.</li>\n</ul>\n<h2>Nacos 2.0</h2>\n<p>主要关注在统一服务管理、服务共享及服务治理体系的开放的服务平台的建设上，主要包括两个方面:</p>\n<ul>\n<li>Dubbo 4.0 + Nacos 2.0 开放的服务平台</li>\n</ul>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1531319724777-d19b0304-535c-4af9-bee1-f358b6e55d91.png" alt="Screen Shot 2018-07-11 at 22.32.17.png"></p>\n<ul>\n<li>Kubernetes + Spring Cloud 统一服务管理</li>\n</ul>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1531319755930-0040e67e-ca05-47b9-9cd0-07ffd7452eae.png" alt="Screen Shot 2018-07-11 at 22.35.30.png"></p>\n'},{filename:"sdk.md",__html:'<h2>概述部分</h2>\n<p>maven坐标</p>\n<pre><code>&lt;groupId&gt;com.alibaba.nacos&lt;/groupId&gt;\n&lt;artifactId&gt;nacos-client&lt;/artifactId&gt;\n&lt;version&gt;0.1.0&lt;/version&gt;\n</code></pre>\n<h1>配置管理</h1>\n<h2>获取配置</h2>\n<h3>描述</h3>\n<p>用于服务启动的时候从 Nacos 获取配置。</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getConfig</span><span class="hljs-params">(String dataId, String group, <span class="hljs-keyword">long</span> timeoutMs)</span> <span class="hljs-keyword">throws</span> NacosException\n</span></code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数名</th>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置 ID，采用类似 package.class（如com.taobao.tc.refund.log.level）的命名规则保证全局唯一性，class 部分建议是配置的业务含义。全部字符小写。只允许英文字符和 4 种特殊字符（&quot;.&quot;、&quot;:&quot;、&quot;-&quot;、&quot;_&quot;），不超过 256 字节。</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置分组，建议填写产品名:模块名（Nacos:Test）保证唯一性，只允许英文字符和4种特殊字符（&quot;.&quot;、&quot;:&quot;、&quot;-&quot;、&quot;_&quot;），不超过128字节。</td>\n</tr>\n<tr>\n<td style="text-align:left">timeout</td>\n<td style="text-align:left">long</td>\n<td style="text-align:left">读取配置超时时间，单位 ms，推荐值 3000。</td>\n</tr>\n</tbody>\n</table>\n<h3>返回值</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置值</td>\n</tr>\n</tbody>\n</table>\n<h3>请求示例</h3>\n<pre><code class="language-java"><span class="hljs-keyword">try</span> {\n\tString serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\n\tString dataId = <span class="hljs-string">"{dataId}"</span>;\n\tString group = <span class="hljs-string">"{group}"</span>;\n\tProperties properties = <span class="hljs-keyword">new</span> Properties();\n\tproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\n\tConfigService configService = NacosFactory.createConfigService(properties);\n\tString content = configService.getConfig(dataId, group, <span class="hljs-number">5000</span>);\n\tSystem.out.println(content);\n} <span class="hljs-keyword">catch</span> (NacosException e) {\n    <span class="hljs-comment">// TODO Auto-generated catch block</span>\n    e.printStackTrace();\n}\n</code></pre>\n<h3>异常说明</h3>\n<p>读取配置超时或网络异常，抛出 NacosException 异常。</p>\n<h2>监听配置</h2>\n<h3>描述</h3>\n<p>如果希望 Nacos 推送配置变更，可以使用 Nacos 动态监听配置接口来实现。</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addListener</span><span class="hljs-params">(String dataId, String group, Listener listener)</span> \n</span></code></pre>\n<h3>请求参数</h3>\n<div class="bi-table">\n  <table>\n    <colgroup>\n      <col width="auto" />\n      <col width="auto" />\n      <col width="auto" />\n    </colgroup>\n    <tbody>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">参数名</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">参数类型</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">描述</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">dataId</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">配置 ID，采用类似 package.class（如com.taobao.tc.refund.log.level）的命名规则保证全局唯一性，class 部分建议是配置的业务含义。 全部字符小写。只允许英文字符和 4 种特殊字符（&quot;.&quot;、&quot;:&quot;、&quot;-&quot;、&quot;_&quot;）。不超过 256 字节。</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">group</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">配置分组，建议填写<strong>产品名：模块名</strong>（如 Nacos:Test）保证唯一性。 只允许英文字符和4种特殊字符（&quot;.&quot;、&quot;:&quot;、&quot;-&quot;、&quot;_&quot;），不超过128字节。\n          </div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">listener</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Listener</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">监听器，配置变更进入监听器的回调函数。</div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<h3>返回值</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置值，初始化或者配置变更的时候通过回调函数返回该值。</td>\n</tr>\n</tbody>\n</table>\n<h3>请求示例</h3>\n<pre><code class="language-java">String serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\nString dataId = <span class="hljs-string">"{dataId}"</span>;\nString group = <span class="hljs-string">"{group}"</span>;\nProperties properties = <span class="hljs-keyword">new</span> Properties();\nproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\nConfigService configService = NacosFactory.createConfigService(properties);\nString content = configService.getConfig(dataId, group, <span class="hljs-number">5000</span>);\nSystem.out.println(content);\nconfigService.addListener(dataId, group, <span class="hljs-keyword">new</span> Listener() {\n\t<span class="hljs-meta">@Override</span>\n\t<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">receiveConfigInfo</span><span class="hljs-params">(String configInfo)</span> </span>{\n\t\tSystem.out.println(<span class="hljs-string">"recieve1:"</span> + configInfo);\n\t}\n\t<span class="hljs-meta">@Override</span>\n\t<span class="hljs-function"><span class="hljs-keyword">public</span> Executor <span class="hljs-title">getExecutor</span><span class="hljs-params">()</span> </span>{\n\t\t<span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;\n\t}\n});\n\n<span class="hljs-comment">// 测试让主线程不退出，因为订阅配置是守护线程，主线程退出守护线程就会退出。 正式代码中无需下面代码</span>\n<span class="hljs-keyword">while</span> (<span class="hljs-keyword">true</span>) {\n    <span class="hljs-keyword">try</span> {\n        Thread.sleep(<span class="hljs-number">1000</span>);\n    } <span class="hljs-keyword">catch</span> (InterruptedException e) {\n        e.printStackTrace();\n    }\n}\n</code></pre>\n<h2>删除监听</h2>\n<h3>描述</h3>\n<p>取消监听配置，取消监听后配置不会再推送。</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">removeListener</span><span class="hljs-params">(String dataId, String group, Listener listener)</span>\n</span></code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数名</th>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置 ID，采用类似 package.class（如com.taobao.tc.refund.log.level）的命名规则保证全局唯一性，class 部分建议是配置的业务含义。全部字符小写。只允许英文字符和 4 种特殊字符（&quot;.&quot;、&quot;:&quot;、&quot;-&quot;、&quot;_&quot;），不超过 256 字节。</td>\n</tr>\n<tr>\n<td style="text-align:left">listener</td>\n<td style="text-align:left">ConfigChangeListenerAdapter</td>\n<td style="text-align:left">监听器，配置变更进入监听器的回调函数。</td>\n</tr>\n</tbody>\n</table>\n<h3>使用示例</h3>\n<pre><code class="language-java">String serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\nString dataId = <span class="hljs-string">"{dataId}"</span>;\nString group = <span class="hljs-string">"{group}"</span>;\nProperties properties = <span class="hljs-keyword">new</span> Properties();\nproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\nConfigService configService = NacosFactory.createConfigService(properties);\nconfigService.removeListener(dataId, group, yourListener);\n</code></pre>\n<h2>发布配置</h2>\n<h3>描述</h3>\n<p>用于通过程序自动发布 Nacos 配置，以便通过自动化手段降低运维成本。</p>\n<p>__注意：__创建和修改配置时使用的同一个发布接口，当配置不存在时会创建配置，当配置已存在时会更新配置。</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">publishConfig</span><span class="hljs-params">(String dataId, String group, String content)</span> <span class="hljs-keyword">throws</span> NacosException\n\n</span></code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数名</th>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置 ID，采用类似 <code>package.class</code>（如 <code>com.taobao.tc.refund.log.level</code>）的命名规则保证全局唯一性。建议根据配置的业务含义来定义 class 部分。全部字符均为小写。只允许英文字符和 4 种特殊字符（“.”、“:”、“-”、“_”），不超过 256 字节。</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置分组，建议填写<code>产品名:模块名</code>（如 Nacos<code>:Test</code>）来保证唯一性。只允许英文字符和 4 种特殊字符（“.”、“:”、“-”、“_”），不超过 128 字节。</td>\n</tr>\n<tr>\n<td style="text-align:left">content</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置内容，不超过 100K 字节。</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">是否发布成功</td>\n</tr>\n</tbody>\n</table>\n<h3>请求示例</h3>\n<pre><code class="language-java"><span class="hljs-keyword">try</span> {\n    <span class="hljs-comment">// 初始化配置服务，控制台通过示例代码自动获取下面参数</span>\n\tString serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\n\tString dataId = <span class="hljs-string">"{dataId}"</span>;\n\tString group = <span class="hljs-string">"{group}"</span>;\n\tProperties properties = <span class="hljs-keyword">new</span> Properties();\n\tproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\n    ConfigService configService = NacosFactory.createConfigService(properties);\n\t<span class="hljs-keyword">boolean</span> isPublishOk = configService.publishConfig(dataId, group, <span class="hljs-string">"content"</span>);\n\tSystem.out.println(isPublishOk);\n} <span class="hljs-keyword">catch</span> (NacosException e) {\n    <span class="hljs-comment">// TODO Auto-generated catch block</span>\n    e.printStackTrace();\n}\n</code></pre>\n<h3>异常说明</h3>\n<p>读取配置超时或网络异常，抛出 NacosException 异常。</p>\n<h2>删除配置</h2>\n<h3>描述</h3>\n<p>用于通过程序自动删除 Nacos 配置，以便通过自动化手段降低运维成本。</p>\n<p><strong>注意：</strong> 当配置已存在时会删除该配置，当配置不存在时会直接返回成功消息。</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">removeConfig</span><span class="hljs-params">(String dataId, String group)</span> <span class="hljs-keyword">throws</span> NacosException\n\n</span></code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数名</th>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置 ID</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">配置分组</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">参数类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">是否删除成功</td>\n</tr>\n</tbody>\n</table>\n<h3>请求示例</h3>\n<pre><code class="language-java"><span class="hljs-keyword">try</span> {\n    <span class="hljs-comment">// 初始化配置服务，控制台通过示例代码自动获取下面参数</span>\n\tString serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\n\tString dataId = <span class="hljs-string">"{dataId}"</span>;\n\tString group = <span class="hljs-string">"{group}"</span>;\n\tProperties properties = <span class="hljs-keyword">new</span> Properties();\n\tproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\n\n\tConfigService configService = NacosFactory.createConfigService(properties);\n\t<span class="hljs-keyword">boolean</span> isRemoveOk = configService.removeConfig(dataId, group);\n\tSystem.out.println(isRemoveOk);\n} <span class="hljs-keyword">catch</span> (NacosException e) {\n    <span class="hljs-comment">// TODO Auto-generated catch block</span>\n    e.printStackTrace();\n}\n</code></pre>\n<h3>异常说明</h3>\n<p>读取配置超时或网络异常，抛出 NacosException 异常。</p>\n<h1>服务发现SDK</h1>\n<h2>注册实例</h2>\n<h3>描述注册一个实例到服务。</h3>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">registerInstance</span><span class="hljs-params">(String serviceName, String ip, <span class="hljs-keyword">int</span> port)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">registerInstance</span><span class="hljs-params">(String serviceName, String ip, <span class="hljs-keyword">int</span> port, String clusterName)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">registerInstance</span><span class="hljs-params">(String serviceName, Instance instance)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">字符串</td>\n<td>服务实例IP</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td>服务实例port</td>\n</tr>\n<tr>\n<td style="text-align:left">clusterName</td>\n<td style="text-align:left">字符串</td>\n<td>集群名</td>\n</tr>\n<tr>\n<td style="text-align:left">instance</td>\n<td style="text-align:left">参见代码注释</td>\n<td>实例属性</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>无</p>\n<h3>请求示例</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nnaming.registerInstance(<span class="hljs-string">"nacos.test.3"</span>, <span class="hljs-string">"11.11.11.11"</span>, <span class="hljs-number">8888</span>, <span class="hljs-string">"TEST1"</span>);\n\nInstance instance = <span class="hljs-keyword">new</span> Instance();\ninstance.setIp(<span class="hljs-string">"55.55.55.55"</span>);\ninstance.setPort(<span class="hljs-number">9999</span>);\ninstance.setHealthy(<span class="hljs-keyword">false</span>);\ninstance.setWeight(<span class="hljs-number">2.0</span>);\nMap&lt;String, String&gt; instanceMeta = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();\ninstanceMeta.put(<span class="hljs-string">"site"</span>, <span class="hljs-string">"et2"</span>);\ninstance.setMetadata(instanceMeta);\n\nService service = <span class="hljs-keyword">new</span> Service(<span class="hljs-string">"nacos.test.4"</span>);\nservice.setApp(<span class="hljs-string">"nacos-naming"</span>);\nservice.sethealthCheckMode(<span class="hljs-string">"server"</span>);\nservice.setEnableHealthCheck(<span class="hljs-keyword">true</span>);\nservice.setProtectThreshold(<span class="hljs-number">0.8F</span>);\nservice.setGroup(<span class="hljs-string">"CNCF"</span>);\nMap&lt;String, String&gt; serviceMeta = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();\nserviceMeta.put(<span class="hljs-string">"symmetricCall"</span>, <span class="hljs-string">"true"</span>);\nservice.setMetadata(serviceMeta);\ninstance.setService(service);\n\nCluster cluster = <span class="hljs-keyword">new</span> Cluster();\ncluster.setName(<span class="hljs-string">"TEST5"</span>);\nAbstractHealthChecker.Http healthChecker = <span class="hljs-keyword">new</span> AbstractHealthChecker.Http();\nhealthChecker.setExpectedResponseCode(<span class="hljs-number">400</span>);\nhealthChecker.setCurlHost(<span class="hljs-string">"USer-Agent|Nacos"</span>);\nhealthChecker.setCurlPath(<span class="hljs-string">"/xxx.html"</span>);\ncluster.setHealthChecker(healthChecker);\nMap&lt;String, String&gt; clusterMeta = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();\nclusterMeta.put(<span class="hljs-string">"xxx"</span>, <span class="hljs-string">"yyyy"</span>);\ncluster.setMetadata(clusterMeta);\n\ninstance.setCluster(cluster);\n\nnaming.registerInstance(<span class="hljs-string">"nacos.test.4"</span>, instance);\n</code></pre>\n<h2>注销实例</h2>\n<h3>描述</h3>\n<p>删除服务下的一个实例。</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">deregisterInstance</span><span class="hljs-params">(String serviceName, String ip, <span class="hljs-keyword">int</span> port)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">deregisterInstance</span><span class="hljs-params">(String serviceName, String ip, <span class="hljs-keyword">int</span> port, String clusterName)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th style="text-align:left">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">服务实例IP</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">服务实例port</td>\n</tr>\n<tr>\n<td style="text-align:left">clusterName</td>\n<td style="text-align:left">字符串</td>\n<td style="text-align:left">集群名</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>无</p>\n<h3>请求示例</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nnaming.deregisterInstance(<span class="hljs-string">"nacos.test.3"</span>, <span class="hljs-string">"11.11.11.11"</span>, <span class="hljs-number">8888</span>, <span class="hljs-string">"DEFAULT"</span>);\n</code></pre>\n<h2>获取全部实例</h2>\n<h3>描述</h3>\n<p>获取服务下的所有实例。</p>\n<pre><code class="language-java"><span class="hljs-function">List&lt;Instance&gt; <span class="hljs-title">getAllInstances</span><span class="hljs-params">(String serviceName)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function">List&lt;Instance&gt; <span class="hljs-title">getAllInstances</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>集群列表</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>List<Instance> 实例列表。</p>\n<h3>请求示例</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nSystem.out.println(naming.getAllInstances(<span class="hljs-string">"nacos.test.3"</span>));\n</code></pre>\n<h2>获取健康或不健康实例列表</h2>\n<h3>描述</h3>\n<p>根据条件获取过滤后的实例列表。</p>\n<pre><code class="language-java"><span class="hljs-function">List&lt;Instance&gt; <span class="hljs-title">selectInstances</span><span class="hljs-params">(String serviceName, <span class="hljs-keyword">boolean</span> healthy)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function">List&lt;Instance&gt; <span class="hljs-title">selectInstances</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters, <span class="hljs-keyword">boolean</span> healthy)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>集群列表</td>\n</tr>\n<tr>\n<td style="text-align:left">healthy</td>\n<td style="text-align:left">boolean</td>\n<td>是否健康</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>List<Instance> 实例列表。</p>\n<h3>请求示例</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nSystem.out.println(naming.selectInstances(<span class="hljs-string">"nacos.test.3"</span>, <span class="hljs-keyword">true</span>));\n</code></pre>\n<h2>获取一个健康实例</h2>\n<h3>描述</h3>\n<p>根据负载均衡算法随机获取一个健康实例。</p>\n<pre><code class="language-java"><span class="hljs-function">Instance <span class="hljs-title">selectOneHealthyInstance</span><span class="hljs-params">(String serviceName)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function">Instance <span class="hljs-title">selectOneHealthyInstance</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>集群列表</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>Instance 实例。</p>\n<h3>请求示例</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nSystem.out.println(naming.selectOneHealthyInstance(<span class="hljs-string">"nacos.test.3"</span>));\n</code></pre>\n<h2>监听服务</h2>\n<h3>描述</h3>\n<p>监听服务下的实例列表变化。</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">subscribe</span><span class="hljs-params">(String serviceName, EventListener listener)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">subscribe</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters, EventListener listener)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>集群列表</td>\n</tr>\n<tr>\n<td style="text-align:left">listener</td>\n<td style="text-align:left">EventListener</td>\n<td>回调listener</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>无</p>\n<h3>请求示例</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nnaming.subscribe(<span class="hljs-string">"nacos.test.3"</span>, event -&gt; {\n    <span class="hljs-keyword">if</span> (event <span class="hljs-keyword">instanceof</span> NamingEvent) {\n        System.out.println(((NamingEvent) event).getServceName());\n        System.out.println(((NamingEvent) event).getInstances());\n    }\n});\n</code></pre>\n<h2>取消监听服务</h2>\n<h3>描述</h3>\n<p>取消监听服务下的实例列表变化。</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">unsubscribe</span><span class="hljs-params">(String serviceName, EventListener listener)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">unsubscribe</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters, EventListener listener)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>请求参数</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">名称</th>\n<th style="text-align:left">类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">字符串</td>\n<td>服务名</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>集群列表</td>\n</tr>\n<tr>\n<td style="text-align:left">listener</td>\n<td style="text-align:left">EventListener</td>\n<td>回调listener</td>\n</tr>\n</tbody>\n</table>\n<h3>返回参数</h3>\n<p>无</p>\n<h3>请求示例</h3>\n<pre><code class="language-java">\nNamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nnaming.unsubscribe(<span class="hljs-string">"nacos.test.3"</span>, event -&gt; {});\n\n</code></pre>\n'},{filename:"use-nacos-with-dubbo.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.3.0</p>\n"},{filename:"use-nacos-with-istio.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.6.0</p>\n"},{filename:"use-nacos-with-kubernetes.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.4.0</p>\n"},{filename:"use-nacos-with-springcloud.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.2.0</p>\n"},{filename:"what-is-nacos.md",__html:'<h1>什么是Nacos</h1>\n<h2>概览</h2>\n<p>欢迎来到 Nacos 的世界！</p>\n<p>Nacos 致力于帮助您发现、配置和管理微服务。Nacos 提供了一组简单易用的特性集，帮助您实现动态服务发现、服务配置管理、服务及流量管理。</p>\n<p>Nacos 帮助您更敏捷和容易地构建、交付和管理微服务平台。 Nacos 是构建以“服务”为中心的现代应用架构(例如微服务范式、云原生范式)的服务基础设施。</p>\n<h2>什么是 Nacos？</h2>\n<p>服务（Service）是 Nacos 世界的一等公民。Nacos 支持几乎所有主流类型的服务的发现、配置和管理：</p>\n<p><a href="https://kubernetes.io/docs/concepts/services-networking/service/">Kubernetes Service</a></p>\n<p><a href="https://grpc.io/docs/guides/concepts.html#service-definition">gRPC</a> &amp; <a href="https://dubbo.incubator.apache.org/#/?lang=en-us">Dubbo RPC Service</a></p>\n<p><a href="https://spring.io/understanding/REST">Spring Cloud RESTful Service</a></p>\n<p>Nacos 的关键特性包括:</p>\n<ul>\n<li>\n<p><strong>服务发现和服务健康监测</strong></p>\n<p>Nacos 支持基于 DNS 和基于 RPC 的服务发现。服务提供者使用 <a href="https://nacos.io/#/docs/sdk.md">原生SDK</a>、<a href="https://nacos.io/#/docs/open-API.md">OpenAPI</a>、或一个<a href="https://nacos.io/#/docs/other-language.md">独立的Agent TODO</a>注册 Service 后，服务消费者可以使用<a href="xx">DNS TODO</a> 或<a href="xx">HTTP&amp;API TODO</a>查找和发现服务。</p>\n<p>Nacos 提供实时健康检查，阻止服务向不健康的主机或服务实例发送请求。Nacos 支持传输层(PING 或 TCP)和应用层(如 HTTP、Redis、MySQL、用户自定义）的健康检查。 对于复杂的云环境和网络拓扑环境中（如 VPC、边缘服务等）服务的健康检查，Nacos 提供了 agent 模式和服务端2种健康检查模式。Nacos 还提供统一的健康检查仪表盘，帮助您管理服务可用性及流量。</p>\n</li>\n<li>\n<p><strong>动态配置服务</strong></p>\n<p>动态配置服务可以让您以中心化、外部化和动态化的方式管理所有环境的应用配置和服务配置。</p>\n<p>动态配置消除了配置变更时重新部署应用和服务的需要，让配置变得更加高效和敏捷。</p>\n<p>配置中心化管理让无状态服务实现变得更简单，让服务按需弹性扩展变得更容易。</p>\n<p>Nacos 提供了一个 <a href="xx">简单易用的UI TODO</a> 帮助您管理所有的服务和应用的配置。Nacos 还提供包括配置版本跟踪、金丝雀发布、回滚配置以及客户进程配置更新状态跟踪在内的一系列开箱即用的配置管理特性，帮助您更安全地管理配置变更和控制配置变更的风险。</p>\n</li>\n<li>\n<p><strong>动态 DNS 服务</strong></p>\n<p>动态 DNS 服务支持权重路由，让您更容易地实现中间层负载均衡、更灵活的路由策略、流量控制以及数据中心内网的简单DNS解析服务。动态DNS服务还能让您更容易地实现以DNS协议为基础的服务发现，以消除耦合到厂商私有服务发现API上的风险。</p>\n<p>Nacos 提供了一些简单的 <a href="xx">DNS APIs TODO</a> 帮助您管理服务的关联域名和可用的 IP:PORT 列表.</p>\n</li>\n<li>\n<p><strong>服务及其元数据管理</strong></p>\n<p>Nacos 能让您从微服务平台建设的视角管理数据中心的所有服务及元数据，包括管理服务的描述、生命周期、服务的静态依赖分析、服务的健康状态、服务的流量管理、路由及安全策略、服务的 SLA 以及最首要的 Metrics 统计数据。</p>\n</li>\n<li>\n<p><a href="https://nacos.io/#/docs/roadmap.md">更多的特性列表 ...</a></p>\n</li>\n</ul>\n<h2>Nacos 全景图</h2>\n<p><img src="https://cdn.nlark.com/lark/0/2018/png/11189/1533045871534-e64b8031-008c-4dfc-b6e8-12a597a003fb.png" alt="nacos_landscape.png"></p>\n<p>如 Nacos 全景图所示，Nacos 无缝支持一些主流的开源生态，例如 <a href="xx">Dubbo and Dubbo Mesh TODO</a>、<a href="xx">Spring Cloud TODO</a>、<a href="xx">Kubernetes and CNCF TODO</a>。</p>\n<p>使用 Nacos 简化服务发现、配置管理、服务治理及管理的解决方案，让微服务管理、共享、组合更加容易。</p>\n<p>关于如何在这些生态中使用 Nacos，请参考以下文档：</p>\n<p><a href="https://nacos.io/#/docs/use-nacos-with-kubernetes.md">Nacos与Kubernetes一起使用</a></p>\n<p><a href="https://nacos.io/#/docs/use-nacos-with-dubbo.md">Nacos与Dubbo一起使用</a></p>\n<p><a href="https://nacos.io/#/docs/roadmap.md">Nacos与gRPC一起使用</a></p>\n<p><a href="https://nacos.io/#/docs/use-nacos-with-springcloud.md">Nacos与Spring Cloud一起使用</a></p>\n<p><a href="https://nacos.io/#/docs/use-nacos-with-istio.md">Nacos与Istio一起使用</a></p>\n<h2>下一步</h2>\n<p>继续阅读 <a href="https://nacos.io/#/docs/quick-start.md">快速开始</a> 以快速上手 Nacos。</p>\n'}],"en-us":[{filename:"CLI-guide.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.7.0</p>\n"},{filename:"architecture.md",__html:'<h2>Basic Architecture and Concepts</h2>\n<p><img src="/img/nacos-Arch.jpg" alt="nacos_arch.jpg"></p>\n<ul>\n<li>\n<p><strong>Service</strong></p>\n<p>A software function or a set of software functions (such as the retrieval of specified information or the execution of a set of operations) with the purpose that different clients can be reused for different purposes (for example, through a cross-process network call). Nacos supports almost all types of services:\n<a href="https://kubernetes.io/docs/concepts/services-networking/service/">Kubernetes Service</a></p>\n</li>\n</ul>\n<p><a href="https://grpc.io/docs/guides/concepts.html#service-definition">gRPC</a>\n<a href="https://dubbo.incubator.apache.org/#/?lang=en-us"> | Dubbo RPC Service</a></p>\n<p><a href="https://spring.io/understanding/REST">Spring Cloud RESTful Service</a></p>\n<ul>\n<li>\n<p><strong>Service Registry</strong></p>\n<p>The database of services, instances and metadata. Service instances are registered with the service registry on startup and deregistered on shutdown. Clients of the service and/or routers query the service registry to find the available instances of a service. A service registry might invoke a service instance��s health check API to verify that it is able to handle requests.</p>\n</li>\n<li>\n<p><strong>Service Metadata</strong></p>\n<p>Data describing services such as service endpoints, service labels, service version, service instance weights, routing rules, security policies.</p>\n</li>\n<li>\n<p><strong>Service Provider</strong></p>\n<p>A process or application which provides reusable and callable services.</p>\n</li>\n<li>\n<p><strong>Service Consumer</strong></p>\n<p>A process or application which initiates a call to a service.</p>\n</li>\n<li>\n<p><strong>Configuration</strong></p>\n<p>During system development, developers usually extract some parameters or variables that need to be changed from the code and manage them in a separate configuration file. This enables the static system artifacts or deliverables (such as WAR and JAR packages) to fit with the physical operating environment in a better way. Configuration management is generally a part of system deployment, which is executed by the administrator or operation and maintenance personnel. Configuration modification is an effective method to adjust the behavior of a running system.</p>\n</li>\n<li>\n<p><strong>Configuration Management</strong></p>\n<p>In the data center, all configuration-related activities such as editing, storage, distribution, change management, history version management, and change audit are collectively referred to as configuration management.</p>\n</li>\n<li>\n<p><strong>Naming Service</strong></p>\n<p>Mapping the &quot;names&quot; of all the objects and entities in the distributed system to the associated metadata, for example, <code>ServiceName</code> -&gt; <code>Endpoints\\Version etc...</code>, <code>Distributed Lock Name</code> -&gt; <code>Lock Owner/Status Info</code>, <code>DNS Domain Name</code> -&gt; <code>IP List</code>. Service discovery and DNS are the two major scenarios of naming service.</p>\n</li>\n<li>\n<p><strong>Configuration Service</strong></p>\n<p>Providing dynamic configuration, service metadata and configuration management for other services or application.</p>\n</li>\n<li>\n<p><strong><a href="https://nacos.io/#/docs/concepts.md?lang=zh-cn">More concepts...</a></strong></p>\n</li>\n</ul>\n<h2>Artifacts, Deployment, and Start Mode</h2>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1531730742844-e8325932-258b-49b2-9473-8d1199efe20d.png" alt="undefined"></p>\n<ul>\n<li>\n<p><strong>Two Artifacts</strong></p>\n<p>Nacos supports both standard Docker images (v0.2.0) and nacos-.zip(tar.gz). You can choose the appropriate build to deploy the Nacos service according to your needs.</p>\n</li>\n<li>\n<p><strong>Two Start Modes</strong></p>\n<p>Nacos supports two start modes. you can merging the Service Registry and the Config Center in one process or deploying them in separately cluster.</p>\n</li>\n<li>\n<p><strong>Free Public Cloud Service on Alibaba Cloud</strong></p>\n<p>In addition to deploying and launching Nacos services by users themselves, Nacos also supports public cloud. Nacos public cloud service will be free in Alibaba Cloud\'s commercial service (such as <a href="xx">ACM TODO</a>, <a href="xx">EDAS TODO</a>). We also welcome other public cloud providers to offer Nacos public cloud services.</p>\n</li>\n</ul>\n'},{filename:"community.md",__html:'<h2>Contact</h2>\n<h3>Nacos Gitter-<a href="https://gitter.im/alibaba/nacos">https://gitter.im/alibaba/nacos</a></h3>\n<h3>Nacos weibo-<a href="https://weibo.com/u/6574374908">https://weibo.com/u/6574374908</a></h3>\n<h3>Nacos segmentfault-<a href="https://segmentfault.com/t/nacos">https://segmentfault.com/t/nacos</a></h3>\n<h3>Mailing list</h3>\n<p>Mailing list is recommended for discussing almost anything related to Nacos. Please refer to this?<a href="https://github.com/apache/incubator-dubbo/wiki/Mailing-list-subscription-guide">guide</a>?for detailed documentation on how to subscribe to our mailing lists.</p>\n<ul>\n<li><a href="https://lark.alipay.com/nacos/nacosdocs/vl19q1">dev-nacos@googlegroups.com</a>: The develop mailing list. You can ask questions here if you encounter any problem when using or developing Nacos.</li>\n<li><a href="https://lark.alipay.com/nacos/nacosdocs/vl19q1">commits-nacos@googlegroups.com</a>: All commits will be sent to this mailing list. You can subscribe to it if you are interested in Nacos\' development.</li>\n<li><a href="https://lark.alipay.com/nacos/nacosdocs/vl19q1">users-nacos@googlegroups.com</a>: All Github?<a href="https://github.com/alibaba/nacos/issues">issue</a>?updates and?<a href="https://github.com/alibaba/nacos/pulls">pull request</a>?updates will be sent to this mailing list.</li>\n<li><a href="https://lark.alipay.com/nacos/nacosdocs/vl19q1">nacos_dev@linux.alibaba.com</a>.</li>\n</ul>\n'},{filename:"concepts.md",__html:'<h2>Region</h2>\n<p><span data-type="color" style="color:rgb(51, 51, 51)"><span data-type="background" style="background-color:rgb(255, 255, 255)">Physical data centers, unalterable after resources are created.</span></span></p>\n<h2>Available Zone</h2>\n<p><span data-type="color" style="color:rgb(51, 51, 51)"><span data-type="background" style="background-color:rgb(255, 255, 255)">Physical areas with independent power grids and networks in one region. The network latency for instances in the same zone is lower.</span></span></p>\n<h2>Endpoint</h2>\n<p>The entry domain name of a service in each region.</p>\n<h2>Namespace</h2>\n<p>For configuration isolation by tenants. Different namespaces may have configurations with the same Group or Data ID. One of the common scenarios for namespace is to differentiate and isolate the configurations in different environments, as in development and test environment and production environment.</p>\n<h2>Configuration</h2>\n<p>During system development, developers usually extract some parameters or variables that need to be changed from the code and manage them in a separate configuration file. This enables the static system artifacts or deliverables (such as WAR and JAR packages) to fit with the physical operating environment in a better way. Configuration management is usually a part of system deployment, which is <span data-type="color" style="color:rgb(38, 38, 38)"><span data-type="background" style="background-color:rgb(255, 255, 255)">executed</span></span> by the administrator or operation and maintenance personnel,. Configuration modification is an effective way to adjust the behavior of a running system.</p>\n<h2>Configuration Management</h2>\n<p>Configuration-related activities including editing, storage, distribution, modification management, release version management, and modification audit.</p>\n<h2>Configuration Item</h2>\n<p>A specific configurable parameter with its value range, generally in the form of param-key=param-value. For example, the log output level (logLevel=INFO|WARN|ERROR) of a system is regarded as a configuration item.</p>\n<h2>Configuration Set</h2>\n<p>A collection of related or unrelated configuration <a href="http://items.In">items.In</a> a system, a configuration file is generally a configuration set which contains all the configurations of the system. For example, a configuration set may contain configuration items such as data sources, thread pools, and log levels.</p>\n<h2>Data ID</h2>\n<p>The ID of a configuration set in Nacos. It is one of the dimensions according to which configurations are organized. Data ID is generally used to organize the system configuration sets. A system or application can contain multiple configuration sets, each of which can be identified by a meaningful name. The Data ID usually uses the naming rule similar to Java packages (for example, com.taobao.tc.refund.log.level) to ensure global uniqueness. This naming rule is not mandatory.</p>\n<h2>Group</h2>\n<p>The group of configuration sets in Nacos. It is one of the dimensions according to which configurations are organized. The configuration sets are always grouped by a meaningful string such as Buy or Trade to differentiate the configuration sets with the same Data ID. When you create a configuration on Nacos, the group name is replaced by DEFAULT_GROUP by default if not specified. A typical scenario of Group is when the same configuration type is used for different applications or components, such as database_url configuration and MQ_topic configuration.</p>\n<h2>Configuration Snapshot</h2>\n<p>The Nacos client SDK can generate snapshots of configurations on local machines. Snapshots can be used to indicate the overall disaster recovery capabilities of the system when the client cannot connect to the Nacos server. Configuration snapshot is similar to local commit in Git, or cache, which is updated at the appropriate time, but does not have the notion of expiration as in cache.</p>\n<h2>Service</h2>\n<p>Software functions which are provided to the client via the network through a predefined interface.</p>\n<h2>Service Name</h2>\n<p>Identifier provided by the service, by which the service it refers to can be uniquely determined.</p>\n<h2>Service Registry</h2>\n<p>Database which stores the instances of services and the load balancing policies for services.</p>\n<h2>Service Discovery</h2>\n<p>On a computer network, the address and metadata of an instance under the service are probed (usually using a service name) and provided to the client for querying with a predefined interface.</p>\n<h2>Metadata</h2>\n<p>Custom configuration information, such as a disaster recovery policy, a load balancing policy, an authentication configuration, and various tags. From the scope of action, it is divided into meta-information of service level, meta-information of virtual cluster, and meta-information of instance.</p>\n<h2>Application</h2>\n<p>Property of service which can be used to identify the service provider.</p>\n<h2>Service Group</h2>\n<p>Different services can be categorized into the same service group.</p>\n<h2>Virtual Cluster</h2>\n<p>Service instances under the same service can be further classified. One possible unit of this classification is Virtual Cluster.</p>\n<h2>Instance</h2>\n<p>A process with an accessible network address (IP:Port) that provides one or more services.</p>\n<h2>Weight</h2>\n<p>Instance-level configuration. Weight is a floating-point number. The greater the weight, the greater the traffic that the instance expects to be allocated.</p>\n<h2>Health Check</h2>\n<p>Health check of the instances under a service in a specified manner to ensure that the instances can work properly. Instances are judged to be healthy or unhealthy according to the inspection results. Unhealthy instances are not returned to the client when initiating a resolution request to the service.</p>\n<h2>Protect Threshold</h2>\n<p>To prevent traffic from flowing to healthy instances because of some unhealthy instances, which causes traffic pressure, healthy instance collapse, and finally an avalanche, the health protection threshold should be defined as a floating point number between 0 and 1. When the proportion of the domain name healthy instance to the total instance is smaller than this value, the instance is returned to the client regardless of the health of the instance. Although this can result in a loss of some of the traffic, we ensure that the remaining healthy instances can work normally.</p>\n'},{filename:"console-guide.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.7.0</p>\n"},{filename:"contributing.md",__html:'<h2>How to Contribute</h2>\n<p>Nacos is released under the non-restrictive Apache 2.0 license, and follows a very standard Github development process, using Github tracker for issues and merging pull requests into master. If you want to contribute even something trivial, please do not hesitate, but follow the guidelines below.</p>\n<p>We are always very happy to have contributions, whether for trivial cleanups or big new features.\nWe want to have high quality, well documented codes for each programming language.</p>\n<p>Nor is code the only way to contribute to the project. We strongly value documentation, integration with other project, and gladly accept improvements for these aspects.</p>\n<h3>Contact</h3>\n<h4>Gitter</h4>\n<p><a href="https://gitter.im/alibaba/nacos">https://gitter.im/alibaba/nacos</a></p>\n<h4>Mailing list</h4>\n<p>Mailing list is recommended for discussing almost anything related to Nacos. Please refer to this <a href="https://github.com/apache/incubator-dubbo/wiki/Mailing-list-subscription-guide">guide</a> for detailed documentation on how to subscribe to mailing lists.</p>\n<ul>\n<li>\n<p><a href="mailto:dev-nacos+subscribe@googlegroups.comg">dev-nacos@googlegroups.com</a>: The develop mailing list. You can ask questions here if you encounter any problem when using or developing Nacos.</p>\n</li>\n<li>\n<p><a href="mailto:commits+nacos-subscribe@googlegroups.com">commits-nacos@googlegroups.com</a>: All commits will be sent to this mailing list. You can subscribe to it if you are interested in Nacos\'s development.</p>\n</li>\n<li>\n<p><a href="mailto:users-nacos+subscribe@googlegroups.com">users-nacos@googlegroups.com</a>: All  Github <a href="https://github.com/alibaba/nacos/issues">issues</a> updates and <a href="https://github.com/alibaba/nacos/pulls">pull request</a> updates will be sent to this mailing list.</p>\n</li>\n<li>\n<p>If you have any questions, please contact <a href="mailto:nacos_dev@linux.alibaba.com">nacos_dev@linux.alibaba.com</a>.</p>\n</li>\n</ul>\n<h2>Contribution flow</h2>\n<p>This is a rough outline of what a contributor\'s workflow looks like:</p>\n<ul>\n<li>Fork the current repository.</li>\n<li>Create a topic branch from where to base the contribution. This is usually the master branch.</li>\n<li>Make commits of logical units.</li>\n<li>Make sure commit messages are in the proper format (see below).</li>\n<li>Push changes in a topic branch to your forked repository.</li>\n<li>Follow the checklist in the <a href="https://lark.alipay.com/nacos/nacosdocs/askodu">pull request template</a></li>\n<li>Before you send the pull request, please sync your forked repository with remote repository. This will make your pull request simple and clear. See guide below:</li>\n</ul>\n<pre><code>git remote add upstream git@github.com:alibaba/nacos.git\ngit fetch upstream\ngit rebase upstream/master\ngit checkout -b your_awesome_patch\n... add some work\ngit push origin your_awesome_patch\n</code></pre>\n<ul>\n<li>Submit a pull request to alibaba/nacos and wait for reply.</li>\n</ul>\n<p>Thanks for contributing!</p>\n<h2>Contributing Code</h2>\n<p>To submit a change for inclusion, please do the following:</p>\n<h4>If the change is non-trivial, please include unit tests that cover the new functionality.</h4>\n<h4>If you are introducing a completely new feature or API, it is a good idea to start a wiki and get consensus on the basic design first.</h4>\n<h4>It is our job to follow up on patches in a timely fashion. Nag us if we aren\'t doing our job (sometimes we drop things).</h4>\n<h2>Becoming a Committer</h2>\n<p>We are always interested in adding new contributors. What we look for are series of contributions, good taste and ongoing interest in the project. If you are interested in becoming a committer, please let one of the existing committers know and they can help you walk through the process.</p>\n<p>Nowadays, we have several important contribution points:</p>\n<h4>Wiki &amp; JavaDoc</h4>\n<h4>Nacos Console</h4>\n<h4>Nacos SDK(<a href="http://C++.Net">C++.Net</a>\\PHP\\Python\\Go\\Node.js)</h4>\n<h5>Prerequisites</h5>\n<p>If you want to contribute to the above listing points, you must abide by the prerequisites listed below.</p>\n<h6>Readability - APIs as well as important methods must have Javadoc.</h6>\n<h6>Testability - Ensure over 80% unit test coverage for main processes.</h6>\n<h6>Maintainability - Comply with our <a href="style/codeStyle.xml">PMD spec</a>, with an update frequency at least once every 3 months.</h6>\n<h6>Deployability - We encourage you to deploy into <a href="http://search.maven.org/">maven repository</a>.</h6>\n'},{filename:"deployment.md",__html:'<p>Nacos supports three types of deployment modes:</p>\n<ul>\n<li>Standalone Mode - used in DEV or TEST environment.</li>\n<li>Cluster Mode - used in production environment to ensure high-availability.</li>\n<li>Multi-Cluster Mode - in complicated production mode, you may want to deploy multi-cluster mode to support different business units.</li>\n</ul>\n<h2>Running Nacos in Standalone Mode</h2>\n<h3>Linux/Unix/Mac</h3>\n<ul>\n<li>Standalone means it is non-cluster Mode. *\nsh <a href="http://startup.sh">startup.sh</a> standalone</li>\n</ul>\n<h3>Windows</h3>\n<ul>\n<li>standalone means it is non-cluster Mode. *\ncmd startup.cmd standalone</li>\n</ul>\n<h2>Running Nacos in Multi-Node Cluster Mode</h2>\n<h3>Linux/Unix/Mac</h3>\n<p>sh <a href="http://startup.sh">startup.sh</a></p>\n<h3>Windows</h3>\n<p>cmd startup.cmd</p>\n<h2>Deploy Nacos in Multi-Cluster Mode</h2>\n<p>Nacos support a NameServer route request mode， by which you can design a useful mapping rule to control the request forward to the corresponding cluster, in the mapping rule you can sharding the request by namespace or by tenant etc...</p>\n<p>to setup a NameServer:</p>\n<ul>\n<li>TODO</li>\n</ul>\n'},{filename:"managementAPI.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.7.0</p>\n"},{filename:"open-API.md",__html:'<h1>Configuration Management</h1>\n<h2>Get configurations</h2>\n<h3>Description</h3>\n<p>This API is used to get configurations in Nacos.</p>\n<h3>Request type</h3>\n<p>GET</p>\n<h3>Request URL</h3>\n<p>/nacos/v1/cs/configs</p>\n<h3>Request parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">No</td>\n<td style="text-align:left">Tenant information. It corresponds to the Namespace field in Nacos.</td>\n</tr>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">Yes</td>\n<td style="text-align:left">Configuration ID</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">Yes</td>\n<td style="text-align:left">Configuration group</td>\n</tr>\n</tbody>\n</table>\n<h3>Return parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Parameter type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Configuration value</td>\n</tr>\n</tbody>\n</table>\n<h3>Error codes</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Error code</th>\n<th style="text-align:left">Description</th>\n<th style="text-align:left">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">400</td>\n<td style="text-align:left">Bad Request</td>\n<td style="text-align:left">Syntax error in the client request</td>\n</tr>\n<tr>\n<td style="text-align:left">403</td>\n<td style="text-align:left">Forbidden</td>\n<td style="text-align:left">No permission</td>\n</tr>\n<tr>\n<td style="text-align:left">404</td>\n<td style="text-align:left">Not Found</td>\n<td style="text-align:left">Not found resource</td>\n</tr>\n<tr>\n<td style="text-align:left">500</td>\n<td style="text-align:left">Internal Server Error</td>\n<td style="text-align:left">Internal server error</td>\n</tr>\n<tr>\n<td style="text-align:left">200</td>\n<td style="text-align:left">OK</td>\n<td style="text-align:left">Normal</td>\n</tr>\n</tbody>\n</table>\n<h3>Example</h3>\n<ul>\n<li>\n<p>Request example</p>\n<pre><code>http:serverIp:8080/nacos/v1/cs/configs?dataId=dataIdparam&amp;group=groupParam&amp;tenant=tenantParam\n\n</code></pre>\n</li>\n<li>\n<p>Return example</p>\n<pre><code>contentTest\n</code></pre>\n</li>\n</ul>\n<h2>Listen for configurations</h2>\n<h3>Description</h3>\n<p>This API is used to listen for configurations in Nacos to capture configuration changes. In case of any configuration changes, you can use the <a href="~~64131~~">Get Configurations</a> API to obtain the latest value of the configuration and dynamically refresh the local cache.</p>\n<p>A listener is registered using an asynchronous servlet. The nature of registering a listener is to compare the configuration value and the MD5 value of it with that of the backend. If the values differ, the inconsistent configuration is returned immediately. Otherwise, an empty string is returned after 30 seconds.</p>\n<h3>Request type</h3>\n<p>POST</p>\n<h3>Request URL</h3>\n<p>/nacos/v1/cs/configs/listener</p>\n<h3>Request parameters</h3>\n<div class="bi-table">\n  <table>\n    <colgroup>\n      <col width="auto" />\n      <col width="75px" />\n      <col width="96px" />\n      <col width="385px" />\n    </colgroup>\n    <tbody>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Name</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Type</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Required</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Description</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Listening-Configs</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">No</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">A request to listen for data packets. </div>\n          <div data-type="p">Format : dataId^group^2contentMD5^tenant^1 or dataId^group^2contentMD5^1.</div>\n          <ul data-type="unordered-list">\n            <li data-type="list-item" data-list-type="unordered-list">\n              <div data-type="p">dataId : Configuration ID</div>\n            </li>\n            <li data-type="list-item" data-list-type="unordered-list">\n              <div data-type="p">group : Configuration group</div>\n            </li>\n            <li data-type="list-item" data-list-type="unordered-list">\n              <div data-type="p">contentMD5 : The MD5 value of the configuration</div>\n            </li>\n            <li data-type="list-item" data-list-type="unordered-list">\n              <div data-type="p">tenant : Tenant information. It corresponds to the Namespace field in Nacos (not must)</div>\n            </li>\n          </ul>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Listening-Configs</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Yes</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">A request to listen for data packets.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">tenant</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Yes</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">A packet field indicating tenant information. It corresponds to the Namespace field in Nacos.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">dataId</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Yes</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">A packet field indicating the configuration ID.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">group</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Yes</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">A packet field indicating the configuration group.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">contentMD5</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Yes</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">A packet field indicating the MD5 value of the configuration.</div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<h3>Header parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">Long-Pulling-Timeout</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">Yes</td>\n<td style="text-align:left">The timeout for long polling is 30s. Enter 30,000 here.</td>\n</tr>\n</tbody>\n</table>\n<h3>Parameter description</h3>\n<ul>\n<li>A delimiter to separate fields within a configuration: ^2  = Character.toString((char) 2</li>\n<li>A delimiter to separate configurations: ^1 = Character.toString((char) 1)</li>\n<li>contentMD5:  MD5(content). This is an empty string because the first local cache is empty.</li>\n</ul>\n<h3>Return parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Parameter type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Configuration value</td>\n</tr>\n</tbody>\n</table>\n<h3>Error codes</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Error code</th>\n<th style="text-align:left">Description</th>\n<th style="text-align:left">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">400</td>\n<td style="text-align:left">Bad Request</td>\n<td style="text-align:left">Syntax error in the client request</td>\n</tr>\n<tr>\n<td style="text-align:left">403</td>\n<td style="text-align:left">Forbidden</td>\n<td style="text-align:left">No permission</td>\n</tr>\n<tr>\n<td style="text-align:left">404</td>\n<td style="text-align:left">Not Found</td>\n<td style="text-align:left">Client error, not found</td>\n</tr>\n<tr>\n<td style="text-align:left">500</td>\n<td style="text-align:left">Internal Server Error</td>\n<td style="text-align:left">Internal server error</td>\n</tr>\n<tr>\n<td style="text-align:left">200</td>\n<td style="text-align:left">OK</td>\n<td style="text-align:left">Normal</td>\n</tr>\n</tbody>\n</table>\n<h3>Example</h3>\n<ul>\n<li>Request example</li>\n</ul>\n<pre><code>http://serverIp:8080/nacos/v1/cs/configs/listener\n\nPOST request body data:\n\nListening-Configs=dataId^2group^2contentMD5^2tenant^1\n\n</code></pre>\n<ul>\n<li>Return example</li>\n</ul>\n<pre><code>In case of any configuration changes,\n\ndataId^2group^2tenant^1\n\nOtherwise, an empty string is returned.\n\n</code></pre>\n<h2>Publish configuration</h2>\n<h3>Description</h3>\n<p>It publishes configurations in Nacos.</p>\n<h3>Request Type</h3>\n<p>POST</p>\n<h3>Request URL</h3>\n<p>/nacos/v1/cs/configs</p>\n<h3>Request parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">No</td>\n<td style="text-align:left">The tenant, corresponding to the namespace field of Nacos</td>\n</tr>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Yes</td>\n<td style="text-align:left">Configuration ID</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Yes</td>\n<td style="text-align:left">Configuration group</td>\n</tr>\n<tr>\n<td style="text-align:left">content</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Yes</td>\n<td style="text-align:left">Configuration content</td>\n</tr>\n</tbody>\n</table>\n<h3>Response parameters</h3>\n<table>\n<thead>\n<tr>\n<th>Parametertype</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>boolean</td>\n<td>If the publishing is successful</td>\n</tr>\n</tbody>\n</table>\n<h3>Error code</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Error code</th>\n<th style="text-align:left">Description</th>\n<th style="text-align:left">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">400</td>\n<td style="text-align:left">Bad Request</td>\n<td style="text-align:left">Syntax error in client request</td>\n</tr>\n<tr>\n<td style="text-align:left">403</td>\n<td style="text-align:left">Forbidden</td>\n<td style="text-align:left">No permission</td>\n</tr>\n<tr>\n<td style="text-align:left">404</td>\n<td style="text-align:left">Not Found</td>\n<td style="text-align:left">Not found resource</td>\n</tr>\n<tr>\n<td style="text-align:left">500</td>\n<td style="text-align:left">Internal Server Error</td>\n<td style="text-align:left">Internal server error</td>\n</tr>\n<tr>\n<td style="text-align:left">200</td>\n<td style="text-align:left">OK</td>\n<td style="text-align:left">Normal</td>\n</tr>\n</tbody>\n</table>\n<h3>Example</h3>\n<h3>Request example</h3>\n<pre><code>http:serverIp:8080/nacos/v1/cs/configs\n\nhttp body：\ndataId=dataIdparam&amp;group=groupParam&amp;tenant=tenantParam&amp;content=contentParam\n\n</code></pre>\n<h4>Response example</h4>\n<pre><code>true\n</code></pre>\n<h2>Delete configuration</h2>\n<h3>Description</h3>\n<p>It deletes configurations in Nacos.</p>\n<h3>Request Type</h3>\n<p>DELETE</p>\n<h3>Request URL</h3>\n<p>/nacos/v1/cs/configs</p>\n<h3>Request parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">No</td>\n<td style="text-align:left">The tenant, corresponding to the namespace field of Nacos</td>\n</tr>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Yes</td>\n<td style="text-align:left">Configuration ID</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Yes</td>\n<td style="text-align:left">Configuration group</td>\n</tr>\n</tbody>\n</table>\n<h3>Response parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Parameter type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">If the deletion is successful</td>\n</tr>\n</tbody>\n</table>\n<h3>Error code</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Error code</th>\n<th style="text-align:left">Description</th>\n<th style="text-align:left">Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">400</td>\n<td style="text-align:left">Bad Request</td>\n<td style="text-align:left">Syntax error in client request</td>\n</tr>\n<tr>\n<td style="text-align:left">403</td>\n<td style="text-align:left">Forbidden</td>\n<td style="text-align:left">No permission</td>\n</tr>\n<tr>\n<td style="text-align:left">404</td>\n<td style="text-align:left">Not Found</td>\n<td style="text-align:left">Not found resource</td>\n</tr>\n<tr>\n<td style="text-align:left">500</td>\n<td style="text-align:left">Internal Server Error</td>\n<td style="text-align:left">Internal server error</td>\n</tr>\n<tr>\n<td style="text-align:left">200</td>\n<td style="text-align:left">OK</td>\n<td style="text-align:left">Normal</td>\n</tr>\n</tbody>\n</table>\n<h3>Example</h3>\n<h4>Request example</h4>\n<pre><code>http:serverIp:8080/nacos/cs/configs?dataId=dataIdparam&amp;group=groupParam\n\n</code></pre>\n<h4>Response example</h4>\n<pre><code>true\n</code></pre>\n<h1>Service Discovery API</h1>\n<h2>Register Instance</h2>\n<h3>Description</h3>\n<p>Register an instance to service.</p>\n<h3>Request Type</h3>\n<p>PUT</p>\n<h3>Request Path</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instance\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>IP of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">yes</td>\n<td>Port of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>ID of tenant</td>\n</tr>\n<tr>\n<td style="text-align:left">weight</td>\n<td style="text-align:left">double</td>\n<td style="text-align:left">no</td>\n<td>Weight</td>\n</tr>\n<tr>\n<td style="text-align:left">healthy</td>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">no</td>\n<td>Healthy or not</td>\n</tr>\n<tr>\n<td style="text-align:left">metadata</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>Extended information</td>\n</tr>\n<tr>\n<td style="text-align:left">cluster</td>\n<td style="text-align:left">JSON String</td>\n<td style="text-align:left">no</td>\n<td>Cluster information</td>\n</tr>\n<tr>\n<td style="text-align:left">service</td>\n<td style="text-align:left">JSON String</td>\n<td style="text-align:left">yes if servicName does not exist</td>\n<td>Service information</td>\n</tr>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes if service does not exist</td>\n<td>Service name</td>\n</tr>\n</tbody>\n</table>\n<p>Service parameter format：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">name</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Service name</td>\n</tr>\n<tr>\n<td style="text-align:left">app</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">no</td>\n<td>Application name</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>Service group</td>\n</tr>\n<tr>\n<td style="text-align:left">protectThreshold</td>\n<td style="text-align:left">double</td>\n<td style="text-align:left">no</td>\n<td>Protect threshold</td>\n</tr>\n<tr>\n<td style="text-align:left">healthCheckMode</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>Health check mode: server/client/none</td>\n</tr>\n<tr>\n<td style="text-align:left">metadata</td>\n<td style="text-align:left">JSON String</td>\n<td style="text-align:left">no</td>\n<td>Extended information</td>\n</tr>\n</tbody>\n</table>\n<p>Cluster parameter format：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">name</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Virtual cluster name</td>\n</tr>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Service name of virtual cluster</td>\n</tr>\n<tr>\n<td style="text-align:left">healthChecker</td>\n<td style="text-align:left">JSON String</td>\n<td style="text-align:left">yes</td>\n<td>Health check type</td>\n</tr>\n<tr>\n<td style="text-align:left">defaultPort</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">no</td>\n<td>Default port of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">defaultCheckPort</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">no</td>\n<td>Default health check port of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">userIPPort4Check</td>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">no</td>\n<td>If instance port used for health check</td>\n</tr>\n<tr>\n<td style="text-align:left">metadata</td>\n<td style="text-align:left">JSON String</td>\n<td style="text-align:left">no</td>\n<td>Extended information</td>\n</tr>\n</tbody>\n</table>\n<p>The healthChecker currently supports three types: TCP, HTTP and MYSQL.\nDepending on the type of type, there are differences in the parameters that need to be passed.</p>\n<p>TCP type：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">type=TCP</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Check type</td>\n</tr>\n</tbody>\n</table>\n<p>HTTP type：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">type=HTTP</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Check type</td>\n</tr>\n<tr>\n<td style="text-align:left">curlPath</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Check path</td>\n</tr>\n<tr>\n<td style="text-align:left">curlHost</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>HTTP Header</td>\n</tr>\n<tr>\n<td style="text-align:left">expectedResponseCode</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">no, default value is 200</td>\n<td>Expected return code</td>\n</tr>\n</tbody>\n</table>\n<p>MySQL type：</p>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">type=MYSQL</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>check type</td>\n</tr>\n<tr>\n<td style="text-align:left">user</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>MySQL user name</td>\n</tr>\n<tr>\n<td style="text-align:left">pwd</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>MySQL password</td>\n</tr>\n<tr>\n<td style="text-align:left">cmd</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>SQL to be executed</td>\n</tr>\n</tbody>\n</table>\n<h3>Request Example</h3>\n<pre><code class="language-plain">curl -X PUT \'http://127.0.0.1:8080/nacos/v1/ns/instance?cluster=%7b%22metadata%22%3a%7b%7d%2c%22defaultCheckPort%22%3a80%2c%22defaultPort%22%3a80%2c%22healthChecker%22%3a%7b%22type%22%3a%22TCP%22%7d%2c%22name%22%3a%22%22%2c%22useIPPort4Check%22%3atrue%7d&amp;port=8080&amp;healthy=true&amp;ip=11.11.11.11&amp;weight=1.0&amp;serviceName=nacos.test.3&amp;encoding=GBK&amp;tenant=n1\'\'\n</code></pre>\n<h3>Response Example</h3>\n<p>ok</p>\n<h2>Deregister Instance</h2>\n<h3>Description</h3>\n<p>Delete instance from service.</p>\n<h3>Request Type</h3>\n<p>DELETE</p>\n<h3>Request Path</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instance\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Service name</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>IP of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">yes</td>\n<td>Port of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">cluster</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Cluster name</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>ID of tenant</td>\n</tr>\n</tbody>\n</table>\n<h3>Request Example</h3>\n<pre><code class="language-plain">curl -X DELETE 127.0.0.1:8080/nacos/v1/ns/instance?serviceName=nacos.test.1&amp;ip=1.1.1.1&amp;port=8888&amp;cluster=TEST1\n</code></pre>\n<h3>Response Example</h3>\n<p>ok</p>\n<h2>Modify Instance</h2>\n<h3>Description</h3>\n<p>Modify an instance of service.</p>\n<h3>Request Type</h3>\n<p>POST</p>\n<h3>Request Path</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instance\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Service name</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>IP of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">yes</td>\n<td>Port of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">cluster</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Cluster name</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>ID of tenant</td>\n</tr>\n<tr>\n<td style="text-align:left">weight</td>\n<td style="text-align:left">double</td>\n<td style="text-align:left">no</td>\n<td>Weight</td>\n</tr>\n<tr>\n<td style="text-align:left">metadata</td>\n<td style="text-align:left">JSON</td>\n<td style="text-align:left">no</td>\n<td>Extended information</td>\n</tr>\n</tbody>\n</table>\n<h3>Request Example</h3>\n<pre><code class="language-plain">curl -X POST 127.0.0.1:8080/nacos/v1/ns/instance?serviceName=nacos.test.1&amp;ip=1.1.1.1&amp;port=8888&amp;cluster=TEST1&amp;weight=8&amp;metadata={}\n</code></pre>\n<h3>Response Example</h3>\n<p>ok</p>\n<h2>Query Instances</h2>\n<h3>Description</h3>\n<p>Query instance list of service.</p>\n<h3>Request Type</h3>\n<p>GET</p>\n<h3>Request Path</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instances\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Service name</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>ID of tenant</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">String, splited by comma</td>\n<td style="text-align:left">no</td>\n<td>Cluster name</td>\n</tr>\n<tr>\n<td style="text-align:left">healthyOnly</td>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">no, default value is false</td>\n<td>Return healthy instance or not</td>\n</tr>\n</tbody>\n</table>\n<h3>Request Example</h3>\n<pre><code class="language-plain">curl -X GET 127.0.0.1:8080/nacos/v1/ns/instances?serviceName=nacos.test.1\n</code></pre>\n<h3>Response Example</h3>\n<pre><code class="language-json">{\n\t<span class="hljs-attr">"dom"</span>: <span class="hljs-string">"nacos.test.1"</span>,\n\t<span class="hljs-attr">"cacheMillis"</span>: <span class="hljs-number">1000</span>,\n\t<span class="hljs-attr">"useSpecifiedURL"</span>: <span class="hljs-literal">false</span>,\n\t<span class="hljs-attr">"hosts"</span>: [{\n\t\t<span class="hljs-attr">"valid"</span>: <span class="hljs-literal">true</span>,\n\t\t<span class="hljs-attr">"marked"</span>: <span class="hljs-literal">false</span>,\n\t\t<span class="hljs-attr">"instanceId"</span>: <span class="hljs-string">"10.10.10.10-8888-DEFAULT-nacos.test.1"</span>,\n\t\t<span class="hljs-attr">"port"</span>: <span class="hljs-number">8888</span>,\n\t\t<span class="hljs-attr">"ip"</span>: <span class="hljs-string">"10.10.10.10"</span>,\n\t\t<span class="hljs-attr">"weight"</span>: <span class="hljs-number">1.0</span>,\n\t\t<span class="hljs-attr">"metadata"</span>: {}\n\t}],\n\t<span class="hljs-attr">"checksum"</span>: <span class="hljs-string">"3bbcf6dd1175203a8afdade0e77a27cd1528787794594"</span>,\n\t<span class="hljs-attr">"lastRefTime"</span>: <span class="hljs-number">1528787794594</span>,\n\t<span class="hljs-attr">"env"</span>: <span class="hljs-string">""</span>,\n\t<span class="hljs-attr">"clusters"</span>: <span class="hljs-string">""</span>\n}\n</code></pre>\n<h2>Query Instance Detail</h2>\n<h3>Description</h3>\n<p>Query instance details of service.</p>\n<h3>Request Type</h3>\n<p>GET</p>\n<h3>Request Path</h3>\n<pre><code class="language-plain">/nacos/v1/ns/instance\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Service name</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>IP of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">yes</td>\n<td>Port of instance</td>\n</tr>\n<tr>\n<td style="text-align:left">tenant</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">no</td>\n<td>ID of tenant</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">String, splited by comma</td>\n<td style="text-align:left">no</td>\n<td>Cluster name</td>\n</tr>\n</tbody>\n</table>\n<h3>Request Example</h3>\n<pre><code class="language-plain">curl -X GET \'127.0.0.1:8080/nacos/v1/ns/instance?serviceName=nacos.test.2&amp;ip=10.10.10.10&amp;port=8888&amp;cluster=DEFAULT\'\n</code></pre>\n<h3>Response Example</h3>\n<pre><code class="language-json">{\n\t<span class="hljs-attr">"metadata"</span>: {},\n\t<span class="hljs-attr">"instanceId"</span>: <span class="hljs-string">"10.10.10.10-8888-DEFAULT-nacos.test.2"</span>,\n\t<span class="hljs-attr">"port"</span>: <span class="hljs-number">8888</span>,\n\t<span class="hljs-attr">"service"</span>: <span class="hljs-string">"nacos.test.2"</span>,\n\t<span class="hljs-attr">"healthy"</span>: <span class="hljs-literal">false</span>,\n\t<span class="hljs-attr">"ip"</span>: <span class="hljs-string">"10.10.10.10"</span>,\n\t<span class="hljs-attr">"clusterName"</span>: <span class="hljs-string">"DEFAULT"</span>,\n\t<span class="hljs-attr">"weight"</span>: <span class="hljs-number">1.0</span>\n}\n</code></pre>\n'},{filename:"other-language.md",__html:'<p>We will rely mainly on the community to develop multi-language clients. We will recommend the most widely used client to Nacos users as the official one in the future.</p>\n<ul>\n<li><a href="TD_LINK">go - IN PLAN</a></li>\n<li><a href="TO_LINK">cpp - IN PLAN</a></li>\n<li><a href="TO_LINK">python - IN PLAN</a></li>\n<li><a href="TO_LINK">nodejs - IN PLAN</a></li>\n<li>more ...</li>\n</ul>\n'},{filename:"pull-request.md",__html:'<p>Please do not create a Pull Request without creating an issue first.</p>\n<h2>What is the purpose of the change</h2>\n<p>XXXXX</p>\n<h2>Brief changelog</h2>\n<p>XX</p>\n<h2>Verifying this change</h2>\n<p>XXXX</p>\n<p>Follow this checklist to help us incorporate your contribution quickly and easily:</p>\n<ul>\n<li>[ ] Make sure there is a Github issue filed for the change (usually before you start working on it). Trivial changes like typos do not require a Github issue. Your pull request should address just this issue, without pulling in other changes - one PR resolves one issue.</li>\n<li>[ ] Format the pull request title like <code>[ISSUE #123] Fix UnknownException when host config not exist</code>. Each commit in the pull request should have a meaningful subject line and body.</li>\n<li>[ ] Write a pull request description that is detailed enough to understand what the pull request does, how, and why.</li>\n<li>[ ] Write necessary unit-test to verify your logic correction, more mock a little better when cross module dependency exist. If the new feature or significant change is committed, please remember to add integration-test in <a href="https://github.com/apache/rocketmq/tree/master/test">test module</a>.</li>\n<li>[ ] Run <code>mvn -B clean apache-rat:check findbugs:findbugs</code> to make sure basic checks pass. Run <code>mvn clean install -DskipITs</code> to make sure unit-test pass. Run <code>mvn clean test-compile failsafe:integration-test</code>  to make sure integration-test pass.</li>\n<li>[ ] If this contribution is large, please file an <a href="http://www.apache.org/licenses/#clas">Apache Individual Contributor License Agreement</a>.</li>\n</ul>\n'},{filename:"quick-start.md",__html:'<p>This topic is about how to set up and use Nacos.</p>\n<h2>1.Prerequisites</h2>\n<p>Before you begin, install the following:</p>\n<ol>\n<li>64bit OS: Linux/Unix/Mac/Windows supported, Linux/Unix/Mac recommended.</li>\n<li>64bit JDK 1.8+: <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">downloads</a>, <a href="https://docs.oracle.com/cd/E19182-01/820-7851/inst_cli_jdk_javahome_t/">JAVA_HOME settings</a>.</li>\n<li>Maven 3.2.x+: <a href="https://maven.apache.org/download.cgi">downloads</a>, <a href="https://maven.apache.org/settings.html">settings</a>.</li>\n</ol>\n<h2>2.Download &amp; Build from Release</h2>\n<p>There are two ways to get Nacos.</p>\n<h3>1)Download source code from Github</h3>\n<pre><code>unzip nacos-source.zip\ncd nacos/\nmvn -Prelease-nacos clean install -U  \ncd nacos/distribution/target/nacos-server-0.1.0/nacos/bin\n</code></pre>\n<h3>2)Download run package</h3>\n<p><a href="https://pan.baidu.com/s/1HJIJrbuOz2TpvSQFEIv6aw">zip package Download</a></p>\n<p><a href="https://pan.baidu.com/s/1612GZZcp84ponzhc_dz5QA">tar.gz package Download</a></p>\n<pre><code>  unzip nacos-server-0.1.0.zip  OR tar -xvf nacos-server-0.1.0.tar.gz\n  cd nacos/bin\n</code></pre>\n<h2>3.Start Server</h2>\n<h3>Linux/Unix/Mac</h3>\n<p>Run the following command to sart(standalone means non-cluster mode):</p>\n<p><code>sh startup.sh -m standalone</code></p>\n<h3>Windows</h3>\n<p>Run the following command to start:</p>\n<p><code>cmd startup.cmd</code></p>\n<p>Or double-click the startup.cmd run file.</p>\n<h2>4.Service &amp; Configuration Management</h2>\n<h3>Service registration</h3>\n<p><code>curl -X PUT \'http://127.0.0.1:8080/nacos/v1/ns/instance?serviceName=nacos.naming.serviceName&amp;ip=20.18.7.10&amp;port=8080\'</code></p>\n<h3>Service discovery</h3>\n<p><code>curl -X GET http://127.0.0.1:8080/nacos/v1/ns/instances?serviceName=nacos.naming.serviceName\'</code></p>\n<h3>Publish config</h3>\n<p><code>curl -X POST &quot;http://127.0.0.1:8080/nacos/v1/cs/configs?dataId=nacos.cfg.dataId&amp;group=test&amp;content=helloWorld&quot;</code></p>\n<h3>Get config</h3>\n<p><code>curl -X GET &quot;http://127.0.0.1:8080/nacos/v1/cs/configs?dataId=nacos.cfg.dataId&amp;group=test&quot;</code></p>\n<h2>5.Shutdown Servers</h2>\n<h3>Linux/Unix/Mac</h3>\n<p><code>sh shutdown.sh</code></p>\n<h3>Windows</h3>\n<p><code>cmd shutdown.cmd</code></p>\n'},{filename:"roadmap.md",__html:'<p><span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)">We plan to make Nacos available for production from Nacos 0.8.0. Prior to this release, we recommend that you use it only in development and test environments.</span></span></p>\n<p><span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)">Our current plan is to strive to make Nacos production ready in the 6-8 months. The plan might be adjusted due to various factors, including the priority adjustment according to the voice of the community, but the overall plan is that it should not take longer than one year.</span></span></p>\n<p>Below are the main roadmaps and plans for the next year.</p>\n<h2>Nacos 1.0</h2>\n<p>Main goals:</p>\n<ul>\n<li><span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)">Build an easy-to-use, service-related toolset that includes dynamic service discovery, configuration management, service metadata storage and management, push, data consistency, and service&amp;DNS management</span></span></li>\n<li><span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)">Seamless integration with and support for open-source ecosystems including </span></span><a href="xx">Spring Cloud</a><span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)"> , </span></span><a href="xx">Kubernetes</a><span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)">, </span></span><a href="xx">Dubbo</a><span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)">, etc., while at the same time developing a variety of excellent features for large-scale production.</span></span></li>\n</ul>\n<p>The following is a rough version plan:</p>\n<ul>\n<li>0.1 Basic Nacos server and simple OpenAPI and Java SDK;</li>\n<li>0.2 - 0.3 Seamless support for Kubernetes, Service Mesh and Spring Cloud service discovery and configuration management;</li>\n<li>0.4 - 0.5 Build an easy-to-use Web UI/User Console;</li>\n<li>0.6 - 0.7 High availability, ease of use, monitoring and alert etc.;</li>\n<li>0.8 Production ready;</li>\n<li>0.9 Large scale performance tuning and benchmark;</li>\n<li>1.0 GA for large scale production.</li>\n</ul>\n<h2>Nacos 2.0</h2>\n<p><span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)">Main goal:</span></span></p>\n<p>Build<span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)"> an open-service platform for unified service management, service sharing and service governance. which can be further divided into two goals.</span></span></p>\n<ul>\n<li>Dubbo 4.0 + Nacos 2.0: An Open-Service Platform</li>\n</ul>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1531319724777-d19b0304-535c-4af9-bee1-f358b6e55d91.png" alt="Screen Shot 2018-07-11 at 22.32.17.png | left"></p>\n<ul>\n<li>Kubernetes + Spring Cloud: <span data-type="color" style="color:rgb(33, 33, 33)"><span data-type="background" style="background-color:rgb(255, 255, 255)">Unified Service Management</span></span></li>\n</ul>\n<p><img src="https://cdn.yuque.com/lark/0/2018/png/15914/1531319755930-0040e67e-ca05-47b9-9cd0-07ffd7452eae.png" alt="Screen Shot 2018-07-11 at 22.35.30.png | left"></p>\n'},{filename:"sdk-properties.md",__html:"<p>Nacos �ͻ��˳�ʼ��˵��</p>\n<pre><code>\tpublic final static String ENDPOINT = &quot;endpoint&quot;;\n\tpublic final static String NAMESPACE = &quot;namespace&quot;;\n\tpublic final static String ACCESS_KEY = &quot;accessKey&quot;;\n\tpublic final static String SECRET_KEY = &quot;secretKey&quot;;\n\tpublic final static String SERVER_ADDR = &quot;serverAddr&quot;;\n\tpublic final static String CONTEXT_PATH = &quot;contextPath&quot;;\n\tpublic final static String CLUSTER_NAME = &quot;clusterName&quot;;\n\tpublic final static String ENCODE = &quot;encode&quot;;\n\n</code></pre>\n<p>һ���ͻ��˿���ͨ�����ַ�ʽ��ʼ������ѡһ���ش���</p>\n<ol>\n<li>\n<p>ͨ��ֱ�Ӵ���Nacos server����Ϣ��ip:port��������������ʽ</p>\n<p><code>SERVER_ADDR server��ַ����ʽΪ��ip1:port,ip2.port��</code></p>\n</li>\n<li>\n<p>ͨ���������н����ȡ������Ϣ</p>\n<pre><code>ENDPOINT ����� \nCLUSTER_NAME ��Ⱥ����\n</code></pre>\n</li>\n</ol>\n<p>�������ӵ�server��·�����Ǳش���</p>\n<pre><code>CONTEXT_PATH server��·�� ��Ĭ��ֵ nacos��\n</code></pre>\n<p>����������루�Ǳش���</p>\n<pre><code>NAMESPACE ��������\n</code></pre>\n<p>�ġ���Ȩ�������Ǳش���</p>\n<pre><code>ACCESS_KEY ��Կ\nSECRET_KEY ˽Կ\n</code></pre>\n"},{filename:"sdk.md",__html:'<h2>Maven</h2>\n<pre><code>&lt;groupId&gt;com.alibaba.nacos&lt;/groupId&gt;\n&lt;artifactId&gt;nacos-client&lt;/artifactId&gt;\n&lt;version&gt;0.1.0&lt;/version&gt;\n</code></pre>\n<h1>Configuration Management</h1>\n<h2>Get configuration</h2>\n<h3>Description</h3>\n<p>Get configuration from Nacos when a service starts.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getConfig</span><span class="hljs-params">(String dataId, String group, <span class="hljs-keyword">long</span> timeoutMs)</span> <span class="hljs-keyword">throws</span> NacosException\n</span></code></pre>\n<h3>Request parameters</h3>\n<div class="bi-table">\n  <table>\n    <colgroup>\n      <col width="auto" />\n      <col width="auto" />\n      <col width="auto" />\n    </colgroup>\n    <tbody>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Name</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Type</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Description</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">dataId</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n          <div data-type="p"></div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Configuration ID. Use a naming rule similar to package.class (for example, com.taobao.tc.refund.log.level) to ensure global uniqueness. It is recommended to indicate business meaning of the configuration in the &quot;class&quot; section. Use\n            lower case for all characters. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;, &quot;_&quot;) only. Up to 256 characters are allowed.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">group</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Configuration group. To ensure uniqueness, format such as <strong>product name: module name </strong>(for example, Nacos:Test) is preferred. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;,\n            &quot;_&quot;) only. Up to 128 characters are allowed.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">timeout</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">long</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Length of configuration read time-out (in ms). Recommended value: 3000.</div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<h3>Return values</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">string</td>\n<td style="text-align:left">configuration value</td>\n</tr>\n</tbody>\n</table>\n<h3>Request example</h3>\n<pre><code class="language-java"><span class="hljs-keyword">try</span> {\n    <span class="hljs-comment">// Initialize the configuration service, and the console automatically obtains the following parameters through the sample code.</span>\n\tString serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\n\tString dataId = <span class="hljs-string">"{dataId}"</span>;\n\tString group = <span class="hljs-string">"{group}"</span>;\n\tProperties properties = <span class="hljs-keyword">new</span> Properties();\n\tproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\n\tConfigService configService = NacosFactory.createConfigService(properties);\n    <span class="hljs-comment">// Actively get the configuration.</span>\n\tString content = configService.getConfig(dataId, group, <span class="hljs-number">5000</span>);\n\tSystem.out.println(content);\n} <span class="hljs-keyword">catch</span> (NacosException e) {\n    <span class="hljs-comment">// TODO Auto-generated catch block</span>\n    e.printStackTrace();\n}\n</code></pre>\n<h3>Exception specification</h3>\n<p>A ConfigException is thrown in case of a configuration read time-out or a network error.</p>\n<h2>Listen configuration</h2>\n<h3>Description</h3>\n<p>Use dynamic configuration listening API to enable Nacos to send configuration change notifications.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addListener</span><span class="hljs-params">(String dataId, ConfigChangeListenerAdapter listener)</span>\n</span></code></pre>\n<h3>Request parameters</h3>\n<div class="bi-table">\n  <table>\n    <colgroup>\n      <col width="auto" />\n      <col width="auto" />\n      <col width="auto" />\n    </colgroup>\n    <tbody>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Name</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Type</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Description</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">dataId</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Configuration ID. Use a naming rule similar to package.class (for example, com.taobao.tc.refund.log.level) to ensure global uniqueness. It is recommended to indicate business meaning of the configuration in the &quot;class&quot; section. Use\n            lower case for all characters. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;, &quot;_&quot;) only. Up to 256 characters are allowed.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">group</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Configuration group. To ensure uniqueness, format such as <strong>product name: module name </strong> (for example, Nacos:Test) is preferred. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;,\n            &quot;_&quot;) only. Up to 128 characters are allowed.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">listener</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Config Change Listener</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Listener. Configuration changes go into the callback function of the listener.</div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<h3>Return values</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">string</td>\n<td style="text-align:left">Configuration value. This value is returned through the callback function during initialization or configuration modification.</td>\n</tr>\n</tbody>\n</table>\n<h3>Request example</h3>\n<pre><code class="language-java">\n<span class="hljs-comment">// Initialize the configuration service, and the console automatically obtains the following parameters through the sample code.</span>\nString serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\nString dataId = <span class="hljs-string">"{dataId}"</span>;\nString group = <span class="hljs-string">"{group}"</span>;\nProperties properties = <span class="hljs-keyword">new</span> Properties();\nproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\nConfigService configService = NacosFactory.createConfigService(properties);\nString content = configService.getConfig(dataId, group, <span class="hljs-number">5000</span>);\nSystem.out.println(content);\nconfigService.addListener(dataId, group, <span class="hljs-keyword">new</span> Listener() {\n\t<span class="hljs-meta">@Override</span>\n\t<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">receiveConfigInfo</span><span class="hljs-params">(String configInfo)</span> </span>{\n\t\tSystem.out.println(<span class="hljs-string">"receive1:"</span> + configInfo);\n\t}\n\t<span class="hljs-meta">@Override</span>\n\t<span class="hljs-function"><span class="hljs-keyword">public</span> Executor <span class="hljs-title">getExecutor</span><span class="hljs-params">()</span> </span>{\n\t\t<span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;\n\t}\n});\n\n<span class="hljs-comment">// Keep the main thread alive throughout the test, because the configuration subscription runs in a daemon thread, which exits once the main thread exits. The following code is not required in a real environment.</span>\n<span class="hljs-keyword">while</span> (<span class="hljs-keyword">true</span>) {\n    <span class="hljs-keyword">try</span> {\n        Thread.sleep(<span class="hljs-number">1000</span>);\n    } <span class="hljs-keyword">catch</span> (InterruptedException e) {\n        e.printStackTrace();\n    }\n}\n</code></pre>\n<h2>Delete Listening</h2>\n<h3>Description</h3>\n<p>Cancel listen configuration. No more notification after cancellation.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">removeListener</span><span class="hljs-params">(String dataId, String group, Listener listener)</span>\n</span></code></pre>\n<h3>Request parameters</h3>\n<div class="bi-table">\n  <table>\n    <colgroup>\n      <col width="auto" />\n      <col width="auto" />\n      <col width="auto" />\n    </colgroup>\n    <tbody>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Name</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Type</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Description</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">dataId</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">string</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Configuration ID. Use a naming rule similar to package.class (for example, com.taobao.tc.refund.log.level) to ensure global uniqueness. It is recommended to indicate business meaning of the configuration in the &quot;class&quot; section. Use\n            lower case for all characters. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;, &quot;_&quot;) only. Up to 256 characters are allowed.</div>\n        </td>\n      </tr>\n      <tr>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">listener</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">ConfigChangeListenerAdapter</div>\n        </td>\n        <td rowspan="1" colSpan="1">\n          <div data-type="p">Listener. Configuration changes go into the callback function of the listener.</div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<h3>Request example</h3>\n<pre><code class="language-java">String serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\nString dataId = <span class="hljs-string">"{dataId}"</span>;\nString group = <span class="hljs-string">"{group}"</span>;\nProperties properties = <span class="hljs-keyword">new</span> Properties();\nproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\nConfigService configService = NacosFactory.createConfigService(properties);\nconfigService.removeListener(dataId, group, yourListener);\n</code></pre>\n<h2>Publish configuration</h2>\n<h3>Description</h3>\n<p>Publish Nacos configurations automatically to reduce the operation and maintenance cost.</p>\n<p><strong>Note:</strong> It uses the same publishing interface to create or modify a configuration. If the specified configuration doesn’t exist, it will create a configuration. If the specified configuration exists, it will update the configuration.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">publishConfig</span><span class="hljs-params">(String dataId, String group, String content)</span> <span class="hljs-keyword">throws</span> NacosException\n\n</span></code></pre>\n<h3>Request parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">Configuration ID. Naming rule is similar to package.class (com.taobao.tc.refund.log.level) is used to ensure the global uniqueness We recommend that you define class by business meaning. All characters must be in lower case. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;, &quot;_&quot;) only. Up to 256 characters are allowed.</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">Configuration group. We recommend that you use product name: module name (for example Nacos:Test) to ensure the uniqueness. Use alphabetical letters and these four special characters (&quot;.&quot;, &quot;:&quot;, &quot;-&quot;, &quot;_&quot;) only. Up to 128 characters are allowed.</td>\n</tr>\n<tr>\n<td style="text-align:left">content</td>\n<td style="text-align:left">string</td>\n<td style="text-align:left">Configuration content. No more than 100K bytes.</td>\n</tr>\n</tbody>\n</table>\n<h3>Response parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">If the publishing is successful</td>\n</tr>\n</tbody>\n</table>\n<h3>Request example</h3>\n<pre><code class="language-java"><span class="hljs-keyword">try</span> {\n    <span class="hljs-comment">// Initialize the configuration service. Retrieves the following parameters in console with sample code</span>\n\tString serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\n\tString dataId = <span class="hljs-string">"{dataId}"</span>;\n\tString group = <span class="hljs-string">"{group}"</span>;\n\tProperties properties = <span class="hljs-keyword">new</span> Properties();\n\tproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\n    ConfigService configService = NacosFactory.createConfigService(properties);\n\t<span class="hljs-keyword">boolean</span> isPublishOk = configService.publishConfig(dataId, group, <span class="hljs-string">"content"</span>);\n\tSystem.out.println(isPublishOk);\n} <span class="hljs-keyword">catch</span> (NacosException e) {\n    <span class="hljs-comment">// TODO Auto-generated catch block</span>\n    e.printStackTrace();\n}\n</code></pre>\n<h3>Exceptions</h3>\n<p>In case of reading configuration timeout or network issues, ConfigException exception is thrown.</p>\n<h2>Delete configuration</h2>\n<h3>Description</h3>\n<p>It deletes Nacos configurations automatically with program to reduce operation and maintenance costs with automation.</p>\n<p><strong>Note:</strong> If the specified configuration exists, then it deletes the configuration. If the specified configuration doesn’t exist, then it returns a successful message.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">removeConfig</span><span class="hljs-params">(String dataId, String group)</span> <span class="hljs-keyword">throws</span> NacosException\n\n</span></code></pre>\n<h3>Request parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Parameter name</th>\n<th style="text-align:left">Parameter type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">dataId</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Configuration ID</td>\n</tr>\n<tr>\n<td style="text-align:left">group</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">Configuration group</td>\n</tr>\n</tbody>\n</table>\n<h3>Response parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Parameter type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">boolean</td>\n<td style="text-align:left">If the deletion is successful</td>\n</tr>\n</tbody>\n</table>\n<h3>Request example</h3>\n<pre><code class="language-java"><span class="hljs-keyword">try</span> {\n    <span class="hljs-comment">// Initialize the configuration service. Retrieves the following parameters in console with sample code</span>\n\tString serverAddr = <span class="hljs-string">"{serverAddr}"</span>;\n\tString dataId = <span class="hljs-string">"{dataId}"</span>;\n\tString group = <span class="hljs-string">"{group}"</span>;\n\tProperties properties = <span class="hljs-keyword">new</span> Properties();\n\tproperties.put(<span class="hljs-string">"serverAddr"</span>, serverAddr);\n\n\tConfigService configService = NacosFactory.createConfigService(properties);\n\t<span class="hljs-keyword">boolean</span> isRemoveOk = configService.removeConfig(dataId, group);\n\tSystem.out.println(isRemoveOk);\n} <span class="hljs-keyword">catch</span> (NacosException e) {\n    <span class="hljs-comment">// TODO Auto-generated catch block</span>\n    e.printStackTrace();\n}\n</code></pre>\n<h3>Exceptions</h3>\n<p>In case of reading configuration timeout or network issues, ConfigException exception is thrown.</p>\n<h1>Service Discovery SDK</h1>\n<h2>Register Instance</h2>\n<h3>Description</h3>\n<p>Register an instance to service.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">registerInstance</span><span class="hljs-params">(String serviceName, String ip, <span class="hljs-keyword">int</span> port)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">registerInstance</span><span class="hljs-params">(String serviceName, String ip, <span class="hljs-keyword">int</span> port, String clusterName)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">registerInstance</span><span class="hljs-params">(String serviceName, Instance instance)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">String</td>\n<td>instance ip</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td>instance port</td>\n</tr>\n<tr>\n<td style="text-align:left">clusterName</td>\n<td style="text-align:left">String</td>\n<td>cluster name</td>\n</tr>\n<tr>\n<td style="text-align:left">instance</td>\n<td style="text-align:left">Refer to Java docs</td>\n<td>instance properties</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>void</p>\n<h3>Request Example</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nnaming.registerInstance(<span class="hljs-string">"nacos.test.3"</span>, <span class="hljs-string">"11.11.11.11"</span>, <span class="hljs-number">8888</span>, <span class="hljs-string">"TEST1"</span>);\n\nInstance instance = <span class="hljs-keyword">new</span> Instance();\ninstance.setIp(<span class="hljs-string">"55.55.55.55"</span>);\ninstance.setPort(<span class="hljs-number">9999</span>);\ninstance.setHealthy(<span class="hljs-keyword">false</span>);\ninstance.setWeight(<span class="hljs-number">2.0</span>);\nMap&lt;String, String&gt; instanceMeta = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();\ninstanceMeta.put(<span class="hljs-string">"site"</span>, <span class="hljs-string">"et2"</span>);\ninstance.setMetadata(instanceMeta);\n\nService service = <span class="hljs-keyword">new</span> Service(<span class="hljs-string">"nacos.test.4"</span>);\nservice.setApp(<span class="hljs-string">"nacos-naming"</span>);\nservice.setHealthCheckMode(<span class="hljs-string">"server"</span>);\nservice.setProtectThreshold(<span class="hljs-number">0.8F</span>);\nservice.setGroup(<span class="hljs-string">"CNCF"</span>);\nMap&lt;String, String&gt; serviceMeta = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();\nserviceMeta.put(<span class="hljs-string">"symmetricCall"</span>, <span class="hljs-string">"true"</span>);\nservice.setMetadata(serviceMeta);\ninstance.setService(service);\n\nCluster cluster = <span class="hljs-keyword">new</span> Cluster();\ncluster.setName(<span class="hljs-string">"TEST5"</span>);\nAbstractHealthChecker.Http healthChecker = <span class="hljs-keyword">new</span> AbstractHealthChecker.Http();\nhealthChecker.setExpectedResponseCode(<span class="hljs-number">400</span>);\nhealthChecker.setCurlHost(<span class="hljs-string">"USer-Agent|Nacos"</span>);\nhealthChecker.setCurlPath(<span class="hljs-string">"/xxx.html"</span>);\ncluster.setHealthChecker(healthChecker);\nMap&lt;String, String&gt; clusterMeta = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();\nclusterMeta.put(<span class="hljs-string">"xxx"</span>, <span class="hljs-string">"yyyy"</span>);\ncluster.setMetadata(clusterMeta);\n\ninstance.setCluster(cluster);\n\nnaming.registerInstance(<span class="hljs-string">"nacos.test.4"</span>, instance);\n</code></pre>\n<h2>Deregister Instance</h2>\n<h3>Description</h3>\n<p>Remove instance from service.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">deregisterInstance</span><span class="hljs-params">(String serviceName, String ip, <span class="hljs-keyword">int</span> port)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">deregisterInstance</span><span class="hljs-params">(String serviceName, String ip, <span class="hljs-keyword">int</span> port, String clusterName)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th style="text-align:left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">service name</td>\n</tr>\n<tr>\n<td style="text-align:left">ip</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">instance ip</td>\n</tr>\n<tr>\n<td style="text-align:left">port</td>\n<td style="text-align:left">int</td>\n<td style="text-align:left">instance port</td>\n</tr>\n<tr>\n<td style="text-align:left">clusterName</td>\n<td style="text-align:left">String</td>\n<td style="text-align:left">cluster name</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>None</p>\n<h3>Request Example</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nnaming.deregisterInstance(<span class="hljs-string">"nacos.test.3"</span>, <span class="hljs-string">"11.11.11.11"</span>, <span class="hljs-number">8888</span>, <span class="hljs-string">"DEFAULT"</span>);\n</code></pre>\n<h2>Get all instances of service</h2>\n<h3>Description</h3>\n<p>Get all instances of service.</p>\n<pre><code class="language-java"><span class="hljs-function">List&lt;Instance&gt; <span class="hljs-title">getAllInstances</span><span class="hljs-params">(String serviceName)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function">List&lt;Instance&gt; <span class="hljs-title">getAllInstances</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>cluster list</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>List<Instance> instance list。</p>\n<h3>Request Example</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nSystem.out.println(naming.getAllInstances(<span class="hljs-string">"nacos.test.3"</span>));\n</code></pre>\n<h2>Get filtered list of instance</h2>\n<h3>Description</h3>\n<p>Get healthy or unhealthy instances of service.</p>\n<pre><code class="language-java"><span class="hljs-function">List&lt;Instance&gt; <span class="hljs-title">selectInstances</span><span class="hljs-params">(String serviceName, <span class="hljs-keyword">boolean</span> healthy)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function">List&lt;Instance&gt; <span class="hljs-title">selectInstances</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters, <span class="hljs-keyword">boolean</span> healthy)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>cluster list</td>\n</tr>\n<tr>\n<td style="text-align:left">healthy</td>\n<td style="text-align:left">boolean</td>\n<td>healthy or not</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>List<Instance> instance list.</p>\n<h3>Request Example</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nSystem.out.println(naming.selectInstances(<span class="hljs-string">"nacos.test.3"</span>, <span class="hljs-keyword">true</span>));\n</code></pre>\n<h2>Get one healthy instance</h2>\n<h3>Description</h3>\n<p>Get one healthy instance selected by load-balance strategy.</p>\n<pre><code class="language-java"><span class="hljs-function">Instance <span class="hljs-title">selectOneHealthyInstance</span><span class="hljs-params">(String serviceName)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function">Instance <span class="hljs-title">selectOneHealthyInstance</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>cluster list</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>Instance</p>\n<h3>Request Example</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nSystem.out.println(naming.selectOneHealthyInstance(<span class="hljs-string">"nacos.test.3"</span>));\n</code></pre>\n<h2>Listen Service</h2>\n<h3>Description</h3>\n<p>Listen for changes of instances under a service.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">subscribe</span><span class="hljs-params">(String serviceName, EventListener listener)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">subscribe</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters, EventListener listener)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>cluster list</td>\n</tr>\n<tr>\n<td style="text-align:left">listener</td>\n<td style="text-align:left">EventListener</td>\n<td>event listener</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>void</p>\n<h3>Request Example</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nnaming.subscribe(<span class="hljs-string">"nacos.test.3"</span>, event -&gt; {\n    <span class="hljs-keyword">if</span> (event <span class="hljs-keyword">instanceof</span> NamingEvent) {\n        System.out.println(((NamingEvent) event).getServceName());\n        System.out.println(((NamingEvent) event).getInstances());\n    }\n});\n</code></pre>\n<h2>Unlisten Service</h2>\n<h3>Description</h3>\n<p>Cancel listening service.</p>\n<pre><code class="language-java"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">unsubscribe</span><span class="hljs-params">(String serviceName, EventListener listener)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n\n<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">unsubscribe</span><span class="hljs-params">(String serviceName, List&lt;String&gt; clusters, EventListener listener)</span> <span class="hljs-keyword">throws</span> NacosException</span>;\n</code></pre>\n<h3>Request Parameters</h3>\n<table>\n<thead>\n<tr>\n<th style="text-align:left">Name</th>\n<th style="text-align:left">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="text-align:left">serviceName</td>\n<td style="text-align:left">String</td>\n<td>service name</td>\n</tr>\n<tr>\n<td style="text-align:left">clusters</td>\n<td style="text-align:left">List</td>\n<td>cluster list</td>\n</tr>\n<tr>\n<td style="text-align:left">listener</td>\n<td style="text-align:left">EventListener</td>\n<td>event listener</td>\n</tr>\n</tbody>\n</table>\n<h3>Response</h3>\n<p>void</p>\n<h3>Request Example</h3>\n<pre><code class="language-java">NamingService naming = NamingFactory.createNaming(System.getProperty(<span class="hljs-string">"serveAddr"</span>));\nnaming.unsubscribe(<span class="hljs-string">"nacos.test.3"</span>, event -&gt; {});\n</code></pre>\n'},{filename:"use-nacos-with-dubbo.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.3.0</p>\n"},{filename:"use-nacos-with-istio.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.6.0</p>\n"},{filename:"use-nacos-with-kubernetes.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.4.0</p>\n"},{filename:"use-nacos-with-springcloud.md",__html:"<p><strong>IN PLAN</strong> with Nacos 0.2.0</p>\n"},{filename:"what-is-nacos.md",__html:'<h1>What is Nacos</h1>\n<h2>Overview</h2>\n<p>Welcome to Nacos!</p>\n<p>Nacos is committed to help you discover, configure, and manage your microservices. It provides a set of simple and useful features enabling you to realize dynamic service discovery, service configuration, service metadata and traffic management.</p>\n<p>Nacos makes it easier and faster to construct, deliver and manage your microservices platform. It is the infrastructure that supports a service-centered modern application architecture with a microservices or cloud-native approach.</p>\n<h2>What is Nacos？</h2>\n<p>Service is a first-class citizen in Nacos. Nacos supports discovering, configuring, and managing almost all types of services:</p>\n<p><a href="https://kubernetes.io/docs/concepts/services-networking/service/">Kubernetes Service</a></p>\n<p><a href="https://grpc.io/docs/guides/concepts.html#service-definition">gRPC</a> &amp; <a href="https://dubbo.incubator.apache.org/#/?lang=en-us">Dubbo RPC Service</a></p>\n<p><a href="https://spring.io/understanding/REST">Spring Cloud RESTful Service</a></p>\n<p>Key features of Nacos:</p>\n<ul>\n<li>\n<p><strong>Service Discovery And Service Health Check</strong></p>\n<p>Nacos supports both DNS-based and RPC-based (Dubbo/gRPC) service discovery. After a service provider registers a service with <a href="https://nacos.io/#/docs/sdk.md">native</a>, <a href="https://nacos.io/#/docs/open-API.md">OpenAPI</a>, or <a href="https://nacos.io/#/docs/other-language.md">a dedicated agent</a>, a consumer can discover the service with either <a href="https://nacos.io/#/docs/other-language.md">DNS</a> or <a href="https://nacos.io/#/docs/other-language.md">HTTP</a>.</p>\n<p>Nacos provides real-time health check to prevent services from sending requests to unhealthy hosts or service instances. Nacos supports both transport layer (PING or TCP) health check and application layer (such as HTTP, Redis, MySQL, and user-defined protocol) health check. For the health check of complex clouds and network topologies(such as VPC, Edge Service etc), Nacos provides both agent mode and server mode health check. Nacos also provide a unity service health dashboard to help you manage the availability and traffic of services.</p>\n</li>\n<li>\n<p><strong>Dynamic configuration management</strong></p>\n<p>Dynamic configuration service allows you to manage the configuration of all applications and services in a centralized, externalized and dynamic manner across all environments.</p>\n<p>Dynamic configuration eliminates the need to redeploy applications and services when configurations are updated.</p>\n<p>Centralized management of configuration makes it more convenient for you to achieve stateless services and elastic expansion of service instances on-demand.</p>\n<p>Nacos provides an <a href="xx">easy-to-use UI TODO</a> to help you manage all of your application or services\'s configurations. It provides some out-of-box features including configuration version tracking, canary/beta release, configuration rollback, and client configuration update status tracking to ensure the safety and control the risk of configuration change.</p>\n</li>\n<li>\n<p><strong>Dynamic DNS service</strong></p>\n<p>Dynamic DNS service which supports weighted routing makes it easier for you to implement mid-tier load balancing, flexible routing policies, traffic control, and simple DNS resolution services in your production environment within your data center. Dynamic DNS service makes it easier for you to implement DNS-based Service discovery.</p>\n<p>Nacos provides some simple <a href="xx">DNS APIs TODO</a> for you to manage your DNS domain names and IPs.</p>\n</li>\n<li>\n<p><strong>Service governance and metadata management</strong></p>\n<p>Nacos allows you to manage all of your services and metadata from the perspective of a microservices platform builder. This includes managing service description, life cycle, service static dependencies analysis, service health status, service traffic management，routing and security rules, service SLA, and first line metrics.</p>\n</li>\n<li>\n<p><a href="xx">Check more features ...</a></p>\n</li>\n</ul>\n<h2>Nacos landscape</h2>\n<p><img src="https://cdn.nlark.com/lark/0/2018/png/11189/1533045871534-e64b8031-008c-4dfc-b6e8-12a597a003fb.png" alt="nacos_landscape.png"></p>\n<p>As the figure above shows, Nacos seamlessly supports open source ecologies including <a href="https://nacos.io/#/docs/use-nacos-with-dubbo.md">Dubbo and Dubbo Mesh</a>, <a href="https://nacos.io/#/docs/use-nacos-with-springcloud.md">Spring Cloud</a>, and <a href="https://nacos.io/#/docs/use-nacos-with-kubernetes.md">Kubernetes and CNCF</a>.</p>\n<p>Use Nacos to simplify your solutions in service discovery, configuration management, and service governance and management. With Nacos, microservices management in open source system is easy.</p>\n<p>For more information about how to use Nacos with other open source projects, see the following:</p>\n<p><a href="https://nacos.io/#/docs/use-nacos-with-kubernetes.md">Use Nacos with Kubernetes</a></p>\n<p><a href="https://nacos.io/#/docs/use-nacos-with-dubbo.md">Use Nacos with Dubbo</a></p>\n<p><a href="https://nacos.io/#/docs/roadmap.md">Use Nacos with gRPC</a></p>\n<p><a href="https://nacos.io/#/docs/use-nacos-with-springcloud.md">Use Nacos with Spring Cloud</a></p>\n<p><a href="https://nacos.io/#/docs/use-nacos-with-istio.md">Use Nacos with Istio</a></p>\n<h2>What’s next</h2>\n<p>Continue with <a href="https://nacos.io/#/docs/quick-start.md">quick start</a> to get started with Nacos.</p>\n'}]}},,,function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={"en-us":{sidemenu:[{title:"Nacos ",children:[{title:"What is Nacos",opened:!0,children:[{title:"What is Nacos",link:"/docs/what-is-nacos.md"},{title:"Concepts",link:"/docs/concepts.md"},{title:"Architecure",link:"/docs/architecture.md"}]},{title:"User Guide",opened:!0,children:[{title:"Quick Start",link:"/docs/quick-start.md"},{title:"Java SDK",link:"/docs/sdk.md"},{title:"Other Language",link:"/docs/other-language.md"},{title:"Open-API",link:"/docs/open-API.md"}]},{title:"Admin Guide",children:[{title:"Deployment Guide",link:"/docs/deployment.md"},{title:"Management OpenAPI",link:"/docs/managementAPI.md"},{title:"Nacos Operator CLI Guide",link:"/docs/CLI-guide.md"},{title:"Admin Console Guide",link:"/docs/console-guide.md"}]},{title:"Contributor Guide",children:[{title:"Contribute to Nacos",link:"/docs/contributing.md"},{title:"Pull Request Template",link:"/docs/pull-request.md"},{title:"Nacos RoadMap",link:"/docs/roadmap.md"},{title:"Nacos with SpringCloud",link:"/docs/use-nacos-with-springcloud.md"},{title:"Nacos with Dubbo",link:"/docs/use-nacos-with-dubbo.md"},{title:"Nacos with K8s",link:"/docs/use-nacos-with-kubernetes.md"},{title:"Nacos with Istio",link:"/docs/use-nacos-with-istio.md"}]},{title:"Community",children:[{title:"Community",link:"/docs/community.md"}]}]}],barText:"Documentation"},"zh-cn":{sidemenu:[{title:"Nacos ",children:[{title:"Nacos是什么?",opened:!0,children:[{title:"Nacos简介",link:"/docs/what-is-nacos.md"},{title:"概念",link:"/docs/concepts.md"},{title:"架构",link:"/docs/architecture.md"}]},{title:"用户指南",opened:!0,children:[{title:"快速入门",link:"/docs/quick-start.md"},{title:"Java的SDK",link:"/docs/sdk.md"},{title:"其他语言的SDK",link:"/docs/other-language.md"},{title:"Open-API指南",link:"/docs/open-API.md"}]},{title:"运维指南",children:[{title:"部署手册",link:"/docs/deployment.md"},{title:"运维API",link:"/docs/managementAPI.md"},{title:"命令行手册",link:"/docs/CLI-guide.md"},{title:"控制台手册",link:"/docs/console-guide.md"}]},{title:"开源共建",children:[{title:"贡献源码",link:"/docs/contributing.md"},{title:"pull request模板",link:"/docs/pull-request.md"},{title:"Nacos规划",link:"/docs/roadmap.md"},{title:"Nacos支持SpringCloud生态",link:"/docs/use-nacos-with-springcloud.md"},{title:"nacos支持dubbo生态",link:"/docs/use-nacos-with-dubbo.md"},{title:"Nacos支持k8s",link:"/docs/use-nacos-with-kubernetes.md"},{title:"nacos支持istio",link:"/docs/use-nacos-with-istio.md"}]},{title:"社区",children:[{title:"社区",link:"/docs/community.md"}]}]}],barText:"Nacos 文档"}}},,,,function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var l,o=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),c=n(0),d=a(c),p=n(17),u=a(p),h=n(18),f=n(91),g=a(f);n(112);var y=(l=function(t){function e(t){s(this,e);var n=r(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.state={menuBodyVisible:!1},n}return i(e,t),o(e,[{key:"toggleMenuBody",value:function(){this.setState({menuBodyVisible:!this.state.menuBodyVisible})}},{key:"render",value:function(){var t=this,e=this.props.dataSource,n=this.state.menuBodyVisible,a=(0,u.default)({sidemenu:!0,"sidemenu-open":n}),s=(0,u.default)({"menu-item":!0,"menu-item-level-1":!0});return d.default.createElement("div",{className:a},d.default.createElement("div",{onClick:this.toggleMenuBody,className:"sidemenu-toggle"},d.default.createElement("img",{src:n?"https://img.alicdn.com/tfs/TB1I5itXQyWBuNjy0FpXXassXXa-200-200.png":"https://img.alicdn.com/tfs/TB1E6apXHGYBuNjy0FoXXciBFXa-200-200.png"})),d.default.createElement("ul",null,e.map(function(e,n){return d.default.createElement("li",{className:s,key:n},d.default.createElement("span",null,e.title),d.default.createElement("ul",null,e.children.map(function(e,n){return d.default.createElement(g.default,{item:e,key:n,toggleMenuBody:t.toggleMenuBody})})))})))}}]),e}(d.default.Component),function(t,e,n,a,s){var r={};return Object.keys(a).forEach(function(t){r[t]=a[t]}),r.enumerable=!!r.enumerable,r.configurable=!!r.configurable,("value"in r||r.initializer)&&(r.writable=!0),r=n.slice().reverse().reduce(function(n,a){return a(t,e,n)||n},r),s&&void 0!==r.initializer&&(r.value=r.initializer?r.initializer.call(s):void 0,r.initializer=void 0),void 0===r.initializer&&(Object.defineProperty(t,e,r),r=null),r}(l.prototype,"toggleMenuBody",[h.autobind],Object.getOwnPropertyDescriptor(l.prototype,"toggleMenuBody"),l.prototype),l);e.default=y},function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function l(t,e,n,a,s){var r={};return Object.keys(a).forEach(function(t){r[t]=a[t]}),r.enumerable=!!r.enumerable,r.configurable=!!r.configurable,("value"in r||r.initializer)&&(r.writable=!0),r=n.slice().reverse().reduce(function(n,a){return a(t,e,n)||n},r),s&&void 0!==r.initializer&&(r.value=r.initializer?r.initializer.call(s):void 0,r.initializer=void 0),void 0===r.initializer&&(Object.defineProperty(t,e,r),r=null),r}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var o,c=function(){function t(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,n,a){return n&&t(e.prototype,n),a&&t(e,a),e}}(),d=n(0),p=a(d),u=n(1),h=n(18),f=n(17),g=a(f),y=(o=function(t){function e(t){s(this,e);var n=r(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t)),a=t.item,i=a.children&&a.children.length,l=t.item.opened;return i?void 0===l&&(l=a.children.find(function(t){return t.link===window.location.hash.split("?")[0].slice(1)})):l=!1,n.state={opened:l},n}return i(e,t),c(e,[{key:"onItemClick",value:function(t){this.props.toggleMenuBody(),t.stopPropagation()}},{key:"toggle",value:function(){this.setState({opened:!this.state.opened})}},{key:"renderSubMenu",value:function(t){var e=this;return p.default.createElement("ul",null,t.map(function(t,n){return p.default.createElement("li",{className:(0,g.default)({"menu-item":!0,"menu-item-level-3":!0,"menu-item-selected":t.link===window.location.hash.split("?")[0].slice(1)}),key:n,onClick:e.onItemClick},p.default.createElement(u.Link,{to:t.link},t.title))}))}},{key:"render",value:function(){var t=this.props.item,e=t.children&&t.children.length,n=this.state.opened,a=(0,g.default)({"menu-item":!0,"menu-item-level-2":!0,"menu-item-selected":t.link===window.location.hash.split("?")[0].slice(1)}),s={height:n?36*(t.children.length+1):36,overflow:"hidden"};return e?p.default.createElement("li",{style:s,className:a,onClick:this.toggle},p.default.createElement("span",null,t.title,p.default.createElement("img",{style:{transform:"rotate("+(n?0:-90)+"deg)"},className:"menu-toggle",src:"./img/arrow_down.png"})),this.renderSubMenu(t.children)):p.default.createElement("li",{style:s,className:a,onClick:this.onItemClick},p.default.createElement(u.Link,{to:t.link},t.title))}}]),e}(p.default.Component),l(o.prototype,"onItemClick",[h.autobind],Object.getOwnPropertyDescriptor(o.prototype,"onItemClick"),o.prototype),l(o.prototype,"toggle",[h.autobind],Object.getOwnPropertyDescriptor(o.prototype,"toggle"),o.prototype),l(o.prototype,"renderSubMenu",[h.autobind],Object.getOwnPropertyDescriptor(o.prototype,"renderSubMenu"),o.prototype),o);e.default=y},,,,,,,,,,,function(t,e){t.exports=".sidemenu {\n  background: #f8f8f8;\n  width: 295px;\n  position: relative;\n  display: inline-block;\n  padding: 22px 0; }\n  .sidemenu .sidemenu-toggle {\n    text-align: center;\n    cursor: pointer;\n    position: absolute;\n    top: 0;\n    width: 40px;\n    right: -40px;\n    height: 30px;\n    line-height: 30px;\n    background: #f8f8f8;\n    border-radius: 0 4px 4px 0;\n    display: none; }\n    .sidemenu .sidemenu-toggle img {\n      width: 16px;\n      text-align: center;\n      vertical-align: middle; }\n  .sidemenu ul {\n    list-style: none;\n    padding: 0;\n    margin: 0; }\n  .sidemenu li {\n    line-height: 0; }\n  .sidemenu span, .sidemenu a {\n    box-sizing: border-box;\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap; }\n  .sidemenu .menu-item-selected a {\n    background: white; }\n  .sidemenu .menu-item-selected a::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 4px;\n    height: 100%;\n    background-image: linear-gradient(0deg, #267DF7 0%, #267DF7 51%, #267DF7 100%); }\n  .sidemenu .menu-item-level-1 > span {\n    font-family: Avenir-Heavy;\n    font-size: 18px;\n    color: #333;\n    padding-left: 20px;\n    height: 40px;\n    line-height: 40px; }\n  .sidemenu .menu-item-level-2, .sidemenu .menu-item-level-3 {\n    cursor: pointer; }\n    .sidemenu .menu-item-level-2 > span, .sidemenu .menu-item-level-2 > a, .sidemenu .menu-item-level-3 > span, .sidemenu .menu-item-level-3 > a {\n      font-family: Avenir-Medium;\n      font-size: 14px;\n      color: #666; }\n      .sidemenu .menu-item-level-2 > span:hover, .sidemenu .menu-item-level-2 > a:hover, .sidemenu .menu-item-level-3 > span:hover, .sidemenu .menu-item-level-3 > a:hover {\n        background: white; }\n        .sidemenu .menu-item-level-2 > span:hover::before, .sidemenu .menu-item-level-2 > a:hover::before, .sidemenu .menu-item-level-3 > span:hover::before, .sidemenu .menu-item-level-3 > a:hover::before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          width: 4px;\n          height: 100%;\n          background-image: linear-gradient(0deg, #267DF7 0%, #267DF7 51%, #267DF7 100%); }\n  .sidemenu .menu-item-level-2 > span, .sidemenu .menu-item-level-2 > a {\n    padding-left: 40px;\n    height: 36px;\n    line-height: 36px; }\n    .sidemenu .menu-item-level-2 > span img.menu-toggle, .sidemenu .menu-item-level-2 > a img.menu-toggle {\n      float: right;\n      width: 13px;\n      height: 8px;\n      margin: 14px 20px 14px 0; }\n  .sidemenu .menu-item-level-3 > a {\n    padding-left: 60px;\n    height: 36px;\n    line-height: 36px; }\n\n@media screen and (max-width: 640px) {\n  .sidemenu {\n    width: 0; }\n    .sidemenu .sidemenu-toggle {\n      display: inline-block; }\n    .sidemenu.sidemenu-open {\n      width: 295px; } }\n"},,,,,,function(t,e){t.exports=".documentation-page .content-section .content-body {\n  box-sizing: border-box;\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 75px 40px 80px;\n  position: relative;\n  min-height: 1100px; }\n  .documentation-page .content-section .content-body .doc-content {\n    display: inline-block;\n    vertical-align: top;\n    box-sizing: border-box;\n    padding: 0 6% 0;\n    width: calc(100% - 295px); }\n\n@media screen and (max-width: 640px) {\n  .documentation-page .content-section .content-body {\n    padding-left: 20px;\n    padding-right: 20px; }\n    .documentation-page .content-section .content-body .doc-content {\n      width: 100%; }\n    .documentation-page .content-section .content-body .sidemenu {\n      position: absolute;\n      z-index: 100;\n      left: 0;\n      top: 40px; } }\n"},,,,function(t,e,n){n(5)(n(102))},,,,,,function(t,e,n){n(5)(n(108))}]);