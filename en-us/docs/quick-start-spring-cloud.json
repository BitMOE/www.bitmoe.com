{
  "filename": "quick-start-spring-cloud.md",
  "__html": "<h1>前提条件</h1>\n<p>请先参看 <a href=\"https://nacos.io/zh-cn/docs/quick-start.html\">Nacos 快速入门</a>，下载 Nacos Server 并启动服务。</p>\n<h1>配置管理</h1>\n<p><span data-type=\"color\" style=\"color:rgb(38, 38, 38)\"><span data-type=\"background\" style=\"background-color:rgb(255, 255, 255)\">完整示例代码</span></span>：<a href=\"https://github.com/nacos-group/nacos-example/nacos-spring-cloud-config-example\">nacos-spring-cloud-config-example</a></p>\n<h2>依赖</h2>\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;/artifactId&gt;\n    &lt;version&gt;${latest.version}&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n<h2>示例</h2>\n<p><span data-type=\"color\" style=\"color:rgb(38, 38, 38)\"><span data-type=\"background\" style=\"background-color:rgb(255, 255, 255)\">在 </span></span><code>bootstrap.properties</code><span data-type=\"color\" style=\"color:rgb(38, 38, 38)\"><span data-type=\"background\" style=\"background-color:rgb(255, 255, 255)\"> 中配置 Nacos Server 的地址：</span></span></p>\n<pre><code>spring.cloud.nacos.config.server-addr=127.0.0.1:8848\n</code></pre>\n<p>在 <code>application.properties</code> 配置：</p>\n<pre><code>spring.application.name=example\n</code></pre>\n<p>在 Nacos Spring Cloud 中，Nacos 配置管理的 <code>dataId</code> 的拼接格式如下</p>\n<pre><code class=\"language-plain\">${prefix}-${spring.profile.active}.${file-extension}\n</code></pre>\n<ul>\n<li><code>prefix</code> 默认为 <code>spring.application.name</code> 的值，也可以通过配置项 <code>spring.cloud.nacos.config.prefix</code>来配置。</li>\n<li><code>spring.profile.active</code> 即为当前环境对应的 profile，详情可以参考 <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-profiles.html#boot-features-profiles\">Spring Boot文档</a>\n__注意，当 __<code>spring.profile.active</code><strong> 为空时，对应的连接符 </strong><strong><code>-</code></strong><strong> 也将不存在，dataId 的拼接格式变成 </strong><strong><code><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>f</mi><mi>i</mi><mi>x</mi></mrow><mo>&lt;</mo><mi mathvariant=\"normal\">/</mi><mi>c</mi><mi>o</mi><mi>d</mi><mi>e</mi><mo>&gt;</mo><mo>&lt;</mo><mi mathvariant=\"normal\">/</mi><mi>s</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>n</mi><mi>g</mi><mo>&gt;</mo><mo>&lt;</mo><mi>s</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>n</mi><mi>g</mi><mo>&gt;</mo><mi mathvariant=\"normal\">.</mi><mo>&lt;</mo><mi mathvariant=\"normal\">/</mi><mi>s</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>n</mi><mi>g</mi><mo>&gt;</mo><mo>&lt;</mo><mi>s</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>n</mi><mi>g</mi><mo>&gt;</mo><mo>&lt;</mo><mi>c</mi><mi>o</mi><mi>d</mi><mi>e</mi><mo>&gt;</mo></mrow><annotation encoding=\"application/x-tex\">{prefix}&lt;/code&gt;&lt;/strong&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;strong&gt;&lt;code&gt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord textstyle uncramped\"><span class=\"mord mathit\">p</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathit\">e</span><span class=\"mord mathit\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathit\">i</span><span class=\"mord mathit\">x</span></span><span class=\"mrel\">&lt;</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\">c</span><span class=\"mord mathit\">o</span><span class=\"mord mathit\">d</span><span class=\"mord mathit\">e</span><span class=\"mrel\">&gt;</span><span class=\"mrel\">&lt;</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">t</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathit\">o</span><span class=\"mord mathit\">n</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span><span class=\"mrel\">&gt;</span><span class=\"mrel\">&lt;</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">t</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathit\">o</span><span class=\"mord mathit\">n</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span><span class=\"mrel\">&gt;</span><span class=\"mord mathrm\">.</span><span class=\"mrel\">&lt;</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">t</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathit\">o</span><span class=\"mord mathit\">n</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span><span class=\"mrel\">&gt;</span><span class=\"mrel\">&lt;</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">t</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathit\">o</span><span class=\"mord mathit\">n</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span><span class=\"mrel\">&gt;</span><span class=\"mrel\">&lt;</span><span class=\"mord mathit\">c</span><span class=\"mord mathit\">o</span><span class=\"mord mathit\">d</span><span class=\"mord mathit\">e</span><span class=\"mrel\">&gt;</span></span></span></span>{file-extension}</code></strong></li>\n<li><code>file-exetension</code> 为配置内容的数据格式，可以通过配置项 <code>spring.cloud.nacos.config.file-extension</code> 来配置。目前只支持 <code>properties</code> 类型。</li>\n</ul>\n<p>通过 Spring Cloud 原生注解 <code>@RefreshScope</code> 实现配置自动更新：</p>\n<pre><code>@RestController\n@RequestMapping(&quot;/config&quot;)\n@RefreshScope\npublic class ConfigController {\n\n    @Value(&quot;${useLocalCache:false}&quot;)\n    private boolean useLocalCache;\n\n    @RequestMapping(&quot;/get&quot;)\n    public boolean get() {\n        return useLocalCache;\n    }\n}\n</code></pre>\n<h2>运行</h2>\n<p>首先通过调用 <a href=\"https://nacos.io/zh-cn/docs/open-API.html\">Nacos Open API</a> 向 Nacos Server 发布配置：dataId 为<code>example.properties</code>，内容为<code>useLocalCache=true</code></p>\n<pre><code>curl -X POST &quot;http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=example.properties&amp;group=DEFAULT_GROUP&amp;content=useLocalCache=true&quot;\n</code></pre>\n<p>运行 <code>NacosConfigApplication</code>，调用 <code>curl http://localhost:8080/config/get</code>，返回内容是 <code>true</code>。</p>\n<p>再次调用 <a href=\"https://nacos.io/zh-cn/docs/open-API.html\">Nacos Open API</a> 向 Nacos Server 发布配置：dataId 为<code>example.properties</code>，内容为<code>useLocalCache=false</code></p>\n<pre><code>curl -X POST &quot;http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=example.properties&amp;group=DEFAULT_GROUP&amp;content=useLocalCache=false&quot;\n</code></pre>\n<p>再次访问 <code>http://localhost:8080/config/get</code>，此时返回内容为<code>false</code>，说明程序中的<code>useLocalCache</code>值已经被动态更新了。</p>\n<h1>服务发现</h1>\n<p>完整示例代码：<a href=\"https://github.com/nacos-group/nacos-example/nacos-spring-cloud-discovery-example\">nacos-spring-cloud-discovery-example</a></p>\n<h2>依赖</h2>\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;/artifactId&gt;\n    &lt;version&gt;${latest.version}&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n<h2>示例</h2>\n<h4>服务提供者</h4>\n<p>在 <code>application.properties</code> 中配置 Nacos Server 的地址：</p>\n<pre><code>server.port=8070\nspring.application.name=service-provider\n\nspring.cloud.nacos.discovery.server-addr=127.0.0.1:8848\n</code></pre>\n<p>通过 Spring Cloud 原生注解 <code>@EnableDiscoveryClient</code> 开启服务注册发现功能：</p>\n<pre><code>@SpringBootApplication\n@EnableDiscoveryClient\npublic class NacosProviderApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(NacosProviderApplication.class, args);\n\t}\n\n\t@RestController\n\tclass EchoController {\n\t\t@RequestMapping(value = &quot;/echo/{string}&quot;, method = RequestMethod.GET)\n\t\tpublic String echo(@PathVariable String string) {\n\t\t\treturn &quot;Hello Nacos Discovery &quot; + string;\n\t\t}\n\t}\n}\n</code></pre>\n<h4>服务消费者</h4>\n<p>在 <code>application.properties</code> 中配置 Nacos Server 的地址：</p>\n<pre><code>server.port=8080\nspring.application.name=service-consumer\n\nspring.cloud.nacos.discovery.server-addr=127.0.0.1:8848\n</code></pre>\n<p>通过 Spring Cloud 原生注解 <code>@EnableDiscoveryClient</code>  开启服务注册发现功能，给 <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-resttemplate.html\">RestTemplate</a> 实例添加  <code>@LoadBalanced</code> 注解，开启 <code>@LoadBalanced</code> 与 <a href=\"https://cloud.spring.io/spring-cloud-netflix/multi/multi_spring-cloud-ribbon.html\">Ribbon</a> 的集成：</p>\n<pre><code>@SpringBootApplication\n@EnableDiscoveryClient\npublic class NacosConsumerApplication {\n\n    @LoadBalanced\n    @Bean\n    public RestTemplate restTemplate() {\n        return new RestTemplate();\n    }\n\n    public static void main(String[] args) {\n        SpringApplication.run(NacosConsumerApplication.class, args);\n    }\n\n    @RestController\n    public class TestController {\n\n        private final RestTemplate restTemplate;\n\n        @Autowired\n        public TestController(RestTemplate restTemplate) {this.restTemplate = restTemplate;}\n\n        @RequestMapping(value = &quot;/echo/{str}&quot;, method = RequestMethod.GET)\n        public String echo(@PathVariable String str) {\n            return restTemplate.getForObject(&quot;http://service-provider/echo/&quot; + str, String.class);\n        }\n    }\n}\n</code></pre>\n<h2>运行</h2>\n<p>启动 <code>ProviderApplication</code> 和 <code>ConsumerApplication</code> ，调用 <code>http://localhost:8080/echo/2018</code>，返回内容为 <code>Hello Nacos Discovery 2018</code>。</p>\n<h1>更多</h1>\n<ul>\n<li><a href=\"https://github.com/alibaba/nacos\">Nacos</a></li>\n<li><a href=\"https://github.com/nacos-group/nacos-spring-project\">Nacos Spring</a></li>\n<li><a href=\"https://github.com/nacos-group/nacos-spring-boot-project\">Nacos Spring Boot</a></li>\n<li><a href=\"https://github.com/spring-cloud-incubator/spring-cloud-alibaba\">Spring Cloud</a> <a href=\"https://github.com/spring-cloud-incubator/spring-cloud-alibaba\">Alibaba</a></li>\n</ul>\n"
}